var searchIndex = new Map(JSON.parse('[\
["bytes",{"doc":"Provides abstractions for working with bytes.","t":"EEFFNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKFFFFFFFMNNMNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Buf","BufMut","Bytes","BytesMut","advance","advance","advance_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf","capacity","chunk","chunk","chunk_mut","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","copy_from_slice","copy_to_bytes","copy_to_bytes","default","default","deref","deref","deref_mut","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_static","hash","hash","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_unique","len","len","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","put","put_bytes","put_slice","remaining","remaining","remaining_mut","reserve","resize","set_len","slice","slice_ref","spare_capacity_mut","split","split_off","split_off","split_to","split_to","to_owned","to_owned","truncate","truncate","try_from","try_from","try_into","try_into","type_id","type_id","unsplit","with_capacity","write_fmt","write_str","zeroed","Buf","BufMut","Chain","IntoIter","Limit","Reader","Take","UninitSlice","Writer","advance","advance","advance","advance_mut","advance_mut","advance_mut","as_mut_ptr","as_uninit_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","chain_mut","chain_mut","chunk","chunk","chunk","chunk_mut","chunk_mut","chunk_mut","chunks_vectored","chunks_vectored","chunks_vectored","consume","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_slice","copy_to_slice","fill_buf","first_mut","first_ref","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw_parts_mut","get_f32","get_f32","get_f32_le","get_f32_le","get_f32_ne","get_f32_ne","get_f64","get_f64","get_f64_le","get_f64_le","get_f64_ne","get_f64_ne","get_i128","get_i128","get_i128_le","get_i128_le","get_i128_ne","get_i128_ne","get_i16","get_i16","get_i16_le","get_i16_le","get_i16_ne","get_i16_ne","get_i32","get_i32","get_i32_le","get_i32_le","get_i32_ne","get_i32_ne","get_i64","get_i64","get_i64_le","get_i64_le","get_i64_ne","get_i64_ne","get_i8","get_i8","get_int","get_int","get_int_le","get_int_le","get_int_ne","get_int_ne","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_u128","get_u128","get_u128_le","get_u128_le","get_u128_ne","get_u128_ne","get_u16","get_u16","get_u16_le","get_u16_le","get_u16_ne","get_u16_ne","get_u32","get_u32","get_u32_le","get_u32_le","get_u32_ne","get_u32_ne","get_u64","get_u64","get_u64_le","get_u64_le","get_u64_ne","get_u64_ne","get_u8","get_u8","get_uint","get_uint","get_uint_le","get_uint_le","get_uint_ne","get_uint_ne","has_remaining","has_remaining","has_remaining_mut","has_remaining_mut","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","last_mut","last_ref","len","limit","limit","limit","limit","new","new","next","put","put","put_bytes","put_bytes","put_f32","put_f32","put_f32_le","put_f32_le","put_f32_ne","put_f32_ne","put_f64","put_f64","put_f64_le","put_f64_le","put_f64_ne","put_f64_ne","put_i128","put_i128","put_i128_le","put_i128_le","put_i128_ne","put_i128_ne","put_i16","put_i16","put_i16_le","put_i16_le","put_i16_ne","put_i16_ne","put_i32","put_i32","put_i32_le","put_i32_le","put_i32_ne","put_i32_ne","put_i64","put_i64","put_i64_le","put_i64_le","put_i64_ne","put_i64_ne","put_i8","put_i8","put_int","put_int","put_int_le","put_int_le","put_int_ne","put_int_ne","put_slice","put_slice","put_u128","put_u128","put_u128_le","put_u128_le","put_u128_ne","put_u128_ne","put_u16","put_u16","put_u16_le","put_u16_le","put_u16_ne","put_u16_ne","put_u32","put_u32","put_u32_le","put_u32_le","put_u32_ne","put_u32_ne","put_u64","put_u64","put_u64_le","put_u64_le","put_u64_ne","put_u64_ne","put_u8","put_u8","put_uint","put_uint","put_uint_le","put_uint_le","put_uint_ne","put_uint_ne","read","reader","reader","remaining","remaining","remaining","remaining_mut","remaining_mut","remaining_mut","set_limit","set_limit","size_hint","take","take","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninit","write","write_byte","writer","writer"],"q":[[0,"bytes"],[138,"bytes::buf"],[456,"core::cmp"],[457,"core::marker"],[458,"alloc::vec"],[459,"alloc::string"],[460,"core::iter::traits::collect"],[461,"core::fmt"],[462,"core::fmt"],[463,"core::hash"],[464,"core::option"],[465,"core::ops::range"],[466,"core::mem::maybe_uninit"],[467,"core::result"],[468,"core::any"],[469,"core::fmt"],[470,"std::io::error"],[471,"core::fmt"]],"d":["","","A cheaply cloneable and sliceable chunk of contiguous …","A unique reference to a contiguous slice of memory.","","","","","","","","","","","","","","Utilities for working with buffers.","Returns the number of bytes the <code>BytesMut</code> can hold without …","","","","Clears the buffer, removing all data.","Clears the buffer, removing all data. Existing capacity is …","","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends given bytes to this <code>BytesMut</code>.","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Creates a new <code>Bytes</code> from a static slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns true if this is the only reference to the data.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","Creates a new empty <code>Bytes</code>.","Creates a new <code>BytesMut</code> with default capacity.","","","","","","","","","","","","","","","","","","","Reserves capacity for at least <code>additional</code> more bytes to be …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Sets the length of the buffer.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","Returns the remaining spare capacity of the buffer as a …","Removes the bytes from the current view, returning them in …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Creates a new <code>BytesMut</code> with the specified capacity.","","","Creates a new <code>BytesMut</code>, which is initialized with zero.","Read bytes from a buffer.","A trait for values that provide sequential write access to …","A <code>Chain</code> sequences two buffers.","Iterator over the bytes contained by the buffer.","A <code>BufMut</code> adapter which limits the amount of bytes that can …","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …","A <code>Buf</code> adapter which limits the bytes read from an …","Uninitialized byte slice.","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","Return a raw pointer to the slice’s buffer.","Return a <code>&amp;mut [MaybeUninit&lt;u8&gt;]</code> to this slice’s buffer.","","","","","","","","","","","","","","","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","","","Copies bytes  from <code>src</code> into <code>self</code>.","Consumes <code>len</code> bytes inside self and returns new instance of …","Consumes <code>len</code> bytes inside self and returns new instance of …","","","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","","Gets a mutable reference to the first underlying <code>Buf</code>.","Gets a reference to the first underlying <code>Buf</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>&amp;mut UninitSlice</code> from a pointer and a length.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in native-endian …","Gets a signed 128 bit integer from <code>self</code> in native-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in native-endian …","Gets a signed 16 bit integer from <code>self</code> in native-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in native-endian …","Gets a signed 32 bit integer from <code>self</code> in native-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in native-endian …","Gets a signed 64 bit integer from <code>self</code> in native-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in native-endian …","Gets a signed n-byte integer from <code>self</code> in native-endian …","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in native-endian …","Gets an unsigned 16 bit integer from <code>self</code> in native-endian …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in native-endian …","Gets an unsigned 32 bit integer from <code>self</code> in native-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in native-endian …","Gets an unsigned 64 bit integer from <code>self</code> in native-endian …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in native-endian …","Gets an unsigned n-byte integer from <code>self</code> in native-endian …","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Chain</code>, returning the underlying values.","Consumes this <code>IntoIter</code>, returning the underlying value.","Consumes this <code>Limit</code>, returning the underlying value.","Consumes this <code>Reader</code>, returning the underlying value.","Consumes this <code>Take</code>, returning the underlying value.","Consumes this <code>Writer</code>, returning the underlying value.","","","Gets a mutable reference to the last underlying <code>Buf</code>.","Gets a reference to the last underlying <code>Buf</code>.","Returns the number of bytes in the slice.","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Returns the maximum number of bytes that can be written","Returns the maximum number of bytes that can be read.","Creates a <code>&amp;mut UninitSlice</code> wrapping a slice of initialised …","Creates an iterator over the bytes contained by the buffer.","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Put <code>cnt</code> bytes <code>val</code> into <code>self</code>.","Put <code>cnt</code> bytes <code>val</code> into <code>self</code>.","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes an IEEE754 single-precision (4 bytes) floating …","Writes an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in native-endian …","Writes a signed 128 bit integer to <code>self</code> in native-endian …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in native-endian …","Writes a signed 16 bit integer to <code>self</code> in native-endian …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in native-endian …","Writes a signed 32 bit integer to <code>self</code> in native-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in native-endian …","Writes a signed 64 bit integer to <code>self</code> in native-endian …","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in native-endian …","Writes an unsigned 16 bit integer to <code>self</code> in native-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in native-endian …","Writes an unsigned 32 bit integer to <code>self</code> in native-endian …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in native-endian …","Writes an unsigned 64 bit integer to <code>self</code> in native-endian …","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","","Sets the maximum number of bytes that can be written.","Sets the maximum number of bytes that can be read.","","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","Creates a <code>&amp;mut UninitSlice</code> wrapping a slice of …","","Write a single byte at the specified offset.","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …"],"i":[0,0,0,0,1,4,4,4,1,4,1,1,4,4,1,4,4,0,4,1,4,4,1,4,1,4,1,4,1,4,1,1,4,1,4,1,4,4,1,4,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,1,1,1,4,4,4,4,1,1,1,1,1,1,1,4,4,4,1,4,4,1,1,4,1,4,1,1,4,4,1,4,1,1,4,1,4,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,1,1,4,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,21,27,28,29,27,30,7,7,7,27,36,30,32,28,34,7,27,36,30,32,28,34,21,21,29,29,21,27,28,29,27,30,21,21,27,32,7,21,21,27,28,21,21,32,27,27,34,7,27,36,30,32,28,34,7,7,27,36,30,32,28,34,7,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,36,30,32,28,34,36,30,32,28,34,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,29,29,7,7,7,7,7,7,7,7,7,7,7,7,27,36,30,32,28,34,27,36,30,32,28,34,27,36,27,27,7,29,29,30,28,7,36,36,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,32,21,21,21,27,28,29,27,30,30,28,36,21,21,27,36,30,32,28,34,27,36,30,32,28,34,7,27,36,30,32,28,34,7,34,7,29,29],"f":"````{{bd}f}{{hd}f}0{h{{l{j}}}}{b{{l{j}}}}10{ce{}{}}02020`{hd}23{hn}{bf}{hf}{bb}{hh}{{ce}f{}{}}0{{bb}A`}{{hh}A`}{{{l{j}}}b}{{bd}b}{{hd}b}{{}b}{{}h}?{h{{l{j}}}}0<;{{b{l{j}}}Ab}{{bc}AbAd}{{b{Af{j}}}Ab}{{bh}Ab}{{bAh}Ab}{{bb}Ab}{{bAj}Ab}{{h{l{j}}}Ab}{{hh}Ab}{{hc}AbAd}{{h{Af{j}}}Ab}{{hAj}Ab}{{hAh}Ab}{{hb}Ab}{{hc}f{{An{}{{Al{j}}}}}}{{hc}f{{An{}{{Al{b}}}}}}1{{h{l{j}}}f}{{bB`}Bb}00{{hB`}Bb}00{hb}{Ahb}{{{Bd{{l{j}}}}}b}{{{Af{j}}}b}{cc{}}4{Ajb}{{{l{j}}}b}2{{{l{j}}}h}{Ahh}{cb{{An{}{{Al{j}}}}}}{ch{{An{}{{Al{j}}}}}}04{{bc}fBf}{{hc}fBf}{ce{}{}}0{bc{}}0{hc{}}0{bAb}{hAb}1{bd}{hd}{{}b}{{}h}{{b{l{j}}}{{Bh{A`}}}}{{bAh}{{Bh{A`}}}}{{bAj}{{Bh{A`}}}}{{bb}{{Bh{A`}}}}{{bc}{{Bh{A`}}}Ad}{{b{Af{j}}}{{Bh{A`}}}}{{hAj}{{Bh{A`}}}}{{hc}{{Bh{A`}}}Ad}{{hh}{{Bh{A`}}}}{{h{l{j}}}{{Bh{A`}}}}{{hAh}{{Bh{A`}}}}{{h{Af{j}}}{{Bh{A`}}}}{{hc}fBj}{{hjd}f}{{h{l{j}}}f}{bd}{hd}0{{hd}f}{{hdj}f}1{{bc}b{{Bl{d}}}}{{b{l{j}}}b}{h{{l{{Bn{j}}}}}}{hh}{{bd}b}{{hd}h}10{ce{}{}}0{{bd}f}9{c{{C`{e}}}{}{}}000{cCb{}}0{{hh}f}{dh}{{hCd}Bb}{{hAh}Bb}2`````````{{Bjd}f}{{{Cf{ce}}d}fBjBj}{{{Ch{c}}d}fBj}{{Cjd}f}{{{Cf{ce}}d}fCjCj}{{{Cl{c}}d}fCj}{nj}{n{{l{{Bn{j}}}}}}??????????????{{Bjc}{{Cf{Bjc}}}Bj}0{{Cjc}{{Cf{Cjc}}}Cj}0{Bj{{l{j}}}}{{{Cf{ce}}}{{l{j}}}BjBj}{{{Ch{c}}}{{l{j}}}Bj}{Cjn}{{{Cf{ce}}}nCjCj}{{{Cl{c}}}nCj}{{Bj{l{Cn}}}d}0{{{Cf{ce}}{l{Cn}}}dBjBj}{{{D`{c}}d}f{BjAd}}{{n{l{j}}}f}{{Bjd}b}0{{{Cf{ce}}d}bBjBj}{{{Ch{c}}d}bBj}{{Bj{l{j}}}f}0{{{D`{c}}}{{Db{{l{j}}}}}{BjAd}}{{{Cf{ce}}}c{}{}}0{{{Dd{c}}}{{Db{f}}}{CjAd}}{{nB`}Bb}{{{Cf{ce}}B`}BbDfDf}{{{Dh{c}}B`}BbDf}{{{Cl{c}}B`}BbDf}{{{D`{c}}B`}BbDf}{{{Ch{c}}B`}BbDf}{{{Dd{c}}B`}BbDf}{{{l{j}}}n}{{{l{{Bn{j}}}}}n}{cc{}}00000{{jd}n}{BjDj}00000{BjDl}00000{BjDn}00000{BjE`}00000{BjEb}00000{BjEd}00000{BjEf}0{{Bjd}Ed}00000{{{Dh{c}}}c{}}{{{Cl{c}}}c{}}{{{D`{c}}}cBj}{{{Ch{c}}}c{}}{{{Dd{c}}}cCj}43210{BjEh}00000{BjEj}00000{BjEl}00000{BjEn}00000{Bjj}0{{Bjd}En}00000{BjAb}0{CjAb}0{{n{F`{d}}}n}{{n{Fb{d}}}n}{{nFd}n}{{n{Ff{d}}}n}{{n{Fh{d}}}n}{{n{Fj{d}}}n}124035{ce{}{}}00000{{{Cf{ce}}}{{Fl{ce}}}{}{}}{{{Dh{c}}}c{}}{{{Cl{c}}}c{}}{{{D`{c}}}cBj}{{{Ch{c}}}c{}}{{{Dd{c}}}cCj}{{{Cf{ce}}}gBjBj{}}7{{{Cf{ce}}}e{}{}}0{nd}{{Cjd}{{Cl{Cj}}}}0{{{Cl{c}}}d{}}{{{Ch{c}}}d{}}{{{l{j}}}n}{c{{Dh{c}}}{}}{{{Dh{c}}}{{Bh{j}}}Bj}{{Cjc}fBj}0{{Cjjd}f}0{{CjDj}f}00000{{CjDl}f}00000{{CjDn}f}00000{{CjE`}f}00000{{CjEb}f}00000{{CjEd}f}00000{{CjEf}f}0{{CjEdd}f}00000{{Cj{l{j}}}f}0{{CjEh}f}00000{{CjEj}f}00000{{CjEl}f}00000{{CjEn}f}00000{{Cjj}f}0{{CjEnd}f}00000{{{D`{c}}{l{j}}}{{Db{d}}}{BjAd}}{Bj{{D`{Bj}}}}0{Bjd}{{{Cf{ce}}}dBjBj}{{{Ch{c}}}dBj}{Cjd}{{{Cf{ce}}}dCjCj}{{{Cl{c}}}dCj}{{{Cl{c}}d}f{}}{{{Ch{c}}d}f{}}{{{Dh{c}}}{{Fl{d{Bh{d}}}}}Bj}{{Bjd}{{Ch{Bj}}}}0{c{{C`{e}}}{}{}}00000000000{cCb{}}000000{{{l{{Bn{j}}}}}n}{{{Dd{c}}{l{j}}}{{Db{d}}}{CjAd}}{{ndj}f}{Cj{{Dd{Cj}}}}0","c":[],"p":[[5,"Bytes",0],[1,"usize"],[1,"unit"],[5,"BytesMut",0],[1,"u8"],[1,"slice"],[5,"UninitSlice",138],[6,"Ordering",456],[1,"bool"],[10,"Sized",457],[5,"Vec",458],[1,"str"],[5,"String",459],[17,"Item"],[10,"IntoIterator",460],[5,"Formatter",461],[8,"Result",461],[5,"Box",462],[10,"Hasher",463],[6,"Option",464],[10,"Buf",138],[10,"RangeBounds",465],[20,"MaybeUninit",466],[6,"Result",467],[5,"TypeId",468],[5,"Arguments",461],[5,"Chain",138],[5,"Take",138],[10,"BufMut",138],[5,"Limit",138],[5,"IoSlice",469],[5,"Reader",138],[8,"Result",470],[5,"Writer",138],[10,"Debug",461],[5,"IntoIter",138],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[5,"Range",465],[5,"RangeTo",465],[5,"RangeFull",465],[5,"RangeInclusive",465],[5,"RangeToInclusive",465],[5,"RangeFrom",465],[1,"tuple"]],"b":[[40,"impl-PartialEq%3C%5Bu8%5D%3E-for-Bytes"],[41,"impl-PartialEq%3C%26T%3E-for-Bytes"],[42,"impl-PartialEq%3CVec%3Cu8%3E%3E-for-Bytes"],[43,"impl-PartialEq%3CBytesMut%3E-for-Bytes"],[44,"impl-PartialEq%3Cstr%3E-for-Bytes"],[45,"impl-PartialEq-for-Bytes"],[46,"impl-PartialEq%3CString%3E-for-Bytes"],[47,"impl-PartialEq%3C%5Bu8%5D%3E-for-BytesMut"],[48,"impl-PartialEq-for-BytesMut"],[49,"impl-PartialEq%3C%26T%3E-for-BytesMut"],[50,"impl-PartialEq%3CVec%3Cu8%3E%3E-for-BytesMut"],[51,"impl-PartialEq%3CString%3E-for-BytesMut"],[52,"impl-PartialEq%3Cstr%3E-for-BytesMut"],[53,"impl-PartialEq%3CBytes%3E-for-BytesMut"],[54,"impl-Extend%3Cu8%3E-for-BytesMut"],[55,"impl-Extend%3CBytes%3E-for-BytesMut"],[56,"impl-Extend%3C%26u8%3E-for-BytesMut"],[58,"impl-LowerHex-for-Bytes"],[59,"impl-UpperHex-for-Bytes"],[60,"impl-Debug-for-Bytes"],[61,"impl-UpperHex-for-BytesMut"],[62,"impl-LowerHex-for-BytesMut"],[63,"impl-Debug-for-BytesMut"],[65,"impl-From%3C%26str%3E-for-Bytes"],[66,"impl-From%3CBox%3C%5Bu8%5D%3E%3E-for-Bytes"],[67,"impl-From%3CVec%3Cu8%3E%3E-for-Bytes"],[69,"impl-From%3CBytesMut%3E-for-Bytes"],[70,"impl-From%3CString%3E-for-Bytes"],[71,"impl-From%3C%26%5Bu8%5D%3E-for-Bytes"],[73,"impl-From%3C%26%5Bu8%5D%3E-for-BytesMut"],[74,"impl-From%3C%26str%3E-for-BytesMut"],[76,"impl-FromIterator%3C%26u8%3E-for-BytesMut"],[77,"impl-FromIterator%3Cu8%3E-for-BytesMut"],[83,"impl-IntoIterator-for-Bytes"],[84,"impl-IntoIterator-for-%26Bytes"],[85,"impl-IntoIterator-for-BytesMut"],[86,"impl-IntoIterator-for-%26BytesMut"],[94,"impl-PartialOrd%3C%5Bu8%5D%3E-for-Bytes"],[95,"impl-PartialOrd%3Cstr%3E-for-Bytes"],[96,"impl-PartialOrd%3CString%3E-for-Bytes"],[97,"impl-PartialOrd-for-Bytes"],[98,"impl-PartialOrd%3C%26T%3E-for-Bytes"],[99,"impl-PartialOrd%3CVec%3Cu8%3E%3E-for-Bytes"],[100,"impl-PartialOrd%3CString%3E-for-BytesMut"],[101,"impl-PartialOrd%3C%26T%3E-for-BytesMut"],[102,"impl-PartialOrd-for-BytesMut"],[103,"impl-PartialOrd%3C%5Bu8%5D%3E-for-BytesMut"],[104,"impl-PartialOrd%3Cstr%3E-for-BytesMut"],[105,"impl-PartialOrd%3CVec%3Cu8%3E%3E-for-BytesMut"],[201,"impl-From%3C%26mut+%5Bu8%5D%3E-for-%26mut+UninitSlice"],[202,"impl-From%3C%26mut+%5BMaybeUninit%3Cu8%3E%5D%3E-for-%26mut+UninitSlice"],[300,"impl-Index%3CRange%3Cusize%3E%3E-for-UninitSlice"],[301,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-UninitSlice"],[302,"impl-Index%3CRangeFull%3E-for-UninitSlice"],[303,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-UninitSlice"],[304,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-UninitSlice"],[305,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-UninitSlice"],[306,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-UninitSlice"],[307,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-UninitSlice"],[308,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-UninitSlice"],[309,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-UninitSlice"],[310,"impl-IndexMut%3CRangeFull%3E-for-UninitSlice"],[311,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-UninitSlice"]]}],\
["cfg_if",{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"Q","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":"`","c":[],"p":[],"b":[]}],\
["echo_server",{"doc":"","t":"H","n":["main"],"q":[[0,"echo_server"],[1,"std::io::error"]],"d":["Point d’entrée principal de l’application. Ce serveur …"],"i":[0],"f":"{{}{{d{b}}}}","c":[],"p":[[1,"unit"],[8,"Result",1]],"b":[]}],\
["echo_server2",{"doc":"","t":"H","n":["main"],"q":[[0,"echo_server2"],[1,"std::io::error"]],"d":["Point d’entrée principal de l’application. Ce serveur …"],"i":[0],"f":"{{}{{d{b}}}}","c":[],"p":[[1,"unit"],[8,"Result",1]],"b":[]}],\
["getrandom",{"doc":"Interface to the operating system’s random number …","t":"TTFTTTTTTTTTTTTTNNNNNNNNNNHHNNNNNNN","n":["CUSTOM_START","ERRNO_NOT_POSITIVE","Error","FAILED_RDRAND","INTERNAL_START","IOS_SEC_RANDOM","NODE_CRYPTO","NODE_ES_MODULE","NODE_RANDOM_FILL_SYNC","NO_RDRAND","UNEXPECTED","UNSUPPORTED","VXWORKS_RAND_SECURE","WEB_CRYPTO","WEB_GET_RANDOM_VALUES","WINDOWS_RTL_GEN_RANDOM","borrow","borrow_mut","clone","clone_into","code","eq","fmt","fmt","from","from","getrandom","getrandom_uninit","into","raw_os_error","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"getrandom"],[35,"core::num::nonzero"],[36,"core::fmt"],[37,"core::fmt"],[38,"core::mem::maybe_uninit"],[39,"core::option"],[40,"alloc::string"],[41,"core::any"]],"d":["Codes at or above this point can be used by users to …","The platform-specific <code>errno</code> returned a non-positive value.","A small and <code>no_std</code> compatible error type","RDRAND instruction failed due to a hardware issue.","Codes below this point represent OS Errors (i.e. positive …","Call to <code>CCRandomGenerateBytes</code> failed on iOS, tvOS, or …","Node.js does not have the <code>crypto</code> CommonJS module.","Called from an ES module on Node.js. This is unsupported, …","Calling Node.js function <code>crypto.randomFillSync</code> failed.","RDRAND instruction unsupported on this target.","Encountered an unexpected situation which should not …","This target/platform is not supported by <code>getrandom</code>.","On VxWorks, call to <code>randSecure</code> failed (random number …","The environment does not support the Web Crypto API.","Calling Web Crypto API <code>crypto.getRandomValues</code> failed.","Call to Windows <code>RtlGenRandom</code> failed.","","","","","Extract the bare error code.","","","","","Returns the argument unchanged.","Fill <code>dest</code> with random bytes from the system’s preferred …","Version of the <code>getrandom</code> function which fills <code>dest</code> with …","Calls <code>U::from(self)</code>.","Extract the raw OS error code (if this error came from the …","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1],"f":"````````````````{ce{}{}}0{bb}{{ce}d{}{}}{bf}{{bb}h}{{bj}l}0{fb}{cc{}}{{{A`{n}}}{{Ab{db}}}}{{{A`{{Ad{n}}}}}{{Ab{{A`{n}}b}}}}9{b{{Ah{Af}}}}:{cAj{}}{c{{Ab{e}}}{}{}}0{cAl{}}","c":[],"p":[[5,"Error",0],[1,"unit"],[8,"NonZeroU32",35],[1,"bool"],[5,"Formatter",36],[8,"Result",36],[1,"u8"],[1,"slice"],[6,"Result",37],[20,"MaybeUninit",38],[1,"i32"],[6,"Option",39],[5,"String",40],[5,"TypeId",41]],"b":[[22,"impl-Debug-for-Error"],[23,"impl-Display-for-Error"]]}],\
["load_balancer",{"doc":"","t":"FSNNNNNHONNNNN","n":["Cache","SERVERS","borrow","borrow_mut","from","get_server","into","main","map","new","try_from","try_into","type_id","vzip"],"q":[[0,"load_balancer"],[14,"alloc::string"],[15,"std::io::error"],[16,"core::result"],[17,"core::any"]],"d":["","","","","Returns the argument unchanged.","Retourne le serveur associé à une adresse IP à partir …","Calls <code>U::from(self)</code>.","Point d’entrée principal de l’application. Configure …","","Crée une nouvelle instance de <code>Cache</code>.","","","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1],"f":"``{ce{}{}}0{cc{}}{{bd}f}2{{}{{j{h}}}}`{{}b}{c{{l{e}}}{}{}}0{cn{}}6","c":[],"p":[[5,"Cache",0],[1,"str"],[5,"String",14],[1,"unit"],[8,"Result",15],[6,"Result",16],[5,"TypeId",17]],"b":[]}],\
["lock_api",{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"RRKRRFFTTTTRRFFFFFFKKKFKKKKKKKKKKFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNMMMMMMMNNNMMMNNNNNNNNNNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNMNMMMNNNNNNNNNNMMMMNNNNNNNNNNNMNNN","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","make_guard_unchecked","make_guard_unchecked","make_read_guard_unchecked","make_upgradable_guard_unchecked","make_write_guard_unchecked","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"],[375,"core::marker"],[376,"core::default"],[377,"core::fmt"],[378,"core::fmt"],[379,"core::num::nonzero"],[380,"core::result"],[381,"core::option"],[382,"core::any"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for <code>RwLock</code>s which support atomically …","Additional methods for <code>RwLock</code>s which support fair …","Additional methods for <code>RwLock</code>s which support recursive …","Additional methods for <code>RwLock</code>s which support recursive …","Additional methods for <code>RwLock</code>s which support locking with …","Additional methods for <code>RwLock</code>s which support atomically …","Additional methods for <code>RwLock</code>s which support upgradable …","Additional methods for <code>RwLock</code>s which support upgradable …","Additional methods for <code>RwLock</code>s which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock protocol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock protocol.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Creates a new <code>MutexGuard</code> without checking if the mutex is …","Creates a new <code>ReentrantMutexGuard</code> without checking if the …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Creates a new <code>RwLockUpgradableReadGuard</code> without checking …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[42,41,0,16,17,0,0,16,4,3,17,42,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,1,1,3,5,7,8,10,11,9,9,9,9,12,12,13,14,15,13,14,15,13,14,15,5,19,7,20,8,10,11,22,23,5,19,10,23,24,10,11,25,10,25,5,19,7,20,8,10,11,22,23,13,14,15,5,5,19,19,7,7,20,20,8,8,10,10,11,11,22,22,23,23,13,14,13,14,15,15,15,15,46,47,13,13,13,3,14,14,14,15,15,15,5,19,7,20,8,10,11,22,23,13,14,15,13,14,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,13,14,15,16,16,13,3,14,17,17,15,17,17,15,3,14,5,16,13,3,14,17,17,33,21,13,14,15,15,15,5,19,7,20,8,10,22,23,5,13,14,15,4,13,14,15,15,15,7,8,10,11,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,13,3,14,17,41,41,42,13,3,14,17,41,33,43,43,41,42,13,3,14,21,44,44,5,19,7,20,8,10,22,23,15,15,15,15,15,15,15,15,15,21,11,44,11,44,11,11,11,11,15,15,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,3,17,9,1,3,5,19,7,20,8,10,11,22,23,17,9,21,12,5,7,8,10,11,5,7,8,10,11,15,21,11,11,15],"f":"```````````````````````````````````````{ce{}{}}00000000000000000000000000000{bd}0{{{f{ce}}}dbh}{{{j{ce}}}dbl}{{{n{ceg}}}dbhl}{{{A`{ce}}}dAbl}{{{Ad{ce}}}dAbl}{{{Af{ce}}}dAhl}{Abd}000{Ahd}0{{ce}{{Aj{ce}}}{}{}}{{ceg}{{Al{ceg}}}{}{}{}}{{ce}{{An{ce}}}{}{}}{{{Aj{ce}}}{}B`l}{{{Al{ceg}}}{}B`hl}{{{An{ce}}}{}Bbl}{{}{{Aj{ce}}}B`{lBd}}{{}{{Al{ceg}}}B`h{lBd}}{{}{{An{ce}}}Bb{lBd}}{{{j{ce}}}eB`l}{{{Bf{ce}}}eB`l}{{{n{ceg}}}gB`hl}{{{Bh{ceg}}}gB`hl}{{{A`{ce}}}eBbl}{{{Ad{ce}}}eBbl}{{{Af{ce}}}eBjl}{{{Bl{ce}}}eBbl}{{{Bn{ce}}}eBbl}8730{C`d}{{{Ad{ce}}}{{A`{ce}}}C`l}{{{Af{ce}}}{{A`{ce}}}Cbl}{Cbd}{{{Ad{ce}}}{{Af{ce}}}Cbl}1{{{j{ce}}}dB`l}{{{Bf{ce}}}dB`l}{{{n{ceg}}}dB`hl}{{{Bh{ceg}}}dB`hl}{{{A`{ce}}}dBbl}{{{Ad{ce}}}dBbl}{{{Af{ce}}}dBjl}{{{Bl{ce}}}dBbl}{{{Bn{ce}}}dBbl}{{{Aj{ce}}Cd}CfB`{lCh}}{{{Al{ceg}}Cd}CfB`h{lCh}}{{{An{ce}}Cd}CfBb{lCh}}{{{j{ce}}Cd}CfB`{Chl}}{{{j{ce}}Cd}CfB`{Cjl}}{{{Bf{ce}}Cd}CfB`{Cjl}}{{{Bf{ce}}Cd}CfB`{Chl}}{{{n{ceg}}Cd}CfB`h{Cjl}}{{{n{ceg}}Cd}CfB`h{Chl}}{{{Bh{ceg}}Cd}CfB`h{Chl}}{{{Bh{ceg}}Cd}CfB`h{Cjl}}{{{A`{ce}}Cd}CfBb{Cjl}}{{{A`{ce}}Cd}CfBb{Chl}}{{{Ad{ce}}Cd}CfBb{Cjl}}{{{Ad{ce}}Cd}CfBb{Chl}}{{{Af{ce}}Cd}CfBj{Chl}}{{{Af{ce}}Cd}CfBj{Cjl}}{{{Bl{ce}}Cd}CfBb{Chl}}{{{Bl{ce}}Cd}CfBb{Cjl}}{{{Bn{ce}}Cd}CfBb{Cjl}}{{{Bn{ce}}Cd}CfBb{Chl}}{{{Aj{ce}}}dB`l}{{{Al{ceg}}}dB`hl}{{{Aj{ce}}}dbl}{{{Al{ceg}}}dbhl}{{{An{ce}}}dBbl}{{{An{ce}}}dAbl}10{cc{}}0{Clc{}}{c{{Aj{ec}}}{}B`}221{c{{Al{egc}}}{}B`h}32{c{{An{ec}}}{}Bb}4444444444{{ce}{{Aj{ce}}}{}{}}{{ceg}{{Al{ceg}}}{}{}{}}{{ce}{{An{ce}}}{}{}}{{{Aj{ce}}}eB`l}{{{Al{ceg}}}gB`hl}{{{An{ce}}}eBbl}{ce{}{}}00000000000000{{{Aj{ce}}}eB`{}}{{{Al{ceg}}}gB`h{}}{{{An{ce}}}eBb{}}{{{B`{}{{Cn{c}}}}}D`{}}0{{{Aj{ce}}}D`B`l}{{{f{ce}}}D`B`h}{{{Al{ceg}}}D`B`hl}{{{Bb{}{{Cn{c}}}}}D`{}}0{{{An{ce}}}D`Bbl}11032{{{j{ce}}}eB`l}{{{B`{}{{Cn{c}}}}}d{}}{{{Aj{ce}}}{{j{ce}}}B`l}{{{f{ce}}}dB`h}{{{Al{ceg}}}{{n{ceg}}}B`hl}{{{Bb{}{{Cn{c}}}}}d{}}0{Dbd}{Bjd}53{{{An{ce}}}{{A`{ce}}}Bbl}{{{An{ce}}}{{Af{ce}}}Bjl}{{{An{ce}}}{{Ad{ce}}}Bbl}{{{j{ce}}i}{{Bf{cg}}}B`ll{{Df{e}{{Dd{g}}}}}}{{{Bf{ce}}i}{{Bf{cg}}}B`ll{{Df{e}{{Dd{g}}}}}}{{{n{ceg}}k}{{Bh{cei}}}B`hll{{Df{g}{{Dd{i}}}}}}{{{Bh{ceg}}k}{{Bh{cei}}}B`hll{{Df{g}{{Dd{i}}}}}}{{{A`{ce}}i}{{Bl{cg}}}Bbll{{Df{e}{{Dd{g}}}}}}{{{Ad{ce}}i}{{Bn{cg}}}Bbll{{Df{e}{{Dd{g}}}}}}{{{Bl{ce}}i}{{Bl{cg}}}Bbll{{Df{e}{{Dd{g}}}}}}{{{Bn{ce}}i}{{Bn{cg}}}Bbll{{Df{e}{{Dd{g}}}}}}{{{j{ce}}}{{Aj{ce}}}B`l}{c{{Aj{ec}}}{}B`}{c{{Al{egc}}}{}B`h}{c{{An{ec}}}{}Bb}{hDh}{{{Aj{ce}}}cB`l}{{{Al{ceg}}}cB`hl}{{{An{ce}}}cBbl}{{{An{ce}}}{{A`{ce}}}Bbl}{{{An{ce}}}{{A`{ce}}}Dbl}{{{n{ceg}}}{{Al{ceg}}}B`hl}{{{A`{ce}}}{{An{ce}}}Bbl}{{{Ad{ce}}}{{An{ce}}}Bbl}{{{Af{ce}}}{{An{ce}}}Bjl}{c{{Dj{e}}}{}{}}00000000000000000000000000000{{{B`{}{{Cn{c}}}}}D`{}}{{{Aj{ce}}}{{Dl{{j{ce}}}}}B`l}{{{f{ce}}}D`B`h}{{{Al{ceg}}}{{Dl{{n{ceg}}}}}B`hl}{{{Bb{}{{Cn{c}}}}}D`{}}{{{Eb{}{{Dn{c}}{E`{e}}}}c}D`{}{}}{{{Eb{}{{Dn{c}}{E`{e}}}}e}D`{}{}}{{{Ed{}{{Dn{c}}{E`{e}}}}c}D`{}{}}{{{Aj{ce}}}{{Dl{{j{ce}}}}}Edl}{{{f{ce}}}D`Edh}{{{Al{ceg}}}{{Dl{{n{ceg}}}}}Edhl}65{DbD`}{{Efc}D`{}}06{{{Ed{}{{Dn{c}}{E`{e}}}}e}D`{}{}}543{BjD`}{{Ehc}D`{}}0{{{j{ce}}i}{{Dj{{Bf{cg}}{j{ce}}}}}B`ll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{Bf{ce}}i}{{Dj{{Bf{cg}}{Bf{ce}}}}}B`ll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{n{ceg}}k}{{Dj{{Bh{cei}}{n{ceg}}}}}B`hll{{Df{g}{{Dd{{Dl{i}}}}}}}}{{{Bh{ceg}}k}{{Dj{{Bh{cei}}{Bh{ceg}}}}}B`hll{{Df{g}{{Dd{{Dl{i}}}}}}}}{{{A`{ce}}i}{{Dj{{Bl{cg}}{A`{ce}}}}}Bbll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{Ad{ce}}i}{{Dj{{Bn{cg}}{Ad{ce}}}}}Bbll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{Bl{ce}}i}{{Dj{{Bl{cg}}{Bl{ce}}}}}Bbll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{Bn{ce}}i}{{Dj{{Bn{cg}}{Bn{ce}}}}}Bbll{{Df{e}{{Dd{{Dl{g}}}}}}}}{{{An{ce}}}{{Dl{{A`{ce}}}}}Bbl}{{{An{ce}}}{{Dl{{A`{ce}}}}}Ebl}{{{An{ce}}}{{Dl{{A`{ce}}}}}Dbl}{{{An{ce}}}{{Dl{{A`{ce}}}}}Efl}02{{{An{ce}}}{{Dl{{Af{ce}}}}}Bjl}{{{An{ce}}}{{Dl{{Af{ce}}}}}Ehl}0?{{{Af{ce}}}{{Dj{{Ad{ce}}{Af{ce}}}}}Bjl}?{{{Af{ce}}}{{Dj{{Ad{ce}}{Af{ce}}}}}Ehl}{{Ehc}D`{}}1{{{Af{ce}}i}{{Dl{g}}}Cbl{}{{Df{e}{{Dd{g}}}}}}{{{Af{ce}}i}{{Dl{g}}}{EhCb}l{}{{Df{e}{{Dd{g}}}}}}0{{{An{ce}}}{{Dl{{Ad{ce}}}}}Bbl}{{{An{ce}}}{{Dl{{Ad{ce}}}}}Ebl}0{cEj{}}00000000000000{{{B`{}{{Cn{c}}}}}d{}}{{{f{ce}}}dB`h}{{{Bb{}{{Cn{c}}}}}d{}}{Abd}{bd}{{{f{ce}}}dbh}{{{j{ce}}}dbl}{{{Bf{ce}}}dbl}{{{n{ceg}}}dbhl}{{{Bh{ceg}}}dbhl}{{{A`{ce}}}dAbl}{{{Ad{ce}}}dAbl}{{{Af{ce}}}dAhl}{{{Bl{ce}}}dAbl}{{{Bn{ce}}}dAbl}<;{Bjd}{Ahd}{{{j{ce}}i}gB`l{}{{Df{}{{Dd{g}}}}}}{{{n{ceg}}k}iB`hl{}{{Df{}{{Dd{i}}}}}}{{{A`{ce}}i}gBbl{}{{Df{}{{Dd{g}}}}}}{{{Ad{ce}}i}gBbl{}{{Df{}{{Dd{g}}}}}}{{{Af{ce}}i}gBjl{}{{Df{}{{Dd{g}}}}}}{{{j{ce}}i}gbl{}{{Df{}{{Dd{g}}}}}}{{{n{ceg}}k}ibhl{}{{Df{}{{Dd{i}}}}}}{{{A`{ce}}i}gAbl{}{{Df{}{{Dd{g}}}}}}{{{Ad{ce}}i}gAbl{}{{Df{}{{Dd{g}}}}}}{{{Af{ce}}i}gAhl{}{{Df{}{{Dd{g}}}}}}{{{An{ce}}}{{Af{ce}}}Bjl}<{{{Af{ce}}}{{Ad{ce}}}Bjl}{{{Af{ce}}i}gCbl{}{{Df{e}{{Dd{g}}}}}}{{{An{ce}}}{{Ad{ce}}}Bbl}","c":[],"p":[[10,"RawMutexFair",0],[1,"unit"],[5,"RawReentrantMutex",0],[10,"GetThreadId",0],[5,"MutexGuard",0],[10,"Sized",375],[5,"ReentrantMutexGuard",0],[5,"RwLockReadGuard",0],[10,"RawRwLockFair",0],[5,"RwLockWriteGuard",0],[5,"RwLockUpgradableReadGuard",0],[10,"RawRwLockUpgradeFair",0],[5,"Mutex",0],[5,"ReentrantMutex",0],[5,"RwLock",0],[10,"RawMutex",0],[10,"RawRwLock",0],[10,"Default",376],[5,"MappedMutexGuard",0],[5,"MappedReentrantMutexGuard",0],[10,"RawRwLockUpgrade",0],[5,"MappedRwLockReadGuard",0],[5,"MappedRwLockWriteGuard",0],[10,"RawRwLockDowngrade",0],[10,"RawRwLockUpgradeDowngrade",0],[5,"Formatter",377],[8,"Result",377],[10,"Debug",377],[10,"Display",377],[1,"never"],[17,"GuardMarker"],[1,"bool"],[10,"RawRwLockRecursive",0],[17,"Output"],[10,"FnOnce",378],[8,"NonZeroUsize",379],[6,"Result",380],[6,"Option",381],[17,"Duration"],[17,"Instant"],[10,"RawRwLockTimed",0],[10,"RawMutexTimed",0],[10,"RawRwLockRecursiveTimed",0],[10,"RawRwLockUpgradeTimed",0],[5,"TypeId",382],[5,"GuardSend",0],[5,"GuardNoSend",0]],"b":[[123,"impl-Debug-for-MutexGuard%3C\'a,+R,+T%3E"],[124,"impl-Display-for-MutexGuard%3C\'a,+R,+T%3E"],[125,"impl-Display-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[126,"impl-Debug-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[127,"impl-Display-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[128,"impl-Debug-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[129,"impl-Debug-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[130,"impl-Display-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[131,"impl-Display-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[132,"impl-Debug-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[133,"impl-Display-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[134,"impl-Debug-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[135,"impl-Debug-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[136,"impl-Display-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[137,"impl-Debug-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[138,"impl-Display-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[139,"impl-Display-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"],[140,"impl-Debug-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"]]}],\
["mio",{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","t":"EFFTFFTFNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNCNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFFKNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNN","n":["Events","Interest","Poll","READABLE","Registry","Token","WRITABLE","Waker","add","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deregister","eq","eq","event","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","guide","hash","into","into","into","into","into","is_aio","is_lio","is_priority","is_readable","is_writable","net","new","new","partial_cmp","partial_cmp","poll","register","registry","remove","reregister","to_owned","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wake","windows","Event","Events","Iter","Source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","count","deregister","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","is_aio","is_empty","is_error","is_lio","is_priority","is_read_closed","is_readable","is_writable","is_write_closed","iter","next","register","reregister","size_hint","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","TcpListener","TcpStream","UdpSocket","accept","as_raw_socket","as_raw_socket","as_raw_socket","bind","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","connect","connect","deregister","deregister","deregister","flush","flush","fmt","fmt","fmt","from","from","from","from_raw_socket","from_raw_socket","from_raw_socket","from_std","from_std","from_std","into","into","into","into_raw_socket","into_raw_socket","into_raw_socket","join_multicast_v4","join_multicast_v6","leave_multicast_v4","leave_multicast_v6","local_addr","local_addr","local_addr","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","nodelay","only_v6","peek","peek","peek_from","peer_addr","peer_addr","read","read","read_vectored","read_vectored","recv","recv_from","register","register","register","reregister","reregister","reregister","send","send_to","set_broadcast","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_nodelay","set_ttl","set_ttl","set_ttl","shutdown","take_error","take_error","take_error","try_from","try_from","try_from","try_into","try_into","try_into","try_io","try_io","ttl","ttl","ttl","type_id","type_id","type_id","write","write","write_vectored","write_vectored","NamedPipe","as_raw_handle","borrow","borrow_mut","connect","deregister","disconnect","drop","flush","flush","fmt","from","from_raw_handle","into","new","read","read","register","reregister","take_error","try_from","try_into","type_id","write","write"],"q":[[0,"mio"],[84,"mio::event"],[140,"mio::net"],[242,"mio::windows"],[267,"core::cmp"],[268,"std::io::error"],[269,"core::marker"],[270,"core::fmt"],[271,"core::fmt"],[272,"core::option"],[273,"core::time"],[274,"core::result"],[275,"core::any"],[276,"core::net::socket_addr"],[277,"std::os::windows::io::raw"],[278,"std::net::tcp"],[279,"std::net::tcp"],[280,"core::net::ip_addr"],[281,"core::net::ip_addr"],[282,"std::net"],[283,"std::io::error"],[284,"std::io"],[285,"core::convert"]],"d":["","Interest used in registering.","Polls for readiness events on all registered values.","Returns a <code>Interest</code> set representing readable interests.","Registers I/O resources.","Associates readiness events with <code>event::Source</code>s.","Returns a <code>Interest</code> set representing writable interests.","Waker allows cross-thread waking of <code>Poll</code>.","Add together two <code>Interest</code>.","","","","","","","","","","","","","","","","","","","Deregister an <code>event::Source</code> with the <code>Poll</code> instance.","","","Readiness event types and utilities.","Mio’s optional features.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getting started guide.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if <code>Interest</code> contains AIO readiness.","Returns true if <code>Interest</code> contains LIO readiness.","Returns true if <code>Interest</code> contains priority readiness.","Returns true if the value includes readable readiness.","Returns true if the value includes writable readiness.","Networking primitives.","Return a new <code>Poll</code> handle.","Create a new <code>Waker</code>.","","","Wait for readiness events","Register an <code>event::Source</code> with the <code>Poll</code> instance.","Create a separate <code>Registry</code> which can be used to register …","Removes <code>other</code> <code>Interest</code> from <code>self</code>.","Re-register an <code>event::Source</code> with the <code>Poll</code> instance.","","","Creates a new independently owned <code>Registry</code>.","","","","","","","","","","","","","","","","Wake up the <code>Poll</code> associated with this <code>Waker</code>.","Windows only extensions.","A readiness event.","A collection of readiness events.","<code>Events</code> iterator.","An event source that may be registered with <code>Registry</code>.","","","","","","","Returns the number of <code>Event</code> values that <code>self</code> can hold.","Clearing all <code>Event</code> values from container explicitly.","","","","","","Deregister <code>self</code> from the given <code>Registry</code> instance.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the event contains AIO readiness.","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.","Returns true if the event contains error readiness.","Returns true if the event contains LIO readiness.","Returns true if the event contains priority readiness.","Returns true if the event contains read closed readiness.","Returns true if the event contains readable readiness.","Returns true if the event contains writable readiness.","Returns true if the event contains write closed readiness.","Returns an iterator over the <code>Event</code> values.","","Register <code>self</code> with the given <code>Registry</code> instance.","Re-register <code>self</code> with the given <code>Registry</code> instance.","","","","Returns the event’s token.","","","","","","","","","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …","A structure representing a socket server","A non-blocking TCP stream between a local socket and a …","A User Datagram Protocol socket.","Accepts a new <code>TcpStream</code>.","","","","Convenience method to bind a new TCP listener to the …","Creates a UDP socket from the given address.","","","","","","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.","Create a new TCP stream and issue a non-blocking connect …","Connects the UDP socket setting the default destination …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>RawSocket</code> to a <code>TcpListener</code>.","Converts a <code>RawSocket</code> to a <code>TcpStream</code>.","Converts a <code>RawSocket</code> to a <code>UdpSocket</code>.","Creates a new <code>TcpListener</code> from a standard <code>net::TcpListener</code>.","Creates a new <code>TcpStream</code> from a standard <code>net::TcpStream</code>.","Creates a new <code>UdpSocket</code> from a standard <code>net::UdpSocket</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.","Returns the local socket address of this listener.","Returns the socket address of the local half of this TCP …","Returns the socket address that this socket was created …","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Get the value of the <code>IPV6_V6ONLY</code> option on this socket.","Receives data on the socket from the remote address to …","Receives data from the socket, without removing it from …","Receives data from the socket, without removing it from …","Returns the socket address of the remote peer of this TCP …","Returns the socket address of the remote peer this socket …","","","","","Receives data from the socket previously bound with …","Receives data from the socket. On success, returns the …","","","","","","","Sends data on the socket to the address previously bound …","Sends data on the socket to the given address. On success, …","Sets the value of the <code>SO_BROADCAST</code> option for this socket.","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Shuts down the read, write, or both halves of this …","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","","","","","","","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","","","","Non-blocking windows named pipe.","","","","Attempts to call <code>ConnectNamedPipe</code>, if possible.","","Disconnects this named pipe from a connected client.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new named pipe at the specified <code>addr</code> given a “…","","","","","Takes any internal error that has happened after the last …","","","","",""],"i":[0,0,0,1,0,0,1,0,1,1,1,10,5,1,3,13,10,5,1,3,13,1,3,1,3,1,3,5,1,3,0,0,10,5,1,3,13,10,5,1,3,13,0,3,10,5,1,3,13,1,1,1,1,1,0,10,13,1,3,10,5,10,1,5,1,3,5,10,5,1,3,13,10,5,1,3,13,10,5,1,3,13,13,0,0,0,0,0,16,21,22,16,21,22,16,16,21,22,21,22,22,7,16,21,22,16,21,22,16,21,22,16,22,21,16,21,21,21,21,21,21,21,16,22,7,7,22,21,22,21,16,21,22,16,21,22,16,21,22,16,0,0,0,24,24,25,28,24,28,24,25,28,24,25,28,28,25,28,24,25,28,25,25,24,25,28,24,25,28,24,25,28,24,25,28,24,25,28,24,25,28,28,28,28,28,24,25,28,28,28,28,25,28,25,28,28,25,28,25,25,25,25,28,28,24,25,28,24,25,28,28,28,28,28,28,28,25,24,25,28,25,24,25,28,24,25,28,24,25,28,25,28,24,25,28,24,25,28,25,25,25,25,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],"f":"````````{{bb}b}0{{bb}d}{ce{}{}}000000000{bb}{ff}{{ce}d{}{}}0{{bb}h}{{ff}h}{{jc}{{l{d}}}{nA`}}{{bb}Ab}{{ff}Ab}``{{AdAf}Ah}{{jAf}Ah}{{bAf}Ah}{{fAf}Ah}{{AjAf}Ah}{cc{}}0000`{{fc}dAl}?????{bAb}0000`{{}{{l{Ad}}}}{{jf}{{l{Aj}}}}{{bb}{{An{h}}}}{{ff}{{An{h}}}}{{AdB`{An{Bb}}}{{l{d}}}}{{jcfb}{{l{d}}}{nA`}}{Adj}{{bb}{{An{b}}}}2{ce{}{}}0{j{{l{j}}}}{c{{Bd{e}}}{}{}}000000000{cBf{}}0000{Aj{{l{d}}}}`````444444{B`Bh}{B`d}{BjBj}{BlBl}{{ce}d{}{}}0{BlBh}{{nj}{{l{d}}}}{{B`Af}Ah}{{BjAf}Ah}{{BlAf}Ah}{cc{}}00???{B`c{}}{ce{}{}}{BjAb}{B`Ab}1111111{B`Bl}{Bl{{An{c}}}{}}{{njfb}{{l{d}}}}0{Bl{{Bn{Bh{An{Bh}}}}}}66{Bjf}{c{{Bd{e}}}{}{}}00000{cBf{}}00{BhB`}```{C`{{l{{Bn{CbCd}}}}}}{C`Cf}{CbCf}{ChCf}{Cd{{l{C`}}}}{Cd{{l{Ch}}}}{ce{}{}}00000{Ch{{l{Ab}}}}{Cd{{l{Cb}}}}{{ChCd}{{l{d}}}}{{C`j}{{l{d}}}}{{Cbj}{{l{d}}}}{{Chj}{{l{d}}}}{Cb{{l{d}}}}0{{C`Af}Ah}{{CbAf}Ah}{{ChAf}Ah}{cc{}}00{CfC`}{CfCb}{CfCh}{CjC`}{ClCb}{CnCh}{ce{}{}}00{C`Cf}{CbCf}{ChCf}{{ChD`D`}{{l{d}}}}{{ChDbDd}{{l{d}}}}10{C`{{l{Cd}}}}{Cb{{l{Cd}}}}{Ch{{l{Cd}}}}{Ch{{l{Ab}}}}0{Ch{{l{Dd}}}}{Cb{{l{Ab}}}}2{{Cb{Dh{Df}}}{{l{Bh}}}}{{Ch{Dh{Df}}}{{l{Bh}}}}{{Ch{Dh{Df}}}{{l{{Bn{BhCd}}}}}}7622{{Cb{Dh{Dj}}}{{l{Bh}}}}021{{C`jfb}{{l{d}}}}{{Cbjfb}{{l{d}}}}{{Chjfb}{{l{d}}}}2105{{Ch{Dh{Df}}Cd}{{l{Bh}}}}{{ChAb}{{l{d}}}}00{{ChDd}{{l{d}}}}{{CbAb}{{l{d}}}}{{C`Dd}{{l{d}}}}{{CbDd}{{l{d}}}}3{{CbDl}{{l{d}}}}{C`{{l{{An{Dn}}}}}}{Cb{{l{{An{Dn}}}}}}{Ch{{l{{An{Dn}}}}}}{c{{Bd{e}}}{}{}}00000{{Cbe}{{l{c}}}{}{{Eb{}{{E`{{l{c}}}}}}}}{{Che}{{l{c}}}{}{{Eb{}{{E`{{l{c}}}}}}}}{C`{{l{Dd}}}}{Cb{{l{Dd}}}}{Ch{{l{Dd}}}}{cBf{}}00{{Cb{Dh{Df}}}{{l{Bh}}}}0{{Cb{Dh{Ed}}}{{l{Bh}}}}0`{EfEh}{ce{}{}}0{Ef{{l{d}}}}{{Efj}{{l{d}}}}1{Efd}22{{EfAf}Ah}{cc{}}{EhEf}6{c{{l{Ef}}}{{El{Ej}}}}{{Ef{Dh{Df}}}{{l{Bh}}}}0{{Efjfb}{{l{d}}}}0{Ef{{l{{An{Dn}}}}}}{c{{Bd{e}}}{}{}}0?33","c":[],"p":[[5,"Interest",0],[1,"unit"],[5,"Token",0],[6,"Ordering",267],[5,"Registry",0],[8,"Result",268],[10,"Source",84],[10,"Sized",269],[1,"bool"],[5,"Poll",0],[5,"Formatter",270],[8,"Result",270],[5,"Waker",0],[10,"Hasher",271],[6,"Option",272],[5,"Events",84],[5,"Duration",273],[6,"Result",274],[5,"TypeId",275],[1,"usize"],[5,"Event",84],[5,"Iter",84],[1,"tuple"],[5,"TcpListener",140],[5,"TcpStream",140],[6,"SocketAddr",276],[8,"RawSocket",277],[5,"UdpSocket",140],[5,"TcpListener",278],[5,"TcpStream",278],[5,"UdpSocket",279],[5,"Ipv4Addr",280],[5,"Ipv6Addr",280],[1,"u32"],[1,"u8"],[1,"slice"],[5,"IoSliceMut",281],[6,"Shutdown",282],[5,"Error",268],[17,"Output"],[10,"FnOnce",283],[5,"IoSlice",281],[5,"NamedPipe",242],[8,"RawHandle",277],[5,"OsStr",284],[10,"AsRef",285]],"b":[[161,"impl-Write-for-TcpStream"],[162,"impl-Write-for-%26TcpStream"],[198,"impl-Read-for-TcpStream"],[199,"impl-Read-for-%26TcpStream"],[200,"impl-Read-for-TcpStream"],[201,"impl-Read-for-%26TcpStream"],[238,"impl-Write-for-TcpStream"],[239,"impl-Write-for-%26TcpStream"],[240,"impl-Write-for-TcpStream"],[241,"impl-Write-for-%26TcpStream"],[250,"impl-Write-for-NamedPipe"],[251,"impl-Write-for-%26NamedPipe"],[257,"impl-Read-for-NamedPipe"],[258,"impl-Read-for-%26NamedPipe"],[265,"impl-Write-for-NamedPipe"],[266,"impl-Write-for-%26NamedPipe"]]}],\
["num_cpus",{"doc":"A crate with utilities to determine the number of CPUs …","t":"HH","n":["get","get_physical"],"q":[[0,"num_cpus"]],"d":["Returns the number of available CPUs of the current system.","Returns the number of physical cores of the current system."],"i":[0,0],"f":"{{}b}0","c":[],"p":[[1,"usize"]],"b":[]}],\
["parking_lot",{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":"FPIIPIIIIIIIPFGPFFFFIIIIIIFNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","done","downgrade","downgrade_to_upgradable","downgrade_upgradable","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_locked","is_locked","is_locked","is_locked_exclusive","lock","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","state","timed_out","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upgrade","wait","wait_for","wait_until","wait_while","wait_while_for","wait_while_until"],"q":[[0,"parking_lot"],[169,"core::ops::function"],[170,"core::fmt"],[171,"core::fmt"],[172,"core::result"],[173,"core::time"],[174,"std::time"],[175,"core::any"],[176,"core::marker"],[177,"core::ops::function"]],"d":["A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","Returns the current state of this <code>Once</code>.","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …"],"i":[0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,13,5,1,3,4,17,8,7,13,5,1,3,4,17,8,7,1,3,4,4,4,5,5,8,7,8,7,0,0,0,0,13,5,7,4,4,4,8,7,13,5,8,7,13,5,1,3,4,17,8,7,13,5,1,3,4,17,8,7,1,3,4,4,1,3,0,4,4,4,4,13,5,17,13,13,7,5,8,8,7,13,5,1,3,4,17,8,7,13,5,1,3,4,17,8,7,1,3,4,4,4,1,3,4,4,4,4,4,4,1,3,4,4,4,4,4,4,13,5,1,3,4,17,8,7,1,3,4,4,1,3,4,4,4,4,4,13,13,13,13,13,13],"f":"```````````````````````````{ce{}{}}000000000000000{bd}{fd}{hd}00{{jc}dl}{{jc}d{{l{n}}}}{A`A`}{nn}{{ce}d{}{}}0{c{{Ab{c}}}{}}{c{{Ad{c}}}{}}{c{{Af{c}}}{}}{c{{Ah{c}}}{}}{{}Aj}{{}j}{nAl}<<<{{A`A`}Al}{{nn}Al}{{AjAn}B`}{{jAn}B`}{{A`An}B`}{{nAn}B`}{cc{}}0000000{ce{}{}}0000000{bAl}{fAl}{hAl}0{bd}{fd}`{hd}000{{}Aj}{{}j}{BbBd}{AjBf}{AjAl}{nAl}{jn}{A`Al}>>{c{{Bh{e}}}{}{}}000000000000000>=<{{hBj}Al}{{hBl}Al}{{bc}Al{}}{{fBj}Al}{hAl}{{hc}Al{}}10003{{fBl}Al}265265{cBn{}}0000000{bd}{fd}{hd}02100000{{Aj{C`{c}}}dCb}{{Aj{C`{c}}Bj}A`Cb}{{Aj{C`{c}}Bl}A`Cb}{{Aj{C`{c}}e}dCb{{Cf{c}{{Cd{Al}}}}}}{{Aj{C`{c}}eBj}A`Cb{{Cf{c}{{Cd{Al}}}}}}{{Aj{C`{c}}eBl}A`Cb{{Cf{c}{{Cd{Al}}}}}}","c":[],"p":[[5,"RawFairMutex",0],[1,"unit"],[5,"RawMutex",0],[5,"RawRwLock",0],[5,"Once",0],[10,"FnOnce",169],[6,"OnceState",0],[5,"WaitTimeoutResult",0],[8,"FairMutex",0],[8,"Mutex",0],[8,"ReentrantMutex",0],[8,"RwLock",0],[5,"Condvar",0],[1,"bool"],[5,"Formatter",170],[8,"Result",170],[5,"RawThreadId",0],[8,"NonZeroUsize",171],[1,"usize"],[6,"Result",172],[5,"Duration",173],[5,"Instant",174],[5,"TypeId",175],[8,"MutexGuard",0],[10,"Sized",176],[17,"Output"],[10,"FnMut",169]],"b":[]}],\
["parking_lot_core",{"doc":"This library exposes a low-level API for creating your own …","t":"PSSGPGFPPGPFPPPPPFFPONNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHOHH","n":["Abort","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","FilterOp","Invalid","ParkResult","ParkToken","RequeueAll","RequeueOne","RequeueOp","Skip","SpinWait","Stop","TimedOut","Unpark","UnparkOne","UnparkOneRequeueRest","UnparkResult","UnparkToken","Unparked","be_fair","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadlock","default","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","have_more_threads","into","into","into","into","into","into","into","is_unparked","new","park","requeued_threads","reset","spin","spin_no_yield","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpark_all","unpark_filter","unpark_one","unpark_requeue","unparked_threads","acquire_resource","release_resource"],"q":[[0,"parking_lot_core"],[116,"parking_lot_core::deadlock"],[118,"core::fmt"],[119,"core::fmt"],[120,"core::option"],[121,"core::ops::function"],[122,"core::result"],[123,"core::any"],[124,"core::ops::function"]],"d":["Abort the operation without doing anything.","A default park token to use.","A default unpark token to use.","Operation that <code>unpark_filter</code> should perform for each …","The validation callback returned false.","Result of a park operation.","A value associated with a parked thread which can be used …","Requeue all threads onto the target queue.","Requeue one thread and leave the rest parked on the …","Operation that <code>unpark_requeue</code> should perform.","Don’t unpark the thread and continue scanning the list …","A counter used to perform exponential backoff in spin …","Don’t unpark the thread and stop scanning the list of …","The timeout expired.","Unpark the thread and continue scanning the list of parked …","Unpark one thread and leave the rest parked. No requeuing …","Unpark one thread and requeue the rest onto the target …","Result of an unpark operation.","A value which is passed from an unparker to a parked …","We were unparked by another thread with the given token.","This is set to true on average once every 0.5ms for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","[Experimental] Deadlock detection","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether there are any threads remaining in the queue. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we were unparked by another thread.","Creates a new <code>SpinWait</code>.","Parks the current thread in the queue associated with the …","The number of threads that were requeued.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unparks all threads in the queue associated with the given …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with <code>key_from</code>…","The number of threads that were unparked.","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …"],"i":[3,0,0,0,1,0,0,3,3,0,4,0,4,1,4,3,3,0,0,1,2,1,2,3,4,5,6,8,1,2,3,4,5,6,8,1,2,3,4,5,6,1,2,3,4,5,6,0,2,8,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,8,2,1,2,3,4,5,6,8,1,8,0,2,8,8,8,1,2,3,4,5,6,1,2,3,4,5,6,8,1,2,3,4,5,6,8,1,2,3,4,5,6,8,0,0,0,0,2,0,0],"f":"`````````````````````{ce{}{}}0000000000000{bb}{dd}{ff}{hh}{jj}{ll}{{ce}n{}{}}00000`{{}d}{{}A`}{{bb}Ab}{{dd}Ab}{{ff}Ab}{{hh}Ab}{{jj}Ab}{{ll}Ab}{{bAd}Af}{{dAd}Af}{{fAd}Af}{{hAd}Af}{{jAd}Af}{{lAd}Af}{cc{}}000000`{ce{}{}}000000{bAb}?{{Ahcegl{Al{Aj}}}b{{B`{}{{An{Ab}}}}}B`{{B`{AhAb}}}}`{A`n}{A`Ab}1444444{c{{Bb{e}}}{}{}}0000000000000{cBd{}}000000{{Ahj}Ah}{{Ahce}d{{Bf{l}{{An{h}}}}}{{B`{d}{{An{j}}}}}}{{Ahc}d{{B`{d}{{An{j}}}}}}{{AhAhce}d{{B`{}{{An{f}}}}}{{B`{fd}{{An{j}}}}}}`{Ahn}0","c":[],"p":[[6,"ParkResult",0],[5,"UnparkResult",0],[6,"RequeueOp",0],[6,"FilterOp",0],[5,"UnparkToken",0],[5,"ParkToken",0],[1,"unit"],[5,"SpinWait",0],[1,"bool"],[5,"Formatter",118],[8,"Result",118],[1,"usize"],[5,"Instant",119],[6,"Option",120],[17,"Output"],[10,"FnOnce",121],[6,"Result",122],[5,"TypeId",123],[10,"FnMut",121]],"b":[]}],\
["pin_project_lite",{"doc":"A lightweight version of pin-project written with …","t":"Q","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":"`","c":[],"p":[],"b":[]}],\
["ppv_lite86",{"doc":"","t":"KKKKKKKKKKRKKKKKKKKKKKKKMMQQQMMMMMMNNNNMMMMMMMMMMMMMMMMMMMMMMMMMKRKRKRKRKRKRKRKRKRKRMNNMMMNNEEEMMMCIIFFFFFFIIIFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNUUUNNNNNNNNNNNNNNN","n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","extract","extract","from_lanes","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","x86_64","AVX","AVX2","Avx2Machine","NoA1","NoA2","NoNI","NoS3","NoS4","SSE2","SSE41","SSSE3","SseMachine","YesA1","YesA2","YesNI","YesS3","YesS4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","instance","instance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new128","new128","split128","split128","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","vec128_storage","vec256_storage","vec512_storage","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"ppv_lite86"],[99,"ppv_lite86::x86_64"],[269,"core::clone"],[270,"core::marker"],[271,"core::result"],[272,"core::any"]],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","Generate the full set of optimized implementations to take …","Generate only the basic implementations necessary to be …","Generate only the basic implementations necessary to be …","","","Build a multi-lane vector from individual lanes.","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","AVX but not AVX2: only 128-bit integer operations, but use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generic wrapper for unparameterized storage of any of the …","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,4,6,7,4,6,18,18,18,18,18,32,32,32,32,32,32,33,32,32,34,34,34,35,35,35,36,36,36,36,36,36,36,7,37,38,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,40,18,18,41,31,31,18,18,0,0,0,42,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,57,58,59,57,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,57,58,58,59,54,56,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,58,59,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,57,0,0,0,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59],"f":"````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{}}{ff}```{{hj}c{}}{{lj}c{}}{cn{}}{{hcj}h{}}{{lcj}l{}}{{}{{Bd{}{{A`{c}}{Ab{e}}{Ad{g}}{Af{i}}{Ah{k}}{Aj{m}}{Al{o}}{An{Aa}}{B`{Ac}}{Bb{Ae}}}}}BfBhBjBlBnC`CbCdCfCh}{{{Bd{}{{A`{c}}{Ab{e}}{Ad{g}}{Af{i}}{Ah{k}}{Aj{m}}{Al{o}}{An{Aa}}{B`{Ac}}{Bb{Ae}}}}{Cl{Cj}}}AgBfBhBjBlBnC`CbCdCfChCn}000{D`D`}00000{DbDb}11{DdDd}00{DfDf}00{DhDh}000000{nc{}}{Djc{}}{{DlDlDlDl}{{Dn{DlDlDlDl}}}}````````````````````{cE`{}}{{{Bd{}{{A`{c}}{Ab{e}}{Ad{g}}{Af{i}}{Ah{k}}{Aj{m}}{Al{o}}{An{Aa}}{B`{Ac}}{Bb{Ae}}}}Ag}AiBfBhBjBlBnC`CbCdCfCh{}{{E`{Ag}}}}0{cEb{}}{{{Cl{Cj}}}Cn}0{{{Bd{}{{A`{c}}{Ab{e}}{Ad{g}}{Af{i}}{Ah{k}}{Aj{m}}{Al{o}}{An{Aa}}{B`{Ac}}{Bb{Ae}}}}Ag}AiBfBhBjBlBnC`CbCdCfCh{}{{n{Ag}}}}0```{Edc{}}{{Cn{Cl{Cj}}}Ef}0``````````````````{ce{}{}}00000000000000000000000000000{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{{{Fl{ceg}}}{{Fl{ceg}}}FnFnFn}{{{G`{c}}}{{G`{c}}}Fn}{GbGb}{GdGd}{GfGf}{{}Gb}{{}Gd}{{}Gf}{{GbGb}Gh}{{GdGd}Gh}{{GfGf}Gh}{cc{}}00000000000{{{Gj{j}}}Gb}11{{{Gj{Gl}}}Gd}2{{}{{Fl{ceg}}}GnGnGn}{{}{{G`{c}}}Gn}{ce{}{}}00000000000000{{{Gj{Gb}}}Gd}{{{Gj{Gb}}}Gf}{Gd{{Gj{Gb}}}}{Gf{{Gj{Gb}}}}{c{{H`{e}}}{}{}}00000000000000000000000000000{cHb{}}00000000000000{GbGb}```777777777777777","c":[],"p":[[17,"Output"],[10,"AndNot",0],[10,"BSwap",0],[10,"Vec2",0],[1,"u32"],[10,"Vec4",0],[10,"MultiLane",0],[17,"u32x4"],[17,"u64x2"],[17,"u128x1"],[17,"u32x4x2"],[17,"u64x2x2"],[17,"u64x4"],[17,"u128x2"],[17,"u32x4x4"],[17,"u64x2x4"],[17,"u128x4"],[10,"Machine",0],[10,"u32x4",0],[10,"u64x2",0],[10,"u128x1",0],[10,"u32x4x2",0],[10,"u64x2x2",0],[10,"u64x4",0],[10,"u128x2",0],[10,"u32x4x4",0],[10,"u64x2x4",0],[10,"u128x4",0],[1,"u8"],[1,"slice"],[10,"StoreBytes",0],[10,"RotateEachWord32",0],[10,"RotateEachWord64",0],[10,"Words4",0],[10,"LaneWords4",0],[10,"Swap64",0],[10,"Vector",0],[10,"Vec4Ext",0],[1,"tuple"],[10,"Store",0],[10,"UnsafeFrom",0],[10,"VZip",0],[1,"unit"],[5,"YesS3",99],[5,"NoS3",99],[5,"YesS4",99],[5,"NoS4",99],[5,"YesA1",99],[5,"NoA1",99],[5,"YesA2",99],[5,"NoA2",99],[5,"YesNI",99],[5,"NoNI",99],[5,"SseMachine",99],[10,"Clone",269],[5,"Avx2Machine",99],[20,"vec128_storage",99],[20,"vec256_storage",99],[20,"vec512_storage",99],[1,"bool"],[1,"array"],[1,"u64"],[10,"Copy",270],[6,"Result",271],[5,"TypeId",272]],"b":[]}],\
["proc_macro2",{"doc":"github crates-io docs-rs","t":"PPPGFPFPPFFPPPFPGFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNFENNNNNNNNNNNNNN","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_character","byte_string","c_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[230,"proc_macro2::extra"],[245,"proc_macro2::token_stream"],[261,"core::ffi::c_str"],[262,"core::cmp"],[263,"core::marker"],[264,"core::convert"],[265,"core::iter::traits::collect"],[266,"core::fmt"],[267,"core::fmt"],[268,"proc_macro"],[269,"core::hash"],[270,"core::option"],[271,"alloc::string"],[272,"core::ops::range"],[273,"core::any"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>∅ ... ∅</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte character literal.","Byte string literal.","C string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[12,11,11,0,0,9,0,9,12,0,0,9,11,11,0,9,0,0,0,0,1,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,4,4,4,7,4,8,7,9,10,11,1,12,13,4,8,7,9,10,11,1,12,13,4,13,8,10,10,11,12,13,13,8,8,0,4,4,4,4,25,25,8,8,7,9,9,10,10,11,1,1,12,13,13,4,4,25,8,8,8,7,7,9,9,9,9,9,10,11,1,12,13,4,8,8,8,4,13,4,4,4,4,4,4,4,4,4,4,25,8,7,9,10,11,1,12,13,4,8,8,4,4,7,7,7,8,10,1,13,13,13,7,9,10,1,13,4,7,1,25,9,10,1,13,4,10,10,10,4,4,8,7,9,10,11,1,12,13,4,25,8,9,10,1,13,4,0,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,4,4,4,4,4,4,4,4,4,4,7,4,4,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":"````````````````````{bd}{ce{}{}}0000000000000000000{fh}{{{j{f}}}h}{lh}{{}n}{dh}{A`A`}{nn}{AbAb}{AdAd}{AfAf}{bb}{AhAh}{AjAj}{hh}{{ce}Al{}{}}00000000{{AjAj}An}{{}A`}{AdB`}{AdAf}{{AfAf}Bb}{{AhAh}Bb}{{AjAj}Bb}{{Ajc}Bb{Bd{Bh{Bf}}}}{{A`c}Al{{Bl{}{{Bj{A`}}}}}}{{A`c}Al{{Bl{}{{Bj{Ab}}}}}}`{Bnh}0{C`h}0{{CbCd}Cf}0{{A`Cd}Cf}0{{nCd}Cf}{{AbCd}Cf}0{{AdCd}Cf}0{{AfCd}Cf}{{bCd}Cf}0{{AhCd}Cf}{{AjCd}Cf}0{{hCd}Cf}0{cc{}}{AbA`}1{ChA`}2{Cjn}{AjAb}{AdAb}{hAb}{bAb}7777777{cA`{{Bl{}{{Bj{A`}}}}}}{cA`{{Bl{}{{Bj{Ab}}}}}}{Bf{{Cl{A`Cb}}}}{Bf{{Cl{hCb}}}}{{Ajc}AlCn}{D`h}0{Dbh}0{Ddh}0{Dfh}0{Dhh}0{ce{}{}}000000000{A`Dj}{A`Bb}{Dlh}0{{nn}{{Dn{n}}}}{{nn}n}{{}n}{{}A`}{{AfA`}Ad}{{dAh}b}{{Bfn}Aj}0{{AjAj}{{Dn{An}}}}6{{Abn}Al}{{Adn}Al}{{bn}Al}{{Ajn}Al}{{hn}Al}{n{{Dn{E`}}}}{bAh}{Cbn}{Abn}{Adn}{bn}{Ajn}{hn}33{AdA`}{Bfh}{{hc}{{Dn{n}}}{{Ed{Eb}}}}{ce{}{}}00000000{cE`{}}000000`{c{{Cl{e}}}{}{}}0000000000000000000{cEf{}}000000000{Ehh}0{Ejh}0{Elh}0{Enh}0{fh}0{nCj}{Ebh}0`::{B`B`}{{ce}Al{}{}}{B`n}{{B`Cd}Cf}{cc{}}?22?==<``??{DjDj}4{{DjCd}Cf}2{ce{}{}}0{Dj{{Dn{Ab}}}}{Dj{{F`{Eb{Dn{Eb}}}}}}2{c{{Cl{e}}}{}{}}0{cEf{}}","c":[],"p":[[5,"Punct",0],[1,"char"],[1,"u8"],[5,"Literal",0],[1,"slice"],[5,"CStr",261],[5,"Span",0],[5,"TokenStream",0],[6,"TokenTree",0],[5,"Group",0],[6,"Delimiter",0],[6,"Spacing",0],[5,"Ident",0],[1,"unit"],[6,"Ordering",262],[5,"DelimSpan",230],[1,"bool"],[10,"Sized",263],[1,"str"],[10,"AsRef",264],[17,"Item"],[10,"IntoIterator",265],[1,"f32"],[1,"f64"],[5,"LexError",0],[5,"Formatter",266],[8,"Result",266],[5,"TokenStream",267],[5,"Span",267],[6,"Result",268],[10,"Hasher",269],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[5,"IntoIter",245],[1,"isize"],[6,"Option",270],[5,"String",271],[1,"usize"],[10,"RangeBounds",272],[5,"TypeId",273],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[1,"tuple"]],"b":[[70,"impl-PartialEq-for-Ident"],[71,"impl-PartialEq%3CT%3E-for-Ident"],[72,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[73,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[79,"impl-Debug-for-LexError"],[80,"impl-Display-for-LexError"],[81,"impl-Display-for-TokenStream"],[82,"impl-Debug-for-TokenStream"],[84,"impl-Display-for-TokenTree"],[85,"impl-Debug-for-TokenTree"],[86,"impl-Display-for-Group"],[87,"impl-Debug-for-Group"],[89,"impl-Display-for-Punct"],[90,"impl-Debug-for-Punct"],[92,"impl-Display-for-Ident"],[93,"impl-Debug-for-Ident"],[94,"impl-Debug-for-Literal"],[95,"impl-Display-for-Literal"],[97,"impl-From%3CTokenTree%3E-for-TokenStream"],[99,"impl-From%3CTokenStream%3E-for-TokenStream"],[102,"impl-From%3CIdent%3E-for-TokenTree"],[103,"impl-From%3CGroup%3E-for-TokenTree"],[104,"impl-From%3CLiteral%3E-for-TokenTree"],[105,"impl-From%3CPunct%3E-for-TokenTree"],[113,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"],[114,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"]]}],\
["quote",{"doc":"github crates-io docs-rs","t":"KKKMMMMMQNNQQNNNNM","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"proc_macro2"],[19,"core::convert"],[20,"core::iter::traits::collect"],[21,"core::fmt"],[22,"core::fmt"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,7,0,6,6,0,0,7,7,6,6,6],"f":"```{{bc}d{{h{f}}}}{{bc}dj}{{bce}djl}0{{nA`}Ab}`{lAd}0``{n{{Ah{Af}}}}011{{lAd}d}","c":[],"p":[[10,"TokenStreamExt",0],[1,"unit"],[6,"TokenTree",18],[10,"Into",19],[10,"IntoIterator",20],[10,"ToTokens",0],[10,"IdentFragment",0],[5,"Formatter",21],[8,"Result",21],[5,"TokenStream",18],[5,"Span",18],[6,"Option",22]],"b":[]}],\
["rand",{"doc":"Utilities for random number generation","t":"TKFKTKKRKNNNCNNMNNNNNNNMNNNNNNNNNNNMMCHNNCNNNNNCNNHNMNNMNNNNPFFGFFKKPPPFFFFPFGFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNCKKKRFFFFFKRMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEECKFNNNNNNNNNNEEEEEEEEEEEFFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNRKFKNNMNMNNMMNMMNNCNNNNMMNNNNNGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNN","n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from","from_entropy","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","inner","into","new","next_u32","next_u64","prelude","random","raw_os_error","read","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","source","take_inner","thread_rng","to_string","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","vzip","AllWeightsZero","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","DistString","Distribution","InvalidProbability","InvalidWeight","NoItem","Open01","OpenClosed01","Slice","Standard","TooMany","Uniform","WeightedError","WeightedIndex","append_string","append_string","append_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","new","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","sample_string","sample_string","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","update_weights","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","WeightedError","WeightedIndex","alias_method","Weight","WeightedIndex","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","vzip","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","StdRng","ThreadRng","random","thread_rng","OsRng","StdRng","ThreadRng","adapter","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_rng","from_seed","into","into","into","mock","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ReadError","ReadRng","ReseedingRng","as_rngcore","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reseed","source","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","StepRng","borrow","borrow_mut","clone","clone_into","eq","fill_bytes","fmt","from","into","new","next_u32","next_u64","to_owned","try_fill_bytes","try_from","try_into","type_id","vzip","Item","IteratorRandom","SliceChooseIter","SliceRandom","borrow","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","fmt","from","index","into","into_iter","len","next","partial_shuffle","shuffle","size_hint","try_from","try_into","type_id","vzip","IndexVec","IndexVecIntoIter","IndexVecIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","index","into","into","into","into_iter","into_iter","into_iter","into_vec","is_empty","iter","len","next","next","sample","sample_weighted","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"rand"],[60,"rand::distributions"],[328,"rand::distributions::uniform"],[473,"rand::distributions::weighted"],[476,"rand::distributions::weighted::alias_method"],[488,"rand::prelude"],[499,"rand::rngs"],[560,"rand::rngs::adapter"],[608,"rand::rngs::mock"],[627,"rand::seq"],[657,"rand::seq::index"],[710,"core::num::nonzero"],[711,"core::option"],[712,"core::marker"],[713,"core::fmt"],[714,"core::fmt"],[715,"getrandom::error"],[716,"core::default"],[717,"core::convert"],[718,"core::error"],[719,"alloc::boxed"],[720,"core::convert"],[721,"alloc::string"],[722,"core::any"],[723,"core::clone"],[724,"core::cmp"],[725,"core::cmp"],[726,"core::ops::range"],[727,"core::iter::traits::collect"],[728,"core::ops::arith"],[729,"core::num::nonzero"],[730,"core::num::nonzero"],[731,"alloc::vec"],[732,"rand_core::block"],[733,"std::io"],[734,"core::ops::index"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Generates a random value using the thread-local random …","Extract the raw OS error code (if this error came from the …","","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","","Unwrap the inner error (<code>std</code> only)","Retrieve the lazily-initialized thread-local random number …","","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","All items in the provided weight collection are zero.","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","<code>String</code> sampler","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A weight is either less than zero, greater than the …","The provided weight collection contains no items.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Too many weights are provided (length greater than <code>u32::MAX</code>…","Sample values uniformly between two bounds.","Error type returned from <code>WeightedIndex::new</code>.","A distribution using weighted sampling of discrete items","Append <code>len</code> random chars to <code>string</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","Creates a new a <code>WeightedIndex</code> <code>Distribution</code> using the values","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","Generate a <code>String</code> of <code>len</code> random chars","Generate a <code>String</code> of <code>len</code> random chars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","Update a subset of weights, without changing the number of …","","","","","","","","","","","","","Weighted index sampling","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A random number generator that retrieves randomness from …","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","Wrappers / adapters forming RNGs","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Mock random number generator","","","","","","","","","","","","","","","","","","","","","","","","","<code>ReadRng</code> error type","An RNG that reads random bytes straight from any type …","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>ReadRng</code> from a <code>Read</code>.","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …","","","","","Reseed the internal PRNG.","","","","","","","","","","","","","","","","","","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","An iterator over multiple slice elements.","Extension trait on slices, providing random mutation and …","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","Returns the argument unchanged.","Low-level API for sampling indices","Calls <code>U::from(self)</code>.","","","","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place.","","","","","","A vector of indices.","Return type of <code>IndexVec::into_iter</code>.","Return type of <code>IndexVec::iter</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the value at the given <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into an iterator over the indices as a sequence of …","","","Return result as a <code>Vec&lt;usize&gt;</code>. Conversion may or may not …","Returns <code>true</code> if the length is 0.","Iterate over the indices as a sequence of <code>usize</code> values","Returns the number of indices","","","Randomly sample exactly <code>amount</code> distinct indices from …","Randomly sample exactly <code>amount</code> distinct indices from …","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,0,0,17,0,1,1,1,0,5,5,9,1,1,1,1,1,17,17,17,5,5,5,5,5,5,5,5,1,1,1,9,9,0,0,1,9,0,5,5,5,5,17,0,1,1,0,1,7,5,5,9,1,1,1,1,47,0,0,0,0,0,0,0,40,47,47,0,0,0,0,47,0,0,0,36,37,38,39,40,32,52,41,42,37,43,45,47,48,38,39,40,32,52,41,42,37,43,45,47,48,38,39,40,41,42,37,43,45,47,48,38,39,40,41,42,37,43,45,47,48,38,39,40,45,47,48,39,40,40,32,52,41,42,37,43,45,47,47,48,38,39,40,32,52,41,42,37,43,45,47,48,48,48,38,39,39,40,32,52,41,42,37,43,45,47,48,38,32,31,31,39,43,45,32,31,39,52,41,41,42,42,37,43,45,48,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,31,31,36,36,32,39,40,41,42,37,43,45,47,48,38,40,47,39,40,32,52,41,42,37,43,45,47,48,38,39,40,32,52,41,42,37,43,45,47,48,38,39,40,32,52,41,42,37,43,45,47,48,38,0,45,39,40,32,52,41,42,37,43,45,47,48,38,0,0,0,0,22,0,0,0,0,0,0,83,77,78,79,80,81,78,79,80,81,78,79,80,81,78,79,80,81,78,80,78,79,80,81,78,79,80,81,78,79,80,81,23,83,48,78,78,78,78,78,78,78,78,78,78,78,78,79,80,80,81,83,48,78,78,78,78,78,78,78,78,78,78,78,78,79,80,80,81,83,78,78,78,78,78,78,78,78,78,78,78,78,79,80,80,81,23,83,78,78,78,78,78,78,78,78,78,78,78,78,80,80,83,78,78,78,78,78,78,78,78,78,78,78,78,78,79,80,81,78,79,80,81,78,79,80,81,78,79,80,81,78,79,80,81,0,0,0,0,0,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,33,88,89,33,88,89,33,88,89,33,88,89,33,88,33,89,88,89,33,88,89,33,88,89,33,89,89,88,89,33,0,88,89,33,88,89,33,88,89,33,88,89,33,88,89,33,88,89,33,88,89,33,88,89,33,0,0,0,90,92,95,90,92,95,90,90,90,92,90,92,95,95,90,92,95,90,92,95,90,92,90,92,90,92,90,90,95,90,95,92,90,92,95,90,92,95,90,92,95,90,92,95,90,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,0,0,0,99,99,97,98,97,98,98,97,97,98,97,97,99,99,0,99,99,99,99,97,97,99,99,99,99,99,0,0,0,101,103,102,101,103,102,101,102,101,102,101,101,103,102,101,101,101,103,102,101,101,103,102,101,103,102,101,101,101,101,103,102,0,0,103,102,101,102,101,103,102,101,103,102,101,103,102,101,103,102],"f":"`````````{ce{}{}}0{b{{h{{f{d}}}}}}`{{jc}l{nA`}}0{{Ab{Af{Ad}}}l}{{bAh}{{Al{lAj}}}}0{{{f{d}}}b}{Anb}{cc{}}{{}{{Bb{}{{B`{c}}}}}{A`Bd{Bf{{Af{Ad}}}}}}{c{{Al{{Bb{}{{B`{e}}}}b}}}Ab{A`Bd{Bf{{Af{Ad}}}}}}{c{{Bb{}{{B`{c}}}}}{A`Bd{Bf{{Af{Ad}}}}}}{jc{}}0{{jBh}Bj}0{{je}cBl{{Bn{c}}}}0{{jdd}Bj}0{bC`}?{cb{{Cd{{Cb{C`}}}}}}{Abd}{AbCf}`{{}c{}}{b{{h{Ch}}}}{{Ab{Af{Ad}}}{{Al{CjCl}}}}`{{je}c{}{{Cn{c}}}}0{{je}{{D`{ejc}}}{}{{Cn{c}}}}0{Cf{{Bb{}{{B`{c}}}}}{A`Bd{Bf{{Af{Ad}}}}}}`{b{{h{C`}}}}{b{{Cb{C`}}}}{{}Db}{cDd{}}{{nc}{{Al{lb}}}{jA`}}{{jc}{{Al{lb}}}{nA`}}0{{Ab{Af{Ad}}}{{Al{lb}}}}{c{{Al{e}}}{}{}}0{cDf{}}{ce{}{}}```````````````````{{DhcDdCj}l{jA`}}{{DjcDdCj}l{jA`}}{{DlcDdCj}l{jA`}}333333333333333333333333{DnDn}{E`E`}{EbEb}{EdEd}{DjDj}{{{Ef{c}}}{{Ef{c}}}Eh}{{{Ej{c}}}{{Ej{c}}}{EhBlEl}}{EnEn}{{{F`{c}}}{{F`{c}}}{EhBl}}{DlDl}{{ce}l{}{}}000000000{{DnDn}Bj}{{E`E`}Bj}{{{Ej{c}}{Ej{c}}}Bj{FbBlEl}}{{EnEn}Bj}{{{F`{c}}{F`{c}}}Bj{FbBl}}{{DnAh}Fd}{{E`Ah}Fd}0{{{D`{ceg}}Ah}FdFfFfFf}{{{Fh{cegi}}Ah}FdFfFfFfFf}{{EbAh}Fd}{{EdAh}Fd}{{DjAh}Fd}{{{Ef{c}}Ah}FdFf}{{{Ej{c}}Ah}Fd{FfBlEl}}{{EnAh}Fd}0{{{F`{c}}Ah}Fd{FfBl}}{{DlAh}Fd}{cc{}}000000000{{{Fj{c}}}{{F`{c}}}Bl}1{{{Fl{c}}}{{F`{c}}}Bl}2{{dd}{{Al{DnE`}}}}{ce{}{}}000000000000{{Cng}{{Fh{Cngce}}}{}{}{{G`{c}{{Fn{e}}}}}}0{Bh{{Al{DnE`}}}}{{{Af{c}}}{{Al{{Ef{c}}`}}}{}}{c{{Al{{Ej{e}}En}}}Gb{GdEhBdBlEl}}{{{D`{egc}}}{{h{c}}}{}{{Cn{c}}}j}{{Cnc}e{jA`}{}}{{Dnc}Bj{jA`}}{{{Fh{eicg}}k}g{}{{Cn{c}}}{}{{G`{c}{{Fn{g}}}}}{jA`}}{{Ebc}Bh{jA`}}{{Ebc}Gf{jA`}}{{Edc}Bh{jA`}}{{Edc}Gf{jA`}}{{Djc}Ad{jA`}}{{{Ef{c}}e}c{}{jA`}}{{{Ej{c}}e}Cj{BlEl}{jA`}}{{{F`{c}}e}cBl{jA`}}{{Dlc}{{Gh{egikmoAaAcAeAg}}}{jA`}{}{}{}{}{}{}{}{}{}{}}{{Dlc}Gj{jA`}}{{Dlc}{{Gl{e}}}{jA`}{}}0{{Dlc}{{Gn{e}}}{jA`}{}}1{{Dlc}Cj{jA`}}2{{Dlc}{{Gh{egikmo}}}{jA`}{}{}{}{}{}{}}3{{Dlc}Cf{jA`}}444{{Dlc}H`{jA`}}{{Dlc}Hb{jA`}}{{Dlc}{{Gh{egikmoAaAcAe}}}{jA`}{}{}{}{}{}{}{}{}{}}77{{Dlc}Hd{jA`}}888{{Dlc}Hf{jA`}}9{{Dlc}d{jA`}}::{{Dlc}Hh{jA`}}{{Dlc}Hj{jA`}}{{Dlc}Hl{jA`}}===={{Dlc}Hn{jA`}}{{Dlc}{{h{e}}}{jA`}{}}?{{Dlc}{{Gh{egikmoAa}}}{jA`}{}{}{}{}{}{}{}}{{Dlc}Ch{jA`}}{{Dlc}{{Gh{egikmoAaAcAeAgAiAk}}}{jA`}{}{}{}{}{}{}{}{}{}{}{}{}}{{Dlc}{{Gl{e}}}{jA`}{}}{{Dlc}I`{jA`}}1{{Dlc}Gf{jA`}}{{Dlc}Ib{jA`}}3{{Dlc}{{Gh{egik}}}{jA`}{}{}{}{}}{{Dlc}Ad{jA`}}{{Dlc}l{jA`}}66{{Dlc}Bj{jA`}}{{Dlc}{{Gh{egikmoAaAcAeAgAi}}}{jA`}{}{}{}{}{}{}{}{}{}{}{}}{{Dlc}Id{jA`}}99{{Dlc}{{Gh{eg}}}{jA`}{}{}}{{Dlc}{{Gh{egikm}}}{jA`}{}{}{}{}{}}{{Dlc}If{jA`}}<{{Dlc}Bh{jA`}}=={{Dlc}{{Gh{egi}}}{jA`}{}{}{}}>{{Dlc}{{Gh{egikmoAaAc}}}{jA`}{}{}{}{}{}{}{}{}}?{{Dlc}{{Gh{e}}}{jA`}{}}{{Dlc}Ih{jA`}}{{Cnc}{{D`{Cnce}}}j{}}0{{DhcCj}Dd{jA`}}0{{{D`{egc}}}{{Gh{Cj{h{Cj}}}}}{}{{Cn{c}}}j}{ce{}{}}000000000{cDd{}}0{c{{Al{e}}}{}{}}00000000000000000000000{cDf{}}00000000000`{{{Ej{c}}{Af{{Gh{Cjc}}}}}{{Al{lEn}}}{}}444444444444````````````{Ijc{}}55555555{{{Il{c}}}{{Il{c}}}Eh}{InIn}{{{J`{c}}}{{J`{c}}}Eh}{JbJb}{{ce}l{}{}}000{{{Il{c}}{Il{c}}}BjFb}{{{J`{c}}{J`{c}}}BjFb}{{{Il{c}}Ah}FdFf}{{InAh}Fd}{{{J`{c}}Ah}FdFf}{{JbAh}Fd}{cc{}}000{ce{}{}}000{BnBj}{{eg}{{Jf{}{{Jd{c}}}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{F`{c}}}Bl{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Cj}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Hj}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Ih}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{H`}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{I`}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Ib}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Ad}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Hd}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Hf}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Ch}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{Cf}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Il{d}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}In{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{J`{Bh}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{J`{Gf}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}Jb{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{Jf{}{{Jd{c}}}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}{{eg}{{F`{c}}}Bl{{Ij{c}}A`}{{Ij{c}}A`}}>698{{eg}{{Il{Cj}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}<8={{eg}{{Il{Hj}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}?{{eg}{{Il{Ih}}}{}{{Ij{c}}A`}{{Ij{c}}A`}}=8675{{{Jf{}{{Jd{c}}}}e}c{}{jA`}}{{{Il{Ib}}c}e{jA`}{}}{{{Il{H`}}c}e{jA`}{}}{{{Il{Cf}}c}e{jA`}{}}{{{Il{Hd}}c}e{jA`}{}}{{{Il{Ih}}c}e{jA`}{}}{{{Il{Hj}}c}e{jA`}{}}{{{Il{I`}}c}e{jA`}{}}{{{Il{Ad}}c}e{jA`}{}}{{{Il{Ch}}c}e{jA`}{}}{{{Il{Cj}}c}e{jA`}{}}{{{Il{Hf}}c}e{jA`}{}}{{{Il{d}}c}e{jA`}{}}{{Inc}e{jA`}{}}{{{J`{Bh}}c}e{jA`}{}}{{{J`{Gf}}c}e{jA`}{}}{{Jbc}Jh{jA`}}{{Bnc}e{AbA`}{}}{{egi}c{}{{Ij{c}}A`}{{Ij{c}}A`}{jA`}}000000000000000000000000000{ce{}{}}000{c{{Al{e}}}{}{}}0000000{cDf{}}0002222`````22{{{Jj{c}}Ah}Fd{FfJl}}{cc{}}4{{{Jn{c}}}{{Al{{Jj{c}}En}}}Jl}4435```````````````{cAb{}}00666666{K`K`}{KbKb}{DbDb}{{ce}l{}{}}00{{}K`}{{}Db}{{KbKb}Bj}{{K`{Af{Ad}}}l}{{Kb{Af{Ad}}}l}{{Db{Af{Ad}}}l}{{K`Ah}{{Al{lAj}}}}{{KbAh}Fd}{{DbAh}Fd}???{c{{Al{Kbb}}}Ab}{cKb{}}{ce{}{}}00`{K`d}{Kbd}{Dbd}{K`Cf}{KbCf}{DbCf}666{{K`{Af{Ad}}}{{Al{lb}}}}{{Kb{Af{Ad}}}{{Al{lb}}}}{{Db{Af{Ad}}}{{Al{lb}}}}{c{{Al{e}}}{}{}}00000{cDf{}}00;;;```{cAb{}}<<<<<<{{{Kd{ce}}}{{Kd{ce}}}{KfBbEh}{AbEh}}{{ce}l{}{}}{{{Kh{c}}{Af{Ad}}}lKj}{{{Kd{ce}}{Af{Ad}}}l{{Kf{}{{Kl{d}}}}Bb}Ab}{{{Kh{c}}Ah}FdFf}{{KnAh}Fd}0{{{Kd{ce}}Ah}Fd{KfBbFf}{AbFf}}{cc{}}00{ce{}{}}00{c{{Kh{c}}}Kj}{{cCfe}{{Kd{ce}}}{KfBb}Ab}{{{Kh{c}}}dKj}{{{Kd{ce}}}d{{Kf{}{{Kl{d}}}}Bb}Ab}{{{Kh{c}}}CfKj}{{{Kd{ce}}}Cf{{Kf{}{{Kl{d}}}}Bb}Ab}{{{Kd{ce}}}{{Al{lb}}}{KfBb}Ab}{Kn{{h{C`}}}}8{cDd{}}{{{Kh{c}}{Af{Ad}}}{{Al{lb}}}Kj}{{{Kd{ce}}{Af{Ad}}}{{Al{lb}}}{{Kf{}{{Kl{d}}}}Bb}Ab}{c{{Al{e}}}{}{}}00000{cDf{}}00===`=={L`L`}{{ce}l{}{}}{{L`L`}Bj}{{L`{Af{Ad}}}l}{{L`Ah}Fd}{cc{}}{ce{}{}}{{CfCf}L`}{L`d}{L`Cf}3{{L`{Af{Ad}}}{{Al{lb}}}}<<;4````44{{{Lb{}{{Kl{c}}}}e}{{h{c}}}{}{jA`}}{{Ldc}{{h{e}}}{jA`}{}}{{{Lb{}{{Kl{c}}}}eCj}{{Lf{{Lb{}{{Kl{c}}}}c}}}{}{jA`}}{{LdcCj}{{Jn{e}}}{jA`}{}}{{Ldc{Af{e}}}Cj{jA`}{}}{{{Lb{}{{Kl{c}}}}eCji}{{Al{{Lf{{Lb{}{{Kl{c}}}}c}}En}}}{}{jA`}{{Cd{Bh}}}{{G`{c}{{Fn{g}}}}}}54{{{Lb{}{{Kl{c}}}}ek}{{Al{cEn}}}{}{jA`}{}{{Ij{g}}}{{G`{c}{{Fn{i}}}}}}0{{{Lf{ce}}Ah}Fd{FfA`}Ff}=`<<{{{Lf{ec}}}Cj{}{{Lh{Cj}{{Fn{c}}}}A`}}{{{Lf{ec}}}{{h{g}}}{}{{Lh{Cj}{{Fn{c}}}}A`}{}}{{{Lb{}{{Kl{c}}}}eCj}{{Gh{{Af{c}}{Af{c}}}}}{}{jA`}}{{{Lb{}{{Kl{c}}}}e}l{}{jA`}}{{{Lf{ec}}}{{Gh{Cj{h{Cj}}}}}{}{{Lh{Cj}{{Fn{c}}}}A`}}{c{{Al{e}}}{}{}}0{cDf{}}{ce{}{}}```000000{LjLj}{LlLl}{{ce}l{}{}}0{{LjLj}Bj}{{LjAh}Fd}{{LnAh}Fd}{{LlAh}Fd}{{{Jn{d}}}Lj}{{{Jn{Cj}}}Lj}{cc{}}00{{LjCj}Cj};;;{LjLl}<<{Lj{{Jn{Cj}}}}{LjBj}{LjLn}{LjCj}{Ln{{h{Cj}}}}{Ll{{h{c}}}{}}{{cCjCj}Lj{jA`}}{{cCjgCj}{{Al{LjEn}}}{jA`}{{Cd{Bh}}}{{G`{Cj}{{Fn{e}}}}}}{Ln{{Gh{Cj{h{Cj}}}}}}{Ll{{Gh{Cj{h{Cj}}}}}}{ce{}{}}0{c{{Al{e}}}{}{}}00000{cDf{}}00222","c":[327,473,474,475,476,477,480,483,560,561],"p":[[5,"Error",0],[1,"u32"],[5,"NonZero",710],[6,"Option",711],[10,"Rng",0],[1,"unit"],[10,"Fill",0],[10,"Sized",712],[10,"RngCore",0],[1,"u8"],[1,"slice"],[5,"Formatter",713],[5,"Error",713],[6,"Result",714],[5,"Error",715],[17,"Seed"],[10,"SeedableRng",0],[10,"Default",716],[10,"AsMut",717],[1,"f64"],[1,"bool"],[10,"SampleUniform",328],[10,"SampleRange",328],[10,"Error",718],[5,"Box",719],[10,"Into",717],[1,"u64"],[1,"i32"],[1,"usize"],[5,"Error",720],[10,"Distribution",60],[5,"DistIter",60],[5,"ThreadRng",499],[5,"String",721],[5,"TypeId",722],[10,"DistString",60],[5,"Alphanumeric",60],[5,"Standard",60],[5,"Bernoulli",60],[6,"BernoulliError",60],[5,"OpenClosed01",60],[5,"Open01",60],[5,"Slice",60],[10,"Clone",723],[5,"WeightedIndex",60],[10,"PartialOrd",724],[6,"WeightedError",60],[5,"Uniform",60],[10,"PartialEq",724],[8,"Result",713],[10,"Debug",713],[5,"DistMap",60],[5,"RangeInclusive",725],[5,"Range",725],[17,"Output"],[10,"Fn",726],[10,"IntoIterator",727],[10,"AddAssign",728],[1,"f32"],[1,"tuple"],[8,"NonZeroU128",710],[1,"array"],[5,"Wrapping",729],[1,"u128"],[8,"NonZeroU16",710],[1,"i8"],[1,"i16"],[1,"char"],[1,"isize"],[8,"NonZeroU8",710],[8,"NonZeroU32",710],[1,"i64"],[1,"i128"],[8,"NonZeroUsize",710],[8,"NonZeroU64",710],[1,"u16"],[10,"SampleBorrow",328],[5,"UniformInt",328],[5,"UniformChar",328],[5,"UniformFloat",328],[5,"UniformDuration",328],[17,"X"],[10,"UniformSampler",328],[5,"Duration",730],[5,"WeightedIndex",476],[10,"Weight",476],[5,"Vec",731],[5,"OsRng",499],[5,"StdRng",499],[5,"ReseedingRng",560],[10,"BlockRngCore",732],[5,"ReadRng",560],[10,"Read",733],[17,"Item"],[5,"ReadError",560],[5,"StepRng",608],[10,"SliceRandom",627],[10,"IteratorRandom",627],[5,"SliceChooseIter",627],[10,"Index",734],[6,"IndexVec",657],[6,"IndexVecIntoIter",657],[6,"IndexVecIter",657]],"b":[[16,"impl-Debug-for-Error"],[17,"impl-Display-for-Error"],[18,"impl-From%3CNonZero%3Cu32%3E%3E-for-Error"],[19,"impl-From%3CError%3E-for-Error"],[132,"impl-Display-for-BernoulliError"],[133,"impl-Debug-for-BernoulliError"],[141,"impl-Display-for-WeightedError"],[142,"impl-Debug-for-WeightedError"],[155,"impl-From%3CRangeInclusive%3CX%3E%3E-for-Uniform%3CX%3E"],[157,"impl-From%3CRange%3CX%3E%3E-for-Uniform%3CX%3E"],[182,"impl-Distribution%3Cf64%3E-for-OpenClosed01"],[183,"impl-Distribution%3Cf32%3E-for-OpenClosed01"],[184,"impl-Distribution%3Cf64%3E-for-Open01"],[185,"impl-Distribution%3Cf32%3E-for-Open01"],[190,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Standard"],[191,"impl-Distribution%3CNonZero%3Cu128%3E%3E-for-Standard"],[192,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[193,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[194,"impl-Distribution%3CWrapping%3CT%3E%3E-for-Standard"],[195,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[196,"impl-Distribution%3Cusize%3E-for-Standard"],[197,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[198,"impl-Distribution%3C(A,+B,+C,+D,+E,+F)%3E-for-Standard"],[199,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[200,"impl-Distribution%3Cu64%3E-for-Standard"],[201,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[202,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[203,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[204,"impl-Distribution%3Cu128%3E-for-Standard"],[205,"impl-Distribution%3CNonZero%3Cu16%3E%3E-for-Standard"],[206,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Standard"],[207,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[208,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[209,"impl-Distribution%3Ci8%3E-for-Standard"],[210,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[211,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[212,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[213,"impl-Distribution%3Ci16%3E-for-Standard"],[214,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[215,"impl-Distribution%3Cu32%3E-for-Standard"],[216,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[217,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[218,"impl-Distribution%3Cchar%3E-for-Standard"],[219,"impl-Distribution%3Cisize%3E-for-Standard"],[220,"impl-Distribution%3CNonZero%3Cu8%3E%3E-for-Standard"],[221,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[222,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[223,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[224,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[225,"impl-Distribution%3CNonZero%3Cu32%3E%3E-for-Standard"],[226,"impl-Distribution%3COption%3CT%3E%3E-for-Standard"],[227,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[228,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Standard"],[229,"impl-Distribution%3Ci32%3E-for-Standard"],[230,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Standard"],[231,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[232,"impl-Distribution%3Ci64%3E-for-Standard"],[233,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[234,"impl-Distribution%3Cf32%3E-for-Standard"],[235,"impl-Distribution%3Ci128%3E-for-Standard"],[236,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[237,"impl-Distribution%3C(A,+B,+C,+D)%3E-for-Standard"],[238,"impl-Distribution%3Cu8%3E-for-Standard"],[239,"impl-Distribution%3C()%3E-for-Standard"],[240,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[241,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[242,"impl-Distribution%3Cbool%3E-for-Standard"],[243,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Standard"],[244,"impl-Distribution%3CNonZero%3Cusize%3E%3E-for-Standard"],[245,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[246,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[247,"impl-Distribution%3C(A,+B)%3E-for-Standard"],[248,"impl-Distribution%3C(A,+B,+C,+D,+E)%3E-for-Standard"],[249,"impl-Distribution%3CNonZero%3Cu64%3E%3E-for-Standard"],[250,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[251,"impl-Distribution%3Cf64%3E-for-Standard"],[252,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[253,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[254,"impl-Distribution%3C(A,+B,+C)%3E-for-Standard"],[255,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[256,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Standard"],[257,"impl-Distribution%3C%5BT;+32%5D%3E-for-Standard"],[258,"impl-Distribution%3C(A,)%3E-for-Standard"],[259,"impl-Distribution%3Cu16%3E-for-Standard"],[373,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[374,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[375,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[376,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[377,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[378,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[379,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[380,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[381,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[382,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[383,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[384,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[386,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[387,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[391,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[392,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[393,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[394,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[395,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[396,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[397,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[398,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[399,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[400,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[401,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[402,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[404,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[405,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[408,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[409,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[410,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[411,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[412,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[413,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[414,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[415,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[416,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[417,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[418,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[419,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[421,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[422,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[426,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[427,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[428,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[429,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[430,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[431,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[432,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[433,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[434,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[435,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[436,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[437,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[438,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[439,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[441,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[442,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[443,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[444,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[445,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[446,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[447,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[448,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[449,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[450,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[451,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[452,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[575,"impl-Debug-for-ReadError"],[576,"impl-Display-for-ReadError"],[674,"impl-From%3CVec%3Cu32%3E%3E-for-IndexVec"],[675,"impl-From%3CVec%3Cusize%3E%3E-for-IndexVec"]]}],\
["rand_chacha",{"doc":"The ChaCha random number generator.","t":"FFFFFFIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"rand_chacha"],[129,"rand_core"],[130,"core::fmt"],[131,"core::fmt"],[132,"core::result"],[133,"core::any"]],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,3,4,5,5,6,7,7,2,3,4,5,6,7,2,4,6,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,3,5,7,0,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":"````````{cb{}}00{ce{}{}}00000000000{dd}{ff}{hh}{jj}{ll}{nn}{{ce}A`{}{}}00000{{dd}Ab}{{ff}Ab}{{hh}Ab}{{jj}Ab}{{ll}Ab}{{nn}Ab}{{f{Af{Ad}}}A`}{{j{Af{Ad}}}A`}{{n{Af{Ad}}}A`}{{dAh}Aj}{{fAh}Aj}{{hAh}Aj}{{jAh}Aj}{{lAh}Aj}{{nAh}Aj}{cc{}}0{df}1{hj}222{ln}{cd{}}{cf{}}{ch{}}{cj{}}{cl{}}{cn{}}{{dc}A`{}}{{hc}A`{}}{{lc}A`{}}{f{{Al{Ad}}}}{j{{Al{Ad}}}}{n{{Al{Ad}}}}{fAn}{jAn}{nAn}{fB`}{jB`}{nB`}{ce{}{}}00000{fBb}{jBb}{nBb}987`{{fAn}A`}{{jAn}A`}{{nAn}A`}{{fB`}A`}{{jB`}A`}{{nB`}A`}999999{{f{Af{Ad}}}{{Bf{A`Bd}}}}{{j{Af{Ad}}}{{Bf{A`Bd}}}}{{n{Af{Ad}}}{{Bf{A`Bd}}}}{c{{Bf{e}}}{}{}}00000000000{cBh{}}00000>>>>>>","c":[],"p":[[10,"RngCore",129],[5,"ChaCha20Core",0],[5,"ChaCha20Rng",0],[5,"ChaCha12Core",0],[5,"ChaCha12Rng",0],[5,"ChaCha8Core",0],[5,"ChaCha8Rng",0],[1,"unit"],[1,"bool"],[1,"u8"],[1,"slice"],[5,"Formatter",130],[8,"Result",130],[1,"array"],[1,"u64"],[1,"u128"],[1,"u32"],[5,"Error",131],[6,"Result",132],[5,"TypeId",133]],"b":[]}],\
["rand_core",{"doc":"Random number generation traits","t":"TKKFTFKRKMNCNNNNNNNNMNNNNNNNNNNMCNNNCNMNMNNNNNNNNMNNNNNNNFFKRRNNNNNNNNNOONNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHH","n":["CUSTOM_START","CryptoRng","CryptoRngCore","Error","INTERNAL_START","OsRng","RngCore","Seed","SeedableRng","as_rngcore","as_rngcore","block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","default","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from","from_entropy","from_rng","from_seed","impls","inner","into","into","le","new","next_u32","next_u32","next_u64","next_u64","raw_os_error","read","seed_from_u64","source","take_inner","to_owned","to_string","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","to_owned","to_owned","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":[[0,"rand_core"],[57,"rand_core::block"],[110,"rand_core::impls"],[116,"rand_core::le"],[118,"core::num::nonzero"],[119,"core::option"],[120,"core::fmt"],[121,"core::fmt"],[122,"core::marker"],[123,"core::default"],[124,"core::convert"],[125,"core::result"],[126,"core::error"],[127,"alloc::boxed"],[128,"core::convert"],[129,"alloc::string"],[130,"core::any"],[131,"core::clone"],[132,"core::fmt"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","An extension trait that is automatically implemented for …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","A random number generator that retrieves randomness from …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Upcast to an <code>RngCore</code> trait object.","","The <code>BlockRngCore</code> trait and implementation helpers","","","","","","","Retrieve the error code, if any.","","Fill <code>dest</code> with random data.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Reference the inner error (<code>std</code> only)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Construct from any type supporting <code>std::error::Error</code>","Return the next random <code>u32</code>.","","Return the next random <code>u64</code>.","","Extract the raw OS error code (if this error came from the …","","Create a new PRNG using a <code>u64</code> seed.","","Unwrap the inner error (<code>std</code> only)","","","Fill <code>dest</code> entirely with random data.","","","","","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[5,0,0,0,5,0,0,14,0,1,3,0,5,3,5,3,3,3,5,3,2,3,5,5,3,5,5,5,3,14,14,14,0,5,5,3,0,5,2,3,2,3,5,2,14,5,5,3,5,2,3,5,3,5,3,5,3,0,0,0,31,31,29,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,31,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,29,32,0,0,0,0,0,0,0,0],"f":"`````````{bd}{cd{}}`{ce{}{}}000{ff}{{ce}h{}{}}{j{{n{l}}}}{{}f}{{d{Ab{A`}}}h}{{f{Ab{A`}}}h}{{jAd}Af}0{{fAd}Af}{Ahj}{lj}{cc{}}0{{}{{Al{}{{Aj{c}}}}}{AnB`{Bb{{Ab{A`}}}}}}{c{{Bd{{Al{}{{Aj{e}}}}j}}}d{AnB`{Bb{{Ab{A`}}}}}}{c{{Al{}{{Aj{c}}}}}{AnB`{Bb{{Ab{A`}}}}}}`{jBf}??`{cj{{Bj{{Bh{Bf}}}}}}{dBl}{fBl}{dBn}{fBn}{j{{n{C`}}}}{{d{Ab{A`}}}{{Bd{CbCd}}}}{Bn{{Al{}{{Aj{c}}}}}{AnB`{Bb{{Ab{A`}}}}}}{j{{n{Bf}}}}{j{{Bh{Bf}}}}{ce{}{}}{cCf{}}{{d{Ab{A`}}}{{Bd{hj}}}}{{f{Ab{A`}}}{{Bd{hj}}}}{c{{Bd{e}}}{}{}}000{cCh{}}0`````{cd{}}6666{{{Cj{c}}}{{Cj{c}}}{ClCnAn}}{{{D`{c}}}{{D`{c}}}{ClCnAn}}{{ce}h{}{}}0``{{{Cj{c}}{Ab{A`}}}h{{Cn{}{{Db{Bl}}}}}}{{{D`{c}}{Ab{A`}}}h{{Cn{}{{Db{Bn}}}}}}{{{Cj{c}}Ad}Af{CnDd}}{{{D`{c}}Ad}Af{CnDd}}{cc{}}0{c{{Bd{{Cj{e}}j}}}d{CnAl}}{c{{Bd{{D`{e}}j}}}d{CnAl}}{c{{Cj{e}}}{}{CnAl}}{c{{D`{e}}}{}{CnAl}}{{{Cn{}{{Db{c}}{Df{e}}}}e}h{}{{Dh{{Ab{c}}}}{Bb{{Ab{c}}}}B`}}{{{Cj{c}}Cb}hCn}{{{D`{c}}Cb}hCn}{{{Cj{c}}}CbCn}{{{D`{c}}}CbCn}{ce{}{}}0{c{{Cj{c}}}Cn}{c{{D`{c}}}Cn}{{{Cj{c}}}Bl{{Cn{}{{Db{Bl}}}}}}{{{D`{c}}}Bl{{Cn{}{{Db{Bn}}}}}}{{{Cj{c}}}Bn{{Cn{}{{Db{Bl}}}}}}{{{D`{c}}}Bn{{Cn{}{{Db{Bn}}}}}}{{{Cj{c}}}hCn}{{{D`{c}}}hCn}{Bn{{Cj{c}}}{CnAl}}{Bn{{D`{c}}}{CnAl}}::{{{Cj{c}}{Ab{A`}}}{{Bd{hj}}}{{Cn{}{{Db{Bl}}}}}}{{{D`{c}}{Ab{A`}}}{{Bd{hj}}}{{Cn{}{{Db{Bn}}}}}}{c{{Bd{e}}}{}{}}000{cCh{}}0{{c{Ab{A`}}}h{dAn}}{{{Ab{Bl}}{Ab{A`}}}{{Dj{CbCb}}}}{{{Ab{Bn}}{Ab{A`}}}{{Dj{CbCb}}}}{cBl{dAn}}{cBn{dAn}}0{{{Ab{A`}}{Ab{Bl}}}h}{{{Ab{A`}}{Ab{Bn}}}h}","c":[],"p":[[10,"CryptoRngCore",0],[10,"RngCore",0],[5,"OsRng",0],[1,"unit"],[5,"Error",0],[8,"NonZeroU32",118],[6,"Option",119],[1,"u8"],[1,"slice"],[5,"Formatter",120],[8,"Result",120],[5,"Error",121],[17,"Seed"],[10,"SeedableRng",0],[10,"Sized",122],[10,"Default",123],[10,"AsMut",124],[6,"Result",125],[10,"Error",126],[5,"Box",127],[10,"Into",124],[1,"u32"],[1,"u64"],[1,"i32"],[1,"usize"],[5,"Error",128],[5,"String",129],[5,"TypeId",130],[5,"BlockRng",57],[10,"Clone",131],[10,"BlockRngCore",57],[5,"BlockRng64",57],[17,"Item"],[10,"Debug",120],[17,"Results"],[10,"AsRef",124],[1,"tuple"]],"b":[[22,"impl-Display-for-Error"],[23,"impl-Debug-for-Error"],[25,"impl-From%3CError%3E-for-Error"],[26,"impl-From%3CNonZero%3Cu32%3E%3E-for-Error"]]}],\
["scopeguard",{"doc":"A scope guard will run a given closure when it goes out of …","t":"GFKNNNNQNNNNNNNHNNNMNNNNNNNN","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"],[28,"core::ops::function"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,8,1,8,0,1,1,1,1,8,1,8,0,1,8,1,3,8,1,8,1,8,1,8,1],"f":"```{ce{}{}}000`{{{b{ceg}}}c{}{{d{c}}}f}0{{{b{ceg}}}h{}{{d{c}}}f}{{{b{ceg}}j}ln{{d{c}}}f}{{A`j}l}{cc{}}0{{ce}{{b{ceA`}}}{}{{d{c}}}}665{{}Ab}0{c{{Ad{e}}}{}{}}000{cAf{}}0{{ce}{{b{ceg}}}{}{{d{c}}}f}","c":[],"p":[[5,"ScopeGuard",0],[10,"FnOnce",28],[10,"Strategy",0],[1,"unit"],[5,"Formatter",29],[8,"Result",29],[10,"Debug",29],[6,"Always",0],[1,"bool"],[6,"Result",30],[5,"TypeId",31]],"b":[]}],\
["serverdyna",{"doc":"","t":"HH","n":["handle_client","main"],"q":[[0,"serverdyna"],[2,"tokio::net::tcp::stream"],[3,"alloc::string"],[4,"core::error"],[5,"alloc::boxed"],[6,"core::result"]],"d":["Gère la connexion d’un client, enregistre les détails …","Point d’entrée principal de l’application. Lit les …"],"i":[0,0],"f":"{{bddd}f}{{}{{l{f{j{h}}}}}}","c":[],"p":[[5,"TcpStream",2],[5,"String",3],[1,"unit"],[10,"Error",4],[5,"Box",5],[6,"Result",6]],"b":[]}],\
["smallvec",{"doc":"Small vectors in various sizes. These store a certain …","t":"PKPGFFRFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNQNNNNMNNNNNNNNNNNNNNNNNNO","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[137,"smallvec::CollectionAllocErr"],[138,"core::clone"],[139,"core::cmp"],[140,"core::ops::function"],[141,"core::ops::range"],[142,"core::iter::traits::collect"],[143,"core::fmt"],[144,"core::fmt"],[145,"core::alloc::layout"],[146,"core::mem::maybe_uninit"],[147,"core::hash"],[148,"core::slice::index"],[149,"alloc::boxed"],[150,"core::result"],[151,"core::option"],[152,"alloc::string"],[153,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[18,0,18,0,0,0,3,0,0,1,1,1,1,6,1,1,1,6,13,1,1,6,18,13,1,1,6,18,1,1,1,6,1,1,6,1,1,1,1,1,1,1,1,13,1,6,1,1,1,13,1,6,18,18,13,1,1,1,1,6,18,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,1,6,18,1,1,13,1,1,1,6,1,1,13,1,1,13,6,13,6,1,1,1,1,1,1,1,1,1,1,1,1,3,13,6,0,1,1,1,6,28,18,1,13,1,6,18,1,13,1,6,18,1,1,13,1,6,18,1,31],"f":"`````````{{{b{c}}{b{e}}}df{{f{}{{h{}}}}}}{{{b{c}}}jf}{{{b{c}}}{}f}1{{{l{c}}}jf}1220{ce{}{}}030003000{{{b{c}}}nf}{{{b{c}}}df}{{{b{c}}}{{b{c}}}f}{{{l{c}}}{{l{c}}}{fA`}}{{{b{c}}{b{c}}}df}{{ce}d{}{}}0{{{b{c}}{b{c}}}Abf}5{{{b{c}}e}df{{Ah{}{{Ad{Af}}}}}}{{{b{c}}g}df{}{{Ah{}{{Ad{e}}}}}}{{}{{b{c}}}f}=={{{b{c}}e}{{Aj{c}}}f{{Al{n}}}}{{{Aj{c}}}df}:{{{l{c}}}df}{{{b{c}}{b{e}}}Afff}{{{b{c}}e}df{{An{}{{h{}}}}}}{{{b{c}}j}df}{{{Aj{c}}B`}Bbf}{{{b{c}}B`}Bbf}{{{l{c}}B`}Bbf}{{BdB`}Bb}0{cc{}}{c{{b{c}}}f}{j{{b{c}}}f}{Bf{{b{c}}}f}33{BhBd}43{{cn}{{b{c}}}f}{{{Bj{c}}n}{{b{c}}}f}{n{{b{c}}}f}{c{{b{e}}}{{An{}{{h{}}}}}f}{{nn}{{b{c}}}f}76{{{b{c}}n}df}{{{b{c}}e}dfBl}{{{b{c}}e}{}f{{Bn{j}}}}0{{{b{c}}}nf}3{{{b{c}}nj}df}{{{b{c}}ne}df{{An{}{{h{}}}}}}{ce{}{}}000{{{b{c}}}{{C`{j}}}f}{{{b{c}}}{{Cb{c{b{c}}}}}f}2{{{b{c}}}ef{}}003{{{b{c}}}Bff}{{{b{c}}}Aff}{{{Aj{c}}}nf}9{{}{{b{c}}}f}{{{Aj{c}}}Cdf}{{{l{c}}}Cdf}10{{{b{c}}{b{c}}}{{Cd{Ab}}}f}{{{b{c}}}Cdf}{{{b{c}}}df}{{{b{c}}n}{}f}{{{b{c}}n}df}00{{{b{c}}ne}df{{Ah{}{{Ad{}}}}}}{{{b{c}}e}df{{Ah{}{{Ad{Af}}}}}}024{{}n}{{{Aj{c}}}{{Cf{n{Cd{n}}}}}f}{{{l{c}}}{{Cf{n{Cd{n}}}}}f}`>6{ce{}{}}0{Ch{{b{c}}}f}{cCj{}}8{c{{Cb{e}}}{}{}}000{{{b{c}}n}{{Cb{dBd}}}f}111100{cCl{}}000{n{{b{c}}}f}`","c":[],"p":[[5,"SmallVec",0],[1,"unit"],[10,"Array",0],[17,"Item"],[1,"slice"],[5,"IntoIter",0],[1,"usize"],[10,"Clone",138],[6,"Ordering",139],[17,"Output"],[1,"bool"],[10,"FnMut",140],[5,"Drain",0],[10,"RangeBounds",141],[10,"IntoIterator",142],[5,"Formatter",143],[8,"Result",143],[6,"CollectionAllocErr",0],[5,"Vec",144],[8,"LayoutErr",145],[20,"MaybeUninit",146],[10,"Hasher",147],[10,"SliceIndex",148],[5,"Box",149],[6,"Result",150],[6,"Option",151],[1,"tuple"],[10,"ToSmallVec",0],[5,"String",152],[5,"TypeId",153],[15,"AllocErr",137]],"b":[[52,"impl-Debug-for-CollectionAllocErr"],[53,"impl-Display-for-CollectionAllocErr"],[55,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[56,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[57,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[85,"impl-IntoIterator-for-%26SmallVec%3CA%3E"],[86,"impl-IntoIterator-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"]]}],\
["socket2",{"doc":"Utilities for creating and using sockets.","t":"PTFTTTTPGFFFFTFTTFFFTFFTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Address","DGRAM","Domain","ICMPV4","ICMPV6","IPV4","IPV6","Index","InterfaceIndexOrAddress","MaybeUninitSlice","MsgHdr","MsgHdrMut","Protocol","RAW","RecvFlags","SEQPACKET","STREAM","SockAddr","SockRef","Socket","TCP","TcpKeepalive","Type","UDP","UNIX","accept","accept_raw","as_ptr","as_raw_socket","as_socket","as_socket","as_socket_ipv4","as_socket_ipv6","as_storage","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connect_timeout","control_len","deref","deref","deref_mut","domain","eq","eq","eq","eq","eq","family","flags","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_address","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_socket","hash","header_included","into","into","into","into","into","into","into","into","into","into","into","into","into_raw_socket","is_ipv4","is_ipv6","is_truncated","is_unix","join_multicast_v4","join_multicast_v4_n","join_multicast_v6","join_ssm_v4","keepalive","leave_multicast_v4","leave_multicast_v4_n","leave_multicast_v6","leave_ssm_v4","len","linger","listen","local_addr","multicast_hops_v6","multicast_if_v4","multicast_if_v6","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","new","new","new","new","new","new","new_raw","no_inherit","nodelay","only_v6","out_of_band_inline","peek","peek_from","peek_sender","peer_addr","protocol","read","read","read_timeout","read_vectored","read_vectored","recv","recv_buffer_size","recv_from","recv_from_vectored","recv_from_vectored_with_flags","recv_from_with_flags","recv_out_of_band","recv_tclass_v6","recv_tos","recv_vectored","recv_vectored_with_flags","recv_with_flags","reuse_address","send","send_buffer_size","send_out_of_band","send_to","send_to_vectored","send_to_vectored_with_flags","send_to_with_flags","send_vectored","send_vectored_with_flags","send_with_flags","sendmsg","set_broadcast","set_header_included","set_keepalive","set_length","set_linger","set_multicast_hops_v6","set_multicast_if_v4","set_multicast_if_v6","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_no_inherit","set_nodelay","set_nonblocking","set_only_v6","set_out_of_band_inline","set_read_timeout","set_recv_buffer_size","set_recv_tclass_v6","set_recv_tos","set_reuse_address","set_send_buffer_size","set_tcp_keepalive","set_tos","set_ttl","set_unicast_hops_v6","set_write_timeout","shutdown","take_error","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tos","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_init","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicast_hops_v6","unix","with_addr","with_addr","with_buffers","with_buffers","with_control","with_control","with_flags","with_interval","with_time","write","write","write_timeout","write_vectored","write_vectored"],"q":[[0,"socket2"],[300,"std::io::error"],[301,"windows_sys::Win32::Networking::WinSock"],[302,"std::os::windows::io::raw"],[303,"std::os::windows::io::socket"],[304,"core::net::socket_addr"],[305,"core::option"],[306,"core::net::socket_addr"],[307,"core::mem::maybe_uninit"],[308,"windows_sys::Win32::Networking::WinSock"],[309,"core::fmt"],[310,"std::net::udp"],[311,"std::net::tcp"],[312,"core::hash"],[313,"core::net::ip_addr"],[314,"core::net::ip_addr"],[315,"std::io"],[316,"std::io::error"],[317,"core::ops::function"],[318,"core::any"],[319,"std::path"],[320,"core::convert"]],"d":["An address assigned to an interface.","Type corresponding to <code>SOCK_DGRAM</code>.","Specification of the communication domain for a socket.","Protocol corresponding to <code>ICMPv4</code>.","Protocol corresponding to <code>ICMPv6</code>.","Domain for IPv4 communication, corresponding to <code>AF_INET</code>.","Domain for IPv6 communication, corresponding to <code>AF_INET6</code>.","An interface index.","A local interface specified by its index or an address …","A version of <code>IoSliceMut</code> that allows the buffer to be …","Configuration of a <code>sendmsg(2)</code> system call.","Configuration of a <code>recvmsg(2)</code> system call.","Protocol specification used for creating sockets via …","Type corresponding to <code>SOCK_RAW</code>.","Flags for incoming messages.","Type corresponding to <code>SOCK_SEQPACKET</code>.","Type corresponding to <code>SOCK_STREAM</code>.","The address of a socket.","A reference to a <code>Socket</code> that can be used to configure …","Owned wrapper around a system socket.","Protocol corresponding to <code>TCP</code>.","Configures a socket’s TCP keepalive parameters.","Specification of communication semantics on a socket.","Protocol corresponding to <code>UDP</code>.","Domain for Unix socket communication, corresponding to …","Accept a new incoming connection from this listener.","Accept a new incoming connection from this listener.","Returns a raw pointer to the address.","","","Returns this address as a <code>SocketAddr</code> if it is in the …","Returns this address as a <code>SocketAddrV4</code> if it is in the …","Returns this address as a <code>SocketAddrV6</code> if it is in the …","Retuns the address as the storage.","Binds this socket to the specified address.","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>SO_BROADCAST</code> option for this socket.","","","","","","","","","","","","","Initiate a connection on this socket to the specified …","Initiate a connection on this socket to the specified …","Gets the length of the control buffer.","","","","Returns this address’s <code>Domain</code>.","","","","","","Returns this address’s family.","Returns the flags of the message.","","","","","","","","","","","","","","","Returns the correct domain for <code>address</code>.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","See the <code>From&lt;&amp;impl AsFd&gt;</code> implementation.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the value of the <code>IP_HDRINCL</code> option on this socket.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if this address is in the <code>AF_INET</code> (IPv4) …","Returns true if this address is in the <code>AF_INET6</code> (IPv6) …","Check if the message contains a truncated datagram.","Returns true if this address is of a unix socket (for …","Join a multicast group using <code>IP_ADD_MEMBERSHIP</code> option on …","Join a multicast group using <code>IP_ADD_MEMBERSHIP</code> option on …","Join a multicast group using <code>IPV6_ADD_MEMBERSHIP</code> option on …","Join a multicast SSM channel using <code>IP_ADD_SOURCE_MEMBERSHIP</code>…","Get the value of the <code>SO_KEEPALIVE</code> option on this socket.","Leave a multicast group using <code>IP_DROP_MEMBERSHIP</code> option on …","Leave a multicast group using <code>IP_DROP_MEMBERSHIP</code> option on …","Leave a multicast group using <code>IPV6_DROP_MEMBERSHIP</code> option …","Leave a multicast group using <code>IP_DROP_SOURCE_MEMBERSHIP</code> …","Returns the size of this address in bytes.","Get the value of the <code>SO_LINGER</code> option on this socket.","Mark a socket as ready to accept incoming connection …","Returns the socket address of the local half of this …","Get the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …","Get the value of the <code>IP_MULTICAST_IF</code> option for this …","Get the value of the <code>IPV6_MULTICAST_IF</code> option for this …","Get the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Get the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Get the value of the <code>IP_MULTICAST_TTL</code> option for this …","Creates a new socket and sets common flags.","Creates a new <code>MaybeUninitSlice</code> wrapping a byte slice.","Create a new <code>MsgHdr</code> with all empty/zero fields.","Create a new <code>MsgHdrMut</code> with all empty/zero fields.","Create a <code>SockAddr</code> from the underlying storage and its …","Returns a new, empty set of TCP keepalive parameters.","Creates a new socket ready to be configured.","Set <code>WSA_FLAG_NO_HANDLE_INHERIT</code> on the socket.","Get the value of the <code>TCP_NODELAY</code> option on this socket.","Get the value of the <code>IPV6_V6ONLY</code> option for this socket.","Get value for the <code>SO_OOBINLINE</code> option on this socket.","Receives data on the socket from the remote adress to …","Receives data from the socket, without removing it from …","Retrieve the sender for the data at the head of the …","Returns the socket address of the remote peer of this …","Returns the <code>Protocol</code> of this socket by checking the …","","","Get value for the <code>SO_RCVTIMEO</code> option on this socket.","","","Receives data on the socket from the remote address to …","Get value for the <code>SO_RCVBUF</code> option on this socket.","Receives data from the socket. On success, returns the …","Receives data from the socket. Returns the amount of bytes …","Identical to <code>recv_from_vectored</code> but allows for …","Identical to <code>recv_from</code> but allows for specification of …","Receives out-of-band (OOB) data on the socket from the …","Get the value of the <code>IPV6_RECVTCLASS</code> option for this …","Get the value of the <code>IP_RECVTOS</code> option for this socket.","Receives data on the socket from the remote address to …","Identical to <code>recv_vectored</code> but allows for specification of …","Identical to <code>recv</code> but allows for specification of …","Get the value of the <code>SO_REUSEADDR</code> option on this socket.","Sends data on the socket to a connected peer.","Get the value of the <code>SO_SNDBUF</code> option on this socket.","Sends out-of-band (OOB) data on the socket to connected …","Sends data on the socket to the given address. On success, …","Send data to a peer listening on <code>addr</code>. Returns the amount …","Identical to <code>send_to_vectored</code> but allows for specification …","Identical to <code>send_to</code> but allows for specification of …","Send data to the connected peer. Returns the amount of …","Identical to <code>send_vectored</code> but allows for specification of …","Identical to <code>send</code> but allows for specification of …","Send a message on a socket using a message structure.","Set the value of the <code>SO_BROADCAST</code> option for this socket.","Set the value of the <code>IP_HDRINCL</code> option on this socket.","Set value for the <code>SO_KEEPALIVE</code> option on this socket.","Set the length of the address.","Set value for the <code>SO_LINGER</code> option on this socket.","Set the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …","Set the value of the <code>IP_MULTICAST_IF</code> option for this …","Set the value of the <code>IPV6_MULTICAST_IF</code> option for this …","Set the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Set the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Set the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets <code>HANDLE_FLAG_INHERIT</code> using <code>SetHandleInformation</code>.","Set the value of the <code>TCP_NODELAY</code> option on this socket.","Moves this socket into or out of nonblocking mode.","Set the value for the <code>IPV6_V6ONLY</code> option on this socket.","Set value for the <code>SO_OOBINLINE</code> option on this socket.","Set value for the <code>SO_RCVTIMEO</code> option on this socket.","Set value for the <code>SO_RCVBUF</code> option on this socket.","Set the value of the <code>IPV6_RECVTCLASS</code> option for this …","Set the value of the <code>IP_RECVTOS</code> option for this socket.","Set value for the <code>SO_REUSEADDR</code> option on this socket.","Set value for the <code>SO_SNDBUF</code> option on this socket.","Set parameters configuring TCP keepalive probes for this …","Set the value of the <code>IP_TOS</code> option for this socket.","Set the value of the <code>IP_TTL</code> option for this socket.","Set the value for the <code>IPV6_UNICAST_HOPS</code> option on this …","Set value for the <code>SO_SNDTIMEO</code> option on this socket.","Shuts down the read, write, or both halves of this …","Get the value of the <code>SO_ERROR</code> option on this socket.","","","","","","","Get the value of the <code>IP_TOS</code> option for this socket.","Creates a new independently owned handle to the underlying …","","","","","","","","","","","","","Initialise a <code>SockAddr</code> by calling the function <code>init</code>.","","","","","","","","","","","","","Get the value of the <code>IP_TTL</code> option for this socket.","Returns the <code>Type</code> of this socket by checking the <code>SO_TYPE</code> …","","","","","","","","","","","","","Get the value of the <code>IPV6_UNICAST_HOPS</code> option for this …","Constructs a <code>SockAddr</code> with the family <code>AF_UNIX</code> and the …","Set the address (name) of the message.","Set the mutable address (name) of the message.","Set the buffer(s) of the message.","Set the mutable buffer(s) of the message.","Set the control buffer of the message.","Set the mutable control buffer of the message.","Set the flags of the message.","Set the value of the <code>TCP_KEEPINTVL</code> option. On Windows, …","Set the amount of time after which TCP keepalive probes …","","","Get value for the <code>SO_SNDTIMEO</code> option on this socket.","",""],"i":[32,16,0,17,17,15,15,32,0,0,0,0,0,16,0,16,16,0,0,0,17,0,0,17,15,1,1,2,1,1,2,2,2,2,1,1,23,24,31,21,2,32,15,16,17,18,19,1,23,24,31,21,2,32,15,16,17,18,19,1,2,15,16,17,18,19,2,15,16,17,18,19,1,1,21,23,24,24,2,2,15,16,17,18,2,21,1,1,1,23,24,31,21,2,32,15,16,17,18,19,15,1,1,1,1,1,23,23,24,31,21,2,2,2,2,32,15,15,16,16,17,17,18,19,1,2,1,1,23,24,31,21,2,32,15,16,17,18,19,1,2,2,18,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,24,31,21,2,19,1,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,15,16,17,18,19,1,1,1,23,24,31,21,2,32,15,16,17,18,19,2,1,23,24,31,21,2,32,15,16,17,18,19,1,1,1,23,24,31,21,2,32,15,16,17,18,19,1,2,31,21,31,21,31,21,31,19,19,1,1,1,1,1],"f":"`````````````````````````{b{{h{{f{bd}}}}}}0{dj}{bl}{bn}{d{{Ab{A`}}}}{d{{Ab{Ad}}}}{d{{Ab{Af}}}}{dAh}{{bd}{{h{Aj}}}}{ce{}{}}00000000000000000000000{b{{h{Al}}}}{dd}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{{ce}Aj{}{}}000009{{bdBh}{{h{Aj}}}}{BjBl}{Bnc{}}{C`{{Cf{{Cd{Cb}}}}}}0{dAn}{{dd}Al}{{AnAn}Al}{{B`B`}Al}{{BbBb}Al}{{BdBd}Al}{dCh}{BjBd}{b{{h{Aj}}}}0{{bCj}Cl}{{BnCj}Cl}{{C`Cj}Cl}{{CnCj}Cl}{{BjCj}Cl}{{dCj}Cl}{{D`Cj}Cl}{{AnCj}Cl}{{B`Cj}Cl}{{BbCj}Cl}{{BdCj}Cl}{{BfCj}Cl}{A`An}{Dbb}{Ddb}{Dfb}{cc{}}{Dhb}1{cBnDj}222{A`d}3{Afd}{Add}5{DlAn}6{DlB`}7{DlBb}888{lb}{{dc}AjDn}{b{{h{Al}}}}{ce{}{}}00000000000{bl}{dAl}0{BdAl}1{{bE`E`}{{h{Aj}}}}{{bE`D`}{{h{Aj}}}}{{bEbEd}{{h{Aj}}}}{{bE`E`E`}{{h{Aj}}}}83210{dEf}{b{{h{{Ab{Bh}}}}}}{{bDl}{{h{Aj}}}}{b{{h{d}}}}{b{{h{Ed}}}}{b{{h{E`}}}}1>>1{{AnB`{Ab{Bb}}}{{h{b}}}}{{{Cf{{Cd{Cb}}}}}C`}{{}Cn}{{}Bj}{{AhEf}d}{{}Bf}5{B`B`}{b{{h{Al}}}}00{{b{Cf{{Cd{Cb}}}}}{{h{Bl}}}}{{b{Cf{{Cd{Cb}}}}}{{h{{f{Bld}}}}}}<<{b{{h{{Ab{Bb}}}}}}{{b{Cf{Cb}}}{{h{Bl}}}}0{b{{h{{Ab{Bh}}}}}}{{b{Cf{Eh}}}{{h{Bl}}}}05{b{{h{Bl}}}}5{{b{Cf{C`}}}{{h{{f{BlBdd}}}}}}{{b{Cf{C`}}Dl}{{h{{f{BlBdd}}}}}}{{b{Cf{{Cd{Cb}}}}Dl}{{h{{f{Bld}}}}}}9::{{b{Cf{C`}}}{{h{{f{BlBd}}}}}}{{b{Cf{C`}}Dl}{{h{{f{BlBd}}}}}}{{b{Cf{{Cd{Cb}}}}Dl}{{h{Bl}}}}=969{{b{Cf{Cb}}d}{{h{Bl}}}}{{b{Cf{Ej}}d}{{h{Bl}}}}{{b{Cf{Ej}}dDl}{{h{Bl}}}}{{b{Cf{Cb}}dDl}{{h{Bl}}}}{{b{Cf{Ej}}}{{h{Bl}}}}{{b{Cf{Ej}}Dl}{{h{Bl}}}}{{b{Cf{Cb}}Dl}{{h{Bl}}}}{{bCnDl}{{h{Bl}}}}{{bAl}{{h{Aj}}}}00{{dEf}Aj}{{b{Ab{Bh}}}{{h{Aj}}}}{{bEd}{{h{Aj}}}}{{bE`}{{h{Aj}}}}1441444442{{bBl}{{h{Aj}}}}5550{{bBf}{{h{Aj}}}}3334{{bEl}{{h{Aj}}}}{b{{h{{Ab{En}}}}}}{ce{}{}}00000{b{{h{Ed}}}}{b{{h{b}}}}{c{{F`{e}}}{}{}}00000000000{e{{h{{f{cd}}}}}{}{{Fd{AhEf}{{Fb{{h{c}}}}}}}}1111111111113{b{{h{B`}}}}{cFf{}}000000000005{c{{h{d}}}{{Fj{Fh}}}}{{Cnd}Cn}{{Bjd}Bj}{{Cn{Cf{Ej}}}Cn}{{Bj{Cf{C`}}}Bj}{{Cn{Cf{Cb}}}Cn}{{Bj{Cf{{Cd{Cb}}}}}Bj}{{CnDl}Cn}{{BfBh}Bf}0{{b{Cf{Cb}}}{{h{Bl}}}}0{b{{h{{Ab{Bh}}}}}}{{b{Cf{Ej}}}{{h{Bl}}}}0","c":[],"p":[[5,"Socket",0],[5,"SockAddr",0],[1,"tuple"],[8,"Result",300],[5,"SOCKADDR",301],[8,"RawSocket",302],[5,"BorrowedSocket",303],[6,"SocketAddr",304],[6,"Option",305],[5,"SocketAddrV4",304],[5,"SocketAddrV6",304],[5,"SOCKADDR_STORAGE",301],[1,"unit"],[1,"bool"],[5,"Domain",0],[5,"Type",0],[5,"Protocol",0],[5,"RecvFlags",0],[5,"TcpKeepalive",0],[5,"Duration",306],[5,"MsgHdrMut",0],[1,"usize"],[5,"SockRef",0],[5,"MaybeUninitSlice",0],[1,"u8"],[20,"MaybeUninit",307],[1,"slice"],[8,"ADDRESS_FAMILY",301],[5,"Formatter",308],[8,"Result",308],[5,"MsgHdr",0],[6,"InterfaceIndexOrAddress",0],[5,"OwnedSocket",303],[5,"TcpStream",309],[5,"UdpSocket",310],[5,"TcpListener",309],[10,"AsSocket",303],[8,"c_int",311],[10,"Hasher",312],[5,"Ipv4Addr",313],[5,"Ipv6Addr",313],[1,"u32"],[8,"socklen_t",301],[5,"IoSliceMut",314],[5,"IoSlice",314],[6,"Shutdown",315],[5,"Error",300],[6,"Result",316],[17,"Output"],[10,"FnOnce",317],[5,"TypeId",318],[5,"Path",319],[10,"AsRef",320]],"b":[[86,"impl-Write-for-Socket"],[87,"impl-Write-for-%26Socket"],[101,"impl-From%3COwnedSocket%3E-for-Socket"],[102,"impl-From%3CTcpStream%3E-for-Socket"],[103,"impl-From%3CUdpSocket%3E-for-Socket"],[105,"impl-From%3CTcpListener%3E-for-Socket"],[111,"impl-From%3CSocketAddr%3E-for-SockAddr"],[113,"impl-From%3CSocketAddrV6%3E-for-SockAddr"],[114,"impl-From%3CSocketAddrV4%3E-for-SockAddr"],[179,"impl-Read-for-%26Socket"],[180,"impl-Read-for-Socket"],[182,"impl-Read-for-%26Socket"],[183,"impl-Read-for-Socket"],[295,"impl-Write-for-Socket"],[296,"impl-Write-for-%26Socket"],[298,"impl-Write-for-%26Socket"],[299,"impl-Write-for-Socket"]]}],\
["syn",{"doc":"github crates-io docs-rs","t":"FPPPPFFPPPFPFPPGFPPFFGPPPPPPPFPPFPPPPPPPPPPPPPPPPPPFFPPGFFFPPFPPPPPPFGPFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFPFPGFFGFFFPPPPPGPGFFFFPPGGFPPPPPPFPPPFGFFFFGPFPPPPPPGPFFFFFFFFFFFFFFFFPPFPPPPFPGPPFFFFFFFFFPFPPFPPPPPPPPGPPGGFFPPPPPPPPPPPPPPPPPPPPPTPPPPPFGFFFFFFFFFFFFFFFFFPPPPPGFFFPPFPPGFPPPPPPPPPPIPGPPPPFPPPPGGFPPPPPPPQPPPFGGFFFFPPPPPPPFGPPPPPPPPPFFFFFFFFFGFFFFFFFPGPPPPPPPPFFFFFGFFPPPPPPPPPFGFGPPPOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOQOOOOOOOQOCOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOONNOOOOOOOOOOOOQQONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCOOOOOOOOOONNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONOOOOOOONNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNOOOOOOOOOOONOOOONOOONOOOOONOOOOOOOOOOOOOOOOONOOOOCOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOQCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNHNQNNNNNNNQQNHNNNNNNNNOOOOOOOOONNOOOOOOOOOOOOOOOCOOOOOOONOOOONNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCNOOOOOOOOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONOOOOOOOONNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMTMFNNNNONNHONNNNPFFFPRKFIKKIFNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMMPFFFFGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFKFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Abi","Add","AddAssign","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssocConst","AssocConst","AssocType","AssocType","Async","AttrStyle","Attribute","Await","BareFn","BareFnArg","BareVariadic","BinOp","Binary","BitAnd","BitAndAssign","BitOr","BitOrAssign","BitXor","BitXorAssign","Block","Block","Bool","BoundLifetimes","Brace","Bracket","Break","Byte","ByteStr","CStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivAssign","Enum","Enum","Eq","Err","Error","Expr","Expr","ExprArray","ExprAssign","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprConst","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprInfer","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldMutability","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemFn","ImplItemMacro","ImplItemType","ImplRestriction","ImplTrait","Index","Index","Infer","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeParam","List","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitCStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","LocalInit","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","MetaList","MetaNameValue","MethodCall","Mod","Mul","MulAssign","Mut","Name","NameValue","Named","Named","Ne","Neg","Never","None","None","None","None","Not","Ok","Or","Or","Outer","PLACEHOLDER","Paren","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatConst","PatIdent","PatLit","PatMacro","PatOr","PatParen","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Receiver","Receiver","Reference","Reference","Reference","Rem","RemAssign","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Shl","ShlAssign","Shr","ShrAssign","Signature","Slice","Slice","Static","Static","StaticMutability","Stmt","StmtMacro","Str","Struct","Struct","Struct","Struct","Sub","SubAssign","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemFn","TraitItemMacro","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","comma","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","const_token","const_token","constness","constness","content","continue_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","delimiter","discriminant","diverge","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","elems","else_branch","end","end","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","len","len","len","let_token","let_token","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","loop_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","mac","make_where_clause","match_token","member","member","member","meta","meta","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","name","named","new","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args","parse_args_with","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_mod_style","parse_multi","parse_multi_with_leading_vert","parse_named","parse_nested_meta","parse_nested_meta","parse_outer","parse_quote","parse_quote_spanned","parse_single","parse_str","parse_turbofish","parse_unnamed","parse_with","parse_with_earlier_boundary_rule","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","punctuated","qself","qself","qself","qself","qself","qself","question_token","receiver","receiver","reference","rename","rename","require_ident","require_list","require_name_value","require_path_only","rest","rest","restriction","return_token","right","right","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","start","start","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_token","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","ParseNestedMeta","borrow","borrow_mut","error","from","input","into","parse_nested_meta","parser","path","try_from","try_into","type_id","value","Err","Error","Lookahead1","Nothing","Ok","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_any_delimiter","parse_str","parse_terminated","peek","peek","peek2","peek3","span","span","span","step","to_compile_error","to_owned","to_owned","to_owned","to_string","to_string","to_tokens","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AnyDelimiter","Speculative","advance_to","parse_any_delimiter","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","pop_punct","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","Spanned","span","Abstract","And","AndAnd","AndEq","As","Async","At","Auto","Await","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Comma","Const","Continue","Crate","Default","Do","Dollar","Dot","DotDot","DotDotDot","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Minus","MinusEq","Mod","Move","Mut","Ne","Not","Or","OrEq","OrOr","Override","Paren","PathSep","Percent","PercentEq","Plus","PlusEq","Pound","Priv","Pub","Question","RArrow","Ref","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Slash","SlashEq","Star","StarEq","Static","Struct","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"syn"],[3659,"syn::buffer"],[3693,"syn::ext"],[3697,"syn::meta"],[3711,"syn::parse"],[3812,"syn::parse::discouraged"],[3816,"syn::punctuated"],[3978,"syn::spanned"],[3980,"syn::token"],[5665,"core::str::traits"],[5666,"core::cmp"],[5667,"core::convert"],[5668,"core::marker"],[5669,"core::fmt"],[5670,"core::fmt"],[5671,"core::fmt"],[5672,"core::convert"],[5673,"core::hash"],[5674,"proc_macro2"],[5675,"proc_macro"],[5676,"proc_macro2"],[5677,"core::ops::function"],[5678,"proc_macro2::extra"],[5679,"alloc::string"],[5680,"core::any"],[5681,"alloc::ffi::c_str"],[5682,"proc_macro2"],[5683,"proc_macro2"],[5684,"core::ops::function"],[5685,"core::default"]],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0..=10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","An equality constraint on an associated constant: the …","An equality constraint on an associated constant: the …","A binding (equality constraint) on an associated type: the …","A binding (equality constraint) on an associated type: the …","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute, like <code>#[repr(transparent)]</code>.","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","The variadic argument of a function pointer like …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const block: <code>const { ... }</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","The <code>==</code> operator (equality)","Contains the error value","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expression, with or without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a += b</code>.","A blocked scope: <code>{ ... }</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A const block: <code>const { ... }</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Unused, but reserved for RFC 3323 restrictions.","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An associated function within the definition of a trait.","An associated function within an impl block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","An associated function within an impl block.","A macro invocation within an impl block.","An associated type within an impl block.","Unused, but reserved for RFC 3323 restrictions.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","The inferred value of a const generic argument, denoted <code>_</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A nul-terminated C-string literal: <code>c&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","The expression assigned in a local <code>let</code> binding, including …","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in pattern position.","A macro invocation in statement position.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","The never type: <code>!</code>.","","","","","The <code>!</code> operator for logical inversion","Contains the success value","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","An unspecified invalid expression.","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized pattern: <code>(A | B)</code>.","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A const block: <code>const { ... }</code>.","A pattern that binds a new variable: …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A pattern that matches any one of a set of cases.","A parenthesized pattern: <code>(A | B)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","The <code>self</code> argument of an associated method.","The <code>self</code> argument of an associated method.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference pattern: <code>&amp;mut var</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A dynamically sized slice type: <code>[T]</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","The mutability of an <code>Item::Static</code> or <code>ForeignItem::Static</code>.","A statement, usually ending in a semicolon.","A macro invocation in statement position.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","An associated function within the definition of a trait.","A macro invocation within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A particular type is returned.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","","","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>(A, B)</code>","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeParam&gt; over the …","","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeParam&gt; over the …","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","","","Facility for interpreting structured content inside of an …","","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","See <code>Attribute::parse_args</code>.","Parse the arguments to the attribute using the given …","See <code>Attribute::parse_args_with</code>.","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parse a <code>Path</code> containing no path arguments on any of its …","Parse a pattern, possibly involving <code>|</code>, but not a leading <code>|</code>.","Parse a pattern, possibly involving <code>|</code>, possibly including a","Parses a named (braced struct) field.","Parse the arguments to the attribute, expecting it to …","See <code>Attribute::parse_nested_meta</code>.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a pattern that does <em>not</em> involve <code>|</code> at the top level.","Parse a string of Rust code into the chosen syntax tree …","Parse <code>::&lt;…&gt;</code> with mandatory leading <code>::</code>.","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","An alternative to the primary <code>Expr::parse</code> parser (from the …","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the path that identifies the interpretation of …","Returns the path that begins this structured meta item.","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","An error if this path is not a single ident, as defined in …","Error if this is a <code>Meta::Path</code> or <code>Meta::NameValue</code>.","Error if this is a <code>Meta::Path</code> or <code>Meta::List</code>.","Error if this is a <code>Meta::List</code> or <code>Meta::NameValue</code>.","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","","Returns the span of this <code>Ident</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","","Trait this impl implementseturns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Context for parsing a single property in the conventional …","","","Report that the attribute’s content did not conform to …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Used when parsing <code>list(...)</code> syntax <strong>if</strong> the content inside …","Make a parser that is usable with <code>parse_macro_input!</code> in a …","","","","","Used when parsing <code>key = &quot;value&quot;</code> syntax.","Contains the error value","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","Contains the success value","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","The source location of the error.","Returns the <code>Span</code> of the next token in the parse stream, or …","","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support manipulating …","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Returns the delimiter, the span of the delimiter token, …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","<strong>A punctuated sequence of syntax tree nodes of type <code>T</code> </strong>…","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Removes the trailing punctuation from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>become</code>","<code>box</code>","<code>{</code>…<code>}</code>","<code>[</code>…<code>]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>-</code>","<code>-=</code>","<code>mod</code>","<code>move</code>","<code>mut</code>","<code>!=</code>","<code>!</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(</code>…<code>)</code>","<code>::</code>","<code>%</code>","<code>%=</code>","<code>+</code>","<code>+=</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>/</code>","<code>/=</code>","<code>*</code>","<code>*=</code>","<code>static</code>","<code>struct</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,137,137,137,154,0,0,26,170,26,0,155,0,155,26,0,0,26,170,0,0,0,26,137,137,137,137,137,137,0,26,128,0,136,136,26,128,128,128,26,26,128,70,26,26,73,85,112,117,139,155,0,0,155,26,0,0,0,0,188,138,0,137,137,22,85,137,6,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,0,26,0,0,0,0,0,0,0,128,85,107,112,117,0,26,0,0,0,0,0,85,137,0,0,0,101,26,101,170,137,70,0,139,26,85,0,0,0,0,0,0,0,170,0,26,26,170,162,12,128,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,26,0,73,78,82,155,0,13,0,26,139,0,0,0,0,0,0,0,0,0,166,0,26,137,0,26,85,107,112,117,139,166,170,0,26,80,0,0,0,0,26,85,137,137,126,101,13,17,65,137,138,170,80,126,154,164,138,6,137,139,12,26,26,136,139,170,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,26,101,139,170,0,0,0,0,170,162,0,26,139,0,0,123,26,139,170,137,137,101,26,139,162,0,26,0,137,137,137,137,0,139,170,85,107,0,0,0,128,22,26,85,139,137,137,0,78,85,85,0,0,0,0,0,0,0,170,26,26,26,139,170,139,0,0,73,82,85,107,112,117,139,155,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,0,26,22,85,17,17,65,26,85,0,0,0,0,0,0,0,0,26,78,85,107,112,117,128,139,170,0,0,0,0,26,139,26,90,122,172,54,143,181,10,34,50,156,153,49,35,104,161,1,29,36,122,16,20,21,27,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,46,47,48,48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,63,64,67,69,71,74,75,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,109,110,111,113,114,115,116,118,119,120,121,124,125,140,141,142,143,144,145,146,147,148,149,150,151,167,169,186,187,96,30,135,177,30,39,3,5,3,5,29,32,37,37,59,62,89,119,36,40,47,63,69,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,84,74,75,83,84,97,115,159,174,183,18,24,49,57,87,90,91,96,106,146,165,0,11,27,43,55,145,171,182,0,33,0,140,29,36,141,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,8,10,102,156,20,67,68,74,75,76,83,84,86,94,96,109,113,115,118,124,149,151,159,69,125,187,42,63,72,72,37,37,76,86,113,118,180,36,122,93,38,88,0,0,21,72,77,154,75,76,113,114,115,91,118,119,120,14,135,16,168,57,144,30,39,50,125,187,183,171,173,178,180,181,182,27,60,145,147,148,184,42,53,53,24,87,8,8,10,65,66,15,28,45,75,76,86,94,97,98,118,120,157,158,168,33,35,40,41,43,45,49,51,54,55,56,58,61,64,67,86,94,118,168,0,88,185,69,16,23,25,57,95,99,146,8,8,8,10,65,66,3,5,122,172,40,77,8,8,8,8,8,8,8,9,1,2,10,11,12,13,13,13,13,14,15,16,17,17,17,18,19,20,21,21,21,21,22,23,24,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,65,65,66,66,67,68,69,70,71,72,73,73,73,73,74,75,75,76,77,78,78,78,79,80,81,82,82,82,83,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,101,101,101,101,101,102,103,104,105,106,107,107,107,107,107,108,109,110,111,112,112,112,112,112,113,114,115,116,117,117,117,117,117,118,119,120,121,122,123,123,123,124,125,126,127,128,128,128,128,128,128,128,128,128,129,130,131,132,133,3,3,5,5,134,135,136,137,138,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,141,142,143,144,145,146,147,148,149,150,151,152,152,153,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,34,21,86,87,91,95,96,97,98,99,110,113,115,118,120,122,157,158,159,152,41,173,72,77,156,161,69,8,10,65,66,10,16,20,21,75,76,86,87,88,92,93,94,95,96,97,98,99,102,103,104,109,110,113,115,118,120,122,140,153,157,158,159,42,91,174,40,163,43,66,167,36,122,160,172,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,17,17,17,17,154,152,154,71,90,91,96,106,17,17,32,33,38,40,47,63,100,152,141,28,31,17,55,171,45,167,124,74,83,181,72,36,77,79,84,172,72,53,53,46,46,47,72,77,156,161,48,48,92,111,116,121,169,176,72,49,39,67,151,0,11,50,93,79,36,20,54,94,109,124,140,143,180,181,68,185,186,187,18,8,10,74,128,129,130,131,132,133,3,5,134,8,31,61,36,36,36,122,160,172,72,19,34,50,51,60,79,122,142,147,148,160,163,172,178,184,0,0,0,8,10,13,14,15,16,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,129,130,131,132,133,3,5,134,135,137,138,149,152,153,155,156,160,162,165,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,0,8,11,14,11,14,135,135,0,11,0,152,139,139,20,11,14,11,0,0,139,0,156,20,129,26,165,26,8,10,40,45,69,125,142,143,149,151,167,11,13,14,15,52,52,57,79,135,146,148,163,179,161,11,81,163,0,52,52,57,146,148,179,58,122,50,124,88,104,152,13,13,13,57,146,96,56,28,31,152,124,91,93,23,55,86,88,92,94,95,97,98,100,108,109,110,111,113,114,115,116,118,120,121,167,169,171,8,10,128,129,130,131,132,133,3,5,134,71,89,108,114,119,8,8,8,9,1,2,10,10,11,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,128,129,129,130,130,131,131,132,132,133,133,3,3,5,5,134,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,66,134,0,72,105,180,53,53,94,109,165,23,95,11,140,128,129,130,131,132,133,3,5,96,42,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,8,10,3,5,8,9,1,2,10,11,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,3,5,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,0,129,130,131,132,133,3,5,134,14,135,91,96,97,100,102,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,59,50,20,35,76,86,94,98,109,113,118,120,124,149,157,161,186,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,72,72,98,110,115,120,44,150,175,25,99,19,8,62,90,91,93,96,122,172,100,129,130,131,132,133,134,15,134,158,122,172,24,87,20,21,86,87,88,89,93,94,95,96,97,98,99,100,108,109,110,118,119,120,72,81,63,170,174,183,188,64,0,0,230,230,231,230,231,231,231,231,231,231,230,231,231,231,230,231,231,231,230,230,231,231,231,231,231,231,230,231,230,231,230,231,0,235,235,235,0,222,222,222,222,222,222,222,0,222,222,222,222,222,6,0,0,0,6,220,0,0,0,0,0,0,0,238,236,241,238,239,240,236,241,238,239,240,238,236,239,240,236,239,240,236,238,239,0,238,241,238,239,236,236,236,238,238,238,236,236,241,238,239,240,236,241,238,239,240,236,236,236,238,238,236,236,217,238,220,240,220,238,220,238,241,238,238,238,236,238,240,238,236,236,239,240,236,238,240,236,241,238,239,240,236,241,238,239,240,236,241,238,239,240,0,0,249,250,255,0,0,0,0,0,0,0,0,255,246,252,257,253,254,209,210,255,246,252,257,253,254,209,210,255,246,246,252,253,254,209,255,246,246,252,253,254,209,255,255,246,246,246,246,246,246,246,252,257,253,254,209,210,255,246,246,246,246,246,246,252,257,253,254,209,210,255,246,246,246,252,257,253,254,209,210,246,255,255,246,246,246,246,246,246,252,257,253,254,209,210,246,255,252,257,253,254,209,210,252,257,253,254,209,210,246,246,246,246,246,246,246,246,255,255,246,246,246,252,257,253,254,209,210,246,255,246,252,253,254,209,255,246,255,246,246,252,257,253,254,209,210,255,246,252,257,253,254,209,210,255,246,252,257,253,254,209,210,255,255,255,0,259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,203,308,311,312,314,315,316,317,321,325,328,329,332,333,337,339,341,342,344,349,351,353,203,308,311,312,314,315,316,317,321,325,328,329,332,333,337,339,341,342,344,349,351,353,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,260,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,354,355,356,203,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,260,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,260,203,261,262,263,264,265,266,267,268,269,270,199,271,272,273,274,275,198,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,200,202,294,295,201,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{bd}``````````````````````````````````````````````````````````````````````````````````````````````````````````{fh}{jh}{f{{l{c}}}n}{j{{l{c}}}n}`````````````{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````````````````````````````{A`A`}{AbAb}{bb}{dd}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{LdLd}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{NdNd}{NfNf}{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{ff}{jj}{AlAl}{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{ABdABd}{ABfABf}{ABhABh}{ABjABj}{ABlABl}{ABnABn}{AC`AC`}{ACbACb}{ACdACd}{ACfACf}{AChACh}{ACjACj}{AClACl}{ACnACn}{AD`AD`}{ADbADb}{ADdADd}{ADfADf}{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{AEbAEb}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{AElAEl}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}{AFlAFl}{AFnAFn}{AG`AG`}{AGbAGb}{AGdAGd}{AGfAGf}{AGhAGh}{{ce}AGj{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{A`A`}AGl}{{AdAd}AGl}```````````````````````````````````````````{{}I`}{{}Ij}{{}ACd}``````````````````````````````````````{{A`A`}AGn}{{A`c}AGn{{AH`{h}}AHb}}{{AdAd}AGn}{{HbHb}AGn}{{HdHd}AGn}````````````````````````````````````````````{{A`AHd}{{AHh{AGjAHf}}}}00{{AdAHd}AHj}{{HbAHd}AHj}{{HdAHd}AHj}{{fAHd}AHj}{{jAHd}AHj}````{AHlA`}{AHnA`}{cc{}}{AI`A`}{AIbA`}{AIdA`}{AIfA`}444444{AlAj}{AnAj}6{AC`Aj}777{BdBb}{BfBb}99999{JnBj}{LfBj}{KnBj}<<<<{DbCd}{ChCd}{GdCd}{DhCd}{EjCd}{DlCd}{DjCd}{EhCd}{GjCd}{CfCd}{EdCd}{H`Cd}{DdCd}{GnCd}{GfCd}{DfCd}{CnCd}{DnCd}{CjCd}{EbCd}{GbCd}{FfCd}{cc{}}{F`Cd}{EnCd}{GhCd}{G`Cd}{ElCd}{EfCd}{GlCd}{FnCd}{FdCd}{E`Cd}{FjCd}{FlCd}{FbCd}{ClCd}{D`Cd}{FhCd}{cc{}}0000000000000000000000000000000000000{A`Hb}{HdHb}2{AIhHb}3{AIhHd}444444{IfIb}{IhIb}{IdIb}77{A`If}8888{AdIl}{InIl}:::{JhJd}{JfJd}<<<{BjJj}{KbJj}{LfJj}{KjJj}{KnJj}{KhJj}{JlJj}{cc{}}{K`Jj}{KfJj}{KlJj}{L`Jj}{JnJj}{KdJj}{LdJj}{LhJj}{LbJj}999999999999999{MdLj}{LlLj}{M`Lj}{MbLj}={LnLj}>>>>>{MlMf}{MjMf}{MnMf}{MhMf}{cc{}}00000{NfN`}{NbN`}{NhN`}{NdN`}4444{ObNj}{O`Nj}6{NlNj}{NnNj}88888{ABjOf}{OhOf}:::::{AdA`}{jA`}{AfA`}{fA`}{AjA`}{AlA`}{AbA`}{cc{}}{AhA`}111111{AIjf}{AIjj}333333{ABjAAf}{AAlAAf}{ABlAAf}{ABfAAf}{AB`AAf}{AAhAAf}{ABhAAf}{FjAAf}{F`AAf}{ElAAf}{AAnAAf}{FhAAf}{ABdAAf}{DjAAf}{cc{}}{ABbAAf}{AAjAAf}2222222222222{cAC`{{AIl{ACb}}}}3{cACb{{AIl{A`}}}}4444444444444444{AFhAEd}{AElAEd}{AEfAEd}{AG`AEd}8{AEhAEd}{AFnAEd}{AFlAEd}{AFbAEd}{AFjAEd}{AFfAEd}{AEjAEd}{AEnAEd}{AF`AEd}{AFdAEd}{cc{}}00000000000000000```````````````````{AC`{{AIn{A`}}}}```````{{A`c}AGjAJ`}{{Adc}AGjAJ`}{{Hbc}AGjAJ`}{{Hdc}AGjAJ`}````````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Bbc{}}00{BbAGn}{ACdAGn}{{AC`c}AGnAHb}1`````{Bb{{AJb{Bh}}}}{Bb{{AJd{Bh}}}}```````````{BbAIh}````{Oh{{AIn{Ad}}}}```````````````````````````{I`Jb}````````````````````````{{hAJf}A`}{{hAJf}Ad}{AdId}{AIjA`}{{hAJf}Ab}{{{AJj{AJh}}AJf}Ad}{{AJlAJf}Af}{{AJhAJf}Ah}{{AJnAJf}Aj}{{hAJf}f}{{hAJf}j}{{AGnAJf}Al};``````````````````````````{AK`{{l{c}}}AKb}{AKd{{l{A`}}}}{AKd{{l{Ad}}}}{AKd{{l{Aj}}}}{AKd{{l{Al}}}}{AKd{{l{An}}}}{AKd{{l{B`}}}}{AKd{{l{Bd}}}}{AKd{{l{Bf}}}}{AKd{{l{Bj}}}}{AKd{{l{Cd}}}}{AKd{{l{Cf}}}}{AKd{{l{Ch}}}}{AKd{{l{Cj}}}}{AKd{{l{Cl}}}}{AKd{{l{Cn}}}}{AKd{{l{D`}}}}{AKd{{l{Db}}}}{AKd{{l{Dd}}}}{AKd{{l{Df}}}}{AKd{{l{Dh}}}}{AKd{{l{Dj}}}}{AKd{{l{Dl}}}}{AKd{{l{Dn}}}}{AKd{{l{E`}}}}{AKd{{l{Ed}}}}{AKd{{l{Ef}}}}{AKd{{l{Eh}}}}{AKd{{l{Ej}}}}{AKd{{l{El}}}}{AKd{{l{En}}}}{AKd{{l{F`}}}}{AKd{{l{Fb}}}}{AKd{{l{Fd}}}}{AKd{{l{Ff}}}}{AKd{{l{Fh}}}}{AKd{{l{Fj}}}}{AKd{{l{Fl}}}}{AKd{{l{Fn}}}}{AKd{{l{G`}}}}{AKd{{l{Gb}}}}{AKd{{l{Gd}}}}{AKd{{l{Gf}}}}{AKd{{l{Gh}}}}{AKd{{l{Gj}}}}{AKd{{l{Gl}}}}{AKd{{l{Gn}}}}{AKd{{l{H`}}}}{AKd{{l{Hb}}}}{AKd{{l{Hd}}}}{AKd{{l{Hf}}}}{AKd{{l{Hh}}}}{AKd{{l{Hj}}}}{AKd{{l{Hl}}}}{AKd{{l{Hn}}}}{AKd{{l{I`}}}}{AKd{{l{Ib}}}}{AKd{{l{Id}}}}{AKd{{l{If}}}}{AKd{{l{Ih}}}}{AKd{{l{Ij}}}}{AKd{{l{Il}}}}{AKd{{l{In}}}}{AKd{{l{J`}}}}{AKd{{l{Jb}}}}{AKd{{l{Jd}}}}{AKd{{l{Jj}}}}{AKd{{l{Jl}}}}{AKd{{l{Jn}}}}{AKd{{l{K`}}}}{AKd{{l{Kb}}}}{AKd{{l{Kd}}}}{AKd{{l{Kf}}}}{AKd{{l{Kh}}}}{AKd{{l{Kj}}}}{AKd{{l{Kl}}}}{AKd{{l{Kn}}}}{AKd{{l{L`}}}}{AKd{{l{Lb}}}}{AKd{{l{Ld}}}}{AKd{{l{Lf}}}}{AKd{{l{Lh}}}}{AKd{{l{Lj}}}}{AKd{{l{Mf}}}}{AKd{{l{Mh}}}}{AKd{{l{Mj}}}}{AKd{{l{Ml}}}}{AKd{{l{Mn}}}}{AKd{{l{N`}}}}{AKd{{l{Nb}}}}{AKd{{l{Nd}}}}{AKd{{l{Nf}}}}{AKd{{l{Nh}}}}{AKd{{l{Nj}}}}{AKd{{l{Nl}}}}{AKd{{l{Nn}}}}{AKd{{l{O`}}}}{AKd{{l{Ob}}}}{AKd{{l{Od}}}}{AKd{{l{Of}}}}{AKd{{l{Oh}}}}{AKd{{l{Ol}}}}{AKd{{l{A`}}}}{Ab{{l{c}}}AKb}{AKd{{l{Ab}}}}{AKd{{l{Ad}}}}{AKd{{l{Af}}}}{AKd{{l{Ah}}}}{AKd{{l{Aj}}}}{AKd{{l{f}}}}{AKd{{l{j}}}}{AKd{{l{Al}}}}{AKd{{l{An}}}}{AKd{{l{AAb}}}}{AKd{{l{AAd}}}}{AKd{{l{ABj}}}}{AKd{{l{AC`}}}}{AKd{{l{ACb}}}}{AKd{{l{ACf}}}}{AKd{{l{ACh}}}}{AKd{{l{AD`}}}}{AKd{{l{ADd}}}}{AKd{{l{ADj}}}}{AKd{{l{ADl}}}}{AKd{{l{AEd}}}}{AKd{{l{AEf}}}}{AKd{{l{AEh}}}}{AKd{{l{AEj}}}}{AKd{{l{AEl}}}}{AKd{{l{AEn}}}}{AKd{{l{AF`}}}}{AKd{{l{AFb}}}}{AKd{{l{AFd}}}}{AKd{{l{AFf}}}}{AKd{{l{AFh}}}}{AKd{{l{AFj}}}}{AKd{{l{AFl}}}}{AKd{{l{AFn}}}}{AKd{{l{AG`}}}}{AKd{{l{AGb}}}}{AKd{{l{AGd}}}}{AKd{{l{AGh}}}}{AKf{{l{c}}}AKb}{AKd{{l{A`}}}}{Af{{l{c}}}AKb}{Al{{l{c}}}AKb}{{Afc}lAKh}{{Alc}lAKh}{An{{l{c}}}AKb}{{Anc}lAKh}{h{{l{Hn}}}}{AKd{{l{{AKj{Af}}}}}}`{AKd{{l{AC`}}}}{AKd{{l{AAf}}}}0{AKd{{l{Bh}}}}{{Afc}{{l{AGj}}}{{AL`{AKl}{{AKn{{l{AGj}}}}}}}}{{Alc}{{l{AGj}}}{{AL`{AKl}{{AKn{{l{AGj}}}}}}}}5``3{h{{l{c}}}AKb}{AKd{{l{ACh}}}}4{{Abc}lAKh}{AKd{{l{Cd}}}}{AKd{{l{{AKj{ADl}}}}}}1{{A`A`}{{AIn{AGl}}}}{{AdAd}{{AIn{AGl}}}}`````````{AfAC`}{AjAC`}```````````````````````{Od{{AIn{Oh}}}}````{AC`{{l{A`}}}}{Aj{{l{Al}}}}{Aj{{l{An}}}}{Aj{{l{AC`}}}}``````````````````````````````````{{A`AJf}AGj}{{AdAJf}AGj}{{A`AJf}AGj}{{AbAJf}AGj}{{AdAJf}AGj}{{AfAJf}AGj}{{AhAJf}AGj}{{AjAJf}AGj}{{fAJf}AGj}{{jAJf}AGj}{{AlAJf}AGj}`````{A`AJf}{cAJf{}}{A`{{AIn{AJf}}}}1111{AdAJf}22222222222222222222222222222222222222222222222222{Hb{{AIn{AJf}}}}{Hd{{AIn{AJf}}}}4444444444444444444444444444444444444444444444444444444444444{A`AJf}5{AbAJf}6{AdAJf}77{AfAJf}8{AhAJf}9{AjAJf}:{fAJf};{jAJf}<{AlAJf}={AA`ALb}>>>>>>>>>>>>>>>>>>>>>>>>{ADbAJf}?????????????????????????```{I`{{ALd{Abb{AIn{Jb}}}}}}```````````{A`h}{Abh}{Adh}{Afh}{Ahh}{Ajh}{fh}{jh}``{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{cALf{}}000{{A`AKf}AGj}{{AbAKf}AGj}{{bAKf}AGj}{{dAKf}AGj}{{AdAKf}AGj}{{AfAKf}AGj}{{AjAKf}AGj}{{AlAKf}AGj}{{AnAKf}AGj}{{B`AKf}AGj}{{BbAKf}AGj}{{BdAKf}AGj}{{BfAKf}AGj}{{BhAKf}AGj}{{BjAKf}AGj}{{CdAKf}AGj}{{CfAKf}AGj}{{ChAKf}AGj}{{CjAKf}AGj}{{ClAKf}AGj}{{CnAKf}AGj}{{D`AKf}AGj}{{DbAKf}AGj}{{DdAKf}AGj}{{DfAKf}AGj}{{DhAKf}AGj}{{DjAKf}AGj}{{DlAKf}AGj}{{DnAKf}AGj}{{E`AKf}AGj}{{EbAKf}AGj}{{EdAKf}AGj}{{EfAKf}AGj}{{EhAKf}AGj}{{EjAKf}AGj}{{ElAKf}AGj}{{EnAKf}AGj}{{F`AKf}AGj}{{FbAKf}AGj}{{FdAKf}AGj}{{FfAKf}AGj}{{FhAKf}AGj}{{FjAKf}AGj}{{FlAKf}AGj}{{FnAKf}AGj}{{G`AKf}AGj}{{GbAKf}AGj}{{GdAKf}AGj}{{GfAKf}AGj}{{GhAKf}AGj}{{GjAKf}AGj}{{GlAKf}AGj}{{GnAKf}AGj}{{H`AKf}AGj}{{HbAKf}AGj}{{HdAKf}AGj}{{HfAKf}AGj}{{HhAKf}AGj}{{HjAKf}AGj}{{HlAKf}AGj}{{HnAKf}AGj}{{I`AKf}AGj}{{IbAKf}AGj}{{IdAKf}AGj}{{IfAKf}AGj}{{IhAKf}AGj}{{IjAKf}AGj}{{IlAKf}AGj}{{InAKf}AGj}{{J`AKf}AGj}{{JbAKf}AGj}{{JdAKf}AGj}{{JfAKf}AGj}{{JhAKf}AGj}{{JjAKf}AGj}{{JlAKf}AGj}{{JnAKf}AGj}{{K`AKf}AGj}{{KbAKf}AGj}{{KdAKf}AGj}{{KfAKf}AGj}{{KhAKf}AGj}{{KjAKf}AGj}{{KlAKf}AGj}{{KnAKf}AGj}{{L`AKf}AGj}{{LbAKf}AGj}{{LdAKf}AGj}{{LfAKf}AGj}{{LhAKf}AGj}{{LjAKf}AGj}{{LlAKf}AGj}{{LnAKf}AGj}{{M`AKf}AGj}{{MbAKf}AGj}{{MdAKf}AGj}{{MfAKf}AGj}{{MhAKf}AGj}{{MjAKf}AGj}{{MlAKf}AGj}{{MnAKf}AGj}{{N`AKf}AGj}{{NbAKf}AGj}{{NdAKf}AGj}{{NfAKf}AGj}{{NhAKf}AGj}{{NjAKf}AGj}{{NlAKf}AGj}{{NnAKf}AGj}{{O`AKf}AGj}{{ObAKf}AGj}{{OdAKf}AGj}{{OfAKf}AGj}{{OhAKf}AGj}{{OjAKf}AGj}{{OlAKf}AGj}{{A`AKf}AGj}{{AbAKf}AGj}{{AdAKf}AGj}{{AfAKf}AGj}{{AhAKf}AGj}{{AjAKf}AGj}{{fAKf}AGj}{{jAKf}AGj}{{AlAKf}AGj}{{AnAKf}AGj}{{AAbAKf}AGj}{{AAdAKf}AGj}{{AAfAKf}AGj}{{AAhAKf}AGj}{{AAjAKf}AGj}{{AAlAKf}AGj}{{AAnAKf}AGj}{{AB`AKf}AGj}{{ABbAKf}AGj}{{ABdAKf}AGj}{{ABfAKf}AGj}{{ABhAKf}AGj}{{ABjAKf}AGj}{{ABlAKf}AGj}{{ABnAKf}AGj}{{AC`AKf}AGj}{{ACbAKf}AGj}{{ACdAKf}AGj}{{ACfAKf}AGj}{{AChAKf}AGj}{{ACjAKf}AGj}{{AClAKf}AGj}{{ACnAKf}AGj}{{AD`AKf}AGj}{{ADdAKf}AGj}{{ADfAKf}AGj}{{ADjAKf}AGj}{{ADlAKf}AGj}{{ADnAKf}AGj}{{AEbAKf}AGj}{{AEdAKf}AGj}{{AEfAKf}AGj}{{AEhAKf}AGj}{{AEjAKf}AGj}{{AElAKf}AGj}{{AEnAKf}AGj}{{AF`AKf}AGj}{{AFbAKf}AGj}{{AFdAKf}AGj}{{AFfAKf}AGj}{{AFhAKf}AGj}{{AFjAKf}AGj}{{AFlAKf}AGj}{{AFnAKf}AGj}{{AG`AKf}AGj}{{AGbAKf}AGj}{{AGdAKf}AGj}{{AGfAKf}AGj}{{AGhAKf}AGj}`{AbAIj}{AdAIj}{AfAIj}{AhAIj}{AjAIj}{fAIj}{jAIj}{AlA`}```````{c{{AHh{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````{cALh{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````{A`A`}````````{AbALf}{Ad{{AKj{AJh}}}}{AfALj}{AhAJh}{AjAJn}{AlAGn}``````````````````````````````{AKd{{l{AEd}}}}{AKd{{l{AEl}}}}{AKd{{l{AFn}}}}{AKd{{l{AGh}}}}```{ALlALn}{ce{}{}}000{ALnALn}{{ce}AGj{}{}}{{}ALn}{ALnAGn}{{ALnALn}AGn}{cc{}}0{{ALnAM`}{{AIn{{ALd{ALnALbALn}}}}}}{ALn{{AIn{{ALd{A`ALn}}}}}}88{ALn{{AIn{{ALd{AdALn}}}}}}{ALn{{AIn{{ALd{AIjALn}}}}}}{AK`ALl}{AKfALl}{{ALnALn}{{AIn{AGl}}}}{ALn{{AIn{{ALd{AMbALn}}}}}}{ALnAJf}?{ALnAKf}{ALn{{AIn{{ALd{AMdALn}}}}}}{c{{AHh{e}}}{}{}}000{cALh{}}0`{AKd{{l{AMf}}}}`{AMfA`}`{ce{}{}}0{{AKlc}AMhAMj}{cc{}}`2{{AKlc}{{l{AGj}}}{{AL`{AKl}{{AKn{{l{AGj}}}}}}}}{c{{`{{AKh{}{{AKn{AGj}}}}}}}{{AL`{AKl}{{AKn{{l{AGj}}}}}}}}`887{AKl{{l{AKd}}}}`````````````{{AMlAMl}AGj}6666666666{AMl{{l{c}}}{}}{AMhAMh}{AMnAMn}{AN`AN`}{{ce}AGj{}{}}00{{AMhAMh}AGj}{AMlALn}{AMnc{}}`{AMlAGj}{ANbAMh}{{AMlc}AMhAMj}{{AMnc}AMhAMj}{{AMhc}AGj{{ANf{}{{ANd{AMh}}}}}}{{AMhAHd}AHj}0{{AMlAHd}AHj}0{AMlAMl}{cc{}}{ANhAMh}1111{ce{}{}}0000{AMhAKf}{AMhc{}}0{AMlAGn}{AMlANb}{{AJfc}AMhAMj}{{ce}AMhANjAMj}{AKd{{l{AKb}}}}{AMl{{l{c}}}AKb}{{{AKh{}{{AKn{c}}}}AK`}{{l{c}}}{}}{AKd{{l{AN`}}}}{{{AKh{}{{AKn{c}}}}AKf}{{l{c}}}{}}{AMl{{l{{ALd{AM`ALbAMl}}}}}}{{{AKh{}{{AKn{c}}}}h}{{l{c}}}{}}{{AMlc}{{l{{ANl{e}}}}}ANn{}}{{ANbc}AGnANn}{{AMlc}AGnANn}00{AMhAJf}{AMlAJf}{cAJf{}}{{AMle}{{l{c}}}{}{{AO`{AMn}{{AKn{{l{{ALd{cALn}}}}}}}}}}{AMhAKf}{ce{}{}}00{cALf{}}0{{AN`AKf}AGj}{c{{AHh{e}}}{}{}}000000000{cALh{}}0000``{{AObAOb}AGj}{AOd{{l{{ALd{AM`ALbAMl}}}}}}``````````6666666666666666{{{ANl{ce}}}AGj{}{}}{{{ANl{ce}}}{{ANl{ce}}}AOfAOf}{{{AOh{ce}}}{{AOh{ce}}}{}{}}{{{AOj{ce}}}{{AOj{ce}}}AOfAOf}{{{AOl{c}}}{{AOl{c}}}AOf}{{{AJb{c}}}{{AJb{c}}}{}}{{{AOn{ce}}}{{AOn{ce}}}AOfAOf}{{{ANl{ce}}{ANl{ce}}}AGjAOfAOf}{{ce}AGj{}{}}000002{{}{{ANl{ce}}}{}{}}{{{ANl{ce}}}AGn{}{}}{{{ANl{ce}}g}AGj{}B`{{ANf{}{{ANd{c}}}}}}{{{ANl{ce}}g}AGj{}B`{{ANf{}{{ANd{{AOn{ce}}}}}}}}{{{ANl{ce}}}{{AIn{c}}}{}{}}0{cc{}}0000000{g{{ANl{ce}}}{}{}{{ANf{}{{ANd{{AOn{ce}}}}}}}}{e{{ANl{cg}}}{}{{ANf{}{{ANd{c}}}}}B`}{{{ANl{ce}}AIh}g{}{}{}}0{{{ANl{ce}}AIhc}AGj{}B`}{ce{}{}}0000000{{{ANl{ce}}}g{}{}{}}00111111{{{ANl{ce}}}{{AOj{ce}}}{}{}}{{{AOn{ce}}}{{ALd{c{AIn{e}}}}}{}{}}{{{AOn{ce}}}c{}{}}={{{ANl{ce}}}{{AJb{c}}}{}{}}{{{ANl{ce}}}{{AJd{c}}}{}{}}<<{{{ANl{ce}}}AIh{}{}}{{{AOh{ce}}}AIh{}{}}{{{Bb{ce}}}AIh{}{}}{{{AOj{ce}}}AIh{}{}}{{{AOl{c}}}AIh{}}{{{AJb{c}}}AIh{}}{{{AJd{c}}}AIh{}}{{}{{ANl{ce}}}{}{}}{{c{AIn{e}}}{{AOn{ce}}}{}{}}{{{AOh{ce}}}{{AIn{g}}}{}{}{}}{{{Bb{ce}}}{{AIn{g}}}{}{}{}}{{{AOj{ce}}}{{AIn{g}}}{}{}{}}{{{AOl{c}}}{{AIn{e}}}{}{}}{{{AJb{c}}}{{AIn{e}}}{}{}}{{{AJd{c}}}{{AIn{e}}}{}{}}543210{{{ANl{ce}}}{{AOh{ce}}}{}{}}{{{ANl{ce}}}{{Bb{ce}}}{}{}}{AKd{{l{{ANl{ce}}}}}AKb{BdAKb}}{AKd{{l{{ANl{ce}}}}}{}{BdAKb}}{AKd{{l{{ANl{ce}}}}}AKbAKb}{AKd{{l{{ANl{ce}}}}}{}AKb}{{{ANl{ce}}}{{AIn{{AOn{ce}}}}}{}{}}{{{ANl{ce}}}{{AIn{e}}}{}{}}{{{AOn{ce}}}{{AIn{e}}}{}{}}0{{{ANl{ce}}c}AGj{}B`}{{{ANl{ce}}e}AGj{}{}}{{{ANl{ce}}c}AGj{}{}}{{{AOh{ce}}}{{ALd{AIh{AIn{AIh}}}}}{}{}}{{{Bb{ce}}}{{ALd{AIh{AIn{AIh}}}}}{}{}}{{{AOj{ce}}}{{ALd{AIh{AIn{AIh}}}}}{}{}}{{{AOl{c}}}{{ALd{AIh{AIn{AIh}}}}}{}}{{{AJb{c}}}{{ALd{AIh{AIn{AIh}}}}}{}}{{{AJd{c}}}{{ALd{AIh{AIn{AIh}}}}}{}}{cAJf{}}0{ce{}{}}00000{{{ANl{ce}}AKf}AGjANjANj}{{{AOn{ce}}AKf}AGjANjANj}{{{ANl{ce}}}AGn{}{}}{c{{AHh{e}}}{}{}}000000000000000{cALh{}}0000000{{{AOn{ce}}}c{}{}}0`{BfAJf}````````````````````````````````````````````````````````````````````````````````````````````````````````77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777{BhBh}{AIfAIf}{BjBj}{BlBl}{BnBn}{BA`BA`}{BAbBAb}{BAdBAd}{BAfBAf}{BAhBAh}{BAjBAj}{BAlBAl}{AHnAHn}{BAnBAn}{BB`BB`}{BBbBBb}{BBdBBd}{BBfBBf}{AHlAHl}{BBhBBh}{BBjBBj}{BBlBBl}{BBnBBn}{BC`BC`}{BCbBCb}{BCdBCd}{BCfBCf}{BChBCh}{BCjBCj}{BClBCl}{BCnBCn}{BD`BD`}{BDbBDb}{BDdBDd}{BDfBDf}{BDhBDh}{BDjBDj}{AI`AI`}{AIdAId}{BDlBDl}{BDnBDn}{AIbAIb}{BE`BE`}{BEbBEb}{BEdBEd}{BEfBEf}{BEhBEh}{BEjBEj}{BElBEl}{BEnBEn}{BF`BF`}{BFbBFb}{BFdBFd}{BFfBFf}{BFhBFh}{BFjBFj}{BFlBFl}{BFnBFn}{BG`BG`}{BGbBGb}{BGdBGd}{BGfBGf}{BGhBGh}{BGjBGj}{BGlBGl}{BGnBGn}{BH`BH`}{BHbBHb}{BHdBHd}{BHfBHf}{BHhBHh}{BHjBHj}{BHlBHl}{BHnBHn}{BI`BI`}{BIbBIb}{BIdBId}{BIfBIf}{BIhBIh}{BIjBIj}{BIlBIl}{BInBIn}{BJ`BJ`}{BJbBJb}{BJdBJd}{BJfBJf}{BJhBJh}{BJjBJj}{BJlBJl}{BJnBJn}{BK`BK`}{BKbBKb}{BKdBKd}{BKfBKf}{BKhBKh}{BKjBKj}{BKlBKl}{BKnBKn}{BL`BL`}{BLbBLb}{BLdBLd}{BLfBLf}{BLhBLh}{{ce}AGj{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Bh}{{}AIf}{{}Bj}{{}Bl}{{}Bn}{{}BA`}{{}BAb}{{}BAd}{{}BAf}{{}BAh}{{}BAj}{{}BAl}{{}AHn}{{}BAn}{{}BB`}{{}BBb}{{}BBd}{{}BBf}{{}AHl}{{}BBh}{{}BBj}{{}BBl}{{}BBn}{{}BC`}{{}BCb}{{}BCd}{{}BCf}{{}BCh}{{}BCj}{{}BCl}{{}BCn}{{}BD`}{{}BDb}{{}BDd}{{}BDf}{{}BDh}{{}BDj}{{}AI`}{{}AId}{{}BDl}{{}BDn}{{}AIb}{{}BE`}{{}BEb}{{}BEd}{{}BEf}{{}BEh}{{}BEj}{{}BEl}{{}BEn}{{}BF`}{{}BFb}{{}BFd}{{}BFf}{{}BFh}{{}BFj}{{}BFl}{{}BFn}{{}BG`}{{}BGb}{{}BGd}{{}BGf}{{}BGh}{{}BGj}{{}BGl}{{}BGn}{{}BH`}{{}BHb}{{}BHd}{{}BHf}{{}BHh}{{}BHj}{{}BHl}{{}BHn}{{}BI`}{{}BIb}{{}BId}{{}BIf}{{}BIh}{{}BIj}{{}BIl}{{}BIn}{{}BJ`}{{}BJb}{{}BJd}{{}BJf}{{}BJh}{{}BJj}{{}BJl}{{}BJn}{{}BK`}{{}BKb}{{}BKd}{{}BKf}{{}BKh}{{}BKj}{{}BKl}{{}BKn}{{}BL`}{{}BLb}{{}BLd}{{}BLf}{{}BLh}{AIfc{}}{BFhc{}}{BFnc{}}{BG`c{}}{BGdc{}}{BGfc{}}{BGhc{}}{BGjc{}}{BHbc{}}{BHjc{}}{BI`c{}}{BIbc{}}{BIhc{}}{BIjc{}}{BJbc{}}{BJfc{}}{BJjc{}}{BJlc{}}{BK`c{}}{BKjc{}}{BKnc{}}{BLbc{}}{AIfc{}}{BFhc{}}{BFnc{}}{BG`c{}}{BGdc{}}{BGfc{}}{BGhc{}}{BGjc{}}{BHbc{}}{BHjc{}}{BI`c{}}{BIbc{}}{BIhc{}}{BIjc{}}{BJbc{}}{BJfc{}}{BJjc{}}{BJlc{}}{BK`c{}}{BKjc{}}{BKnc{}}{BLbc{}}{cc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{AKd{{l{AIf}}}}{AKd{{l{Bj}}}}{AKd{{l{Bl}}}}{AKd{{l{Bn}}}}{AKd{{l{BA`}}}}{AKd{{l{BAb}}}}{AKd{{l{BAd}}}}{AKd{{l{BAf}}}}{AKd{{l{BAh}}}}{AKd{{l{BAj}}}}{AKd{{l{BAl}}}}{AKd{{l{AHn}}}}{AKd{{l{BAn}}}}{AKd{{l{BB`}}}}{AKd{{l{BBb}}}}{AKd{{l{BBd}}}}{AKd{{l{BBf}}}}{AKd{{l{AHl}}}}{AKd{{l{BBh}}}}{AKd{{l{BBj}}}}{AKd{{l{BBl}}}}{AKd{{l{BBn}}}}{AKd{{l{BC`}}}}{AKd{{l{BCb}}}}{AKd{{l{BCd}}}}{AKd{{l{BCf}}}}{AKd{{l{BCh}}}}{AKd{{l{BCj}}}}{AKd{{l{BCl}}}}{AKd{{l{BCn}}}}{AKd{{l{BD`}}}}{AKd{{l{BDb}}}}{AKd{{l{BDd}}}}{AKd{{l{BDf}}}}{AKd{{l{BDh}}}}{AKd{{l{BDj}}}}{AKd{{l{AI`}}}}{AKd{{l{AId}}}}{AKd{{l{BDl}}}}{AKd{{l{BDn}}}}{AKd{{l{AIb}}}}{AKd{{l{BE`}}}}{AKd{{l{BEb}}}}{AKd{{l{BEd}}}}{AKd{{l{BEf}}}}{AKd{{l{BEh}}}}{AKd{{l{BEj}}}}{AKd{{l{BEl}}}}{AKd{{l{BEn}}}}{AKd{{l{BF`}}}}{AKd{{l{BFb}}}}{AKd{{l{BFd}}}}{AKd{{l{BFf}}}}{AKd{{l{BFh}}}}{AKd{{l{BFj}}}}{AKd{{l{BFl}}}}{AKd{{l{BFn}}}}{AKd{{l{BG`}}}}{AKd{{l{BGb}}}}{AKd{{l{BGd}}}}{AKd{{l{BGf}}}}{AKd{{l{BGh}}}}{AKd{{l{BGj}}}}{AKd{{l{BGl}}}}{AKd{{l{BGn}}}}{AKd{{l{BH`}}}}{AKd{{l{BHb}}}}{AKd{{l{BHd}}}}{AKd{{l{BHf}}}}{AKd{{l{BHh}}}}{AKd{{l{BHj}}}}{AKd{{l{BHl}}}}{AKd{{l{BHn}}}}{AKd{{l{BI`}}}}{AKd{{l{BIb}}}}{AKd{{l{BId}}}}{AKd{{l{BIf}}}}{AKd{{l{BIh}}}}{AKd{{l{BIj}}}}{AKd{{l{BIl}}}}{AKd{{l{BIn}}}}{AKd{{l{BJ`}}}}{AKd{{l{BJb}}}}{AKd{{l{BJd}}}}{AKd{{l{BJf}}}}{AKd{{l{BJh}}}}{AKd{{l{BJj}}}}{AKd{{l{BJl}}}}{AKd{{l{BJn}}}}{AKd{{l{BK`}}}}{AKd{{l{BKb}}}}{AKd{{l{BKd}}}}{AKd{{l{BKf}}}}{AKd{{l{BKh}}}}{AKd{{l{BKj}}}}{AKd{{l{BKl}}}}{AKd{{l{BKn}}}}{AKd{{l{BL`}}}}{AKd{{l{BLb}}}}{cAJf{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````````````````````````````````````````````````````````````````````{{BhAKfc}AGj{{AO`{AKf}}}}{{BLdAKfc}AGj{{AO`{AKf}}}}{{BLfAKfc}AGj{{AO`{AKf}}}}{{BLhAKfc}AGj{{AO`{AKf}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AIfAKf}AGj}{{BjAKf}AGj}{{BlAKf}AGj}{{BnAKf}AGj}{{BA`AKf}AGj}{{BAbAKf}AGj}{{BAdAKf}AGj}{{BAfAKf}AGj}{{BAhAKf}AGj}{{BAjAKf}AGj}{{BAlAKf}AGj}{{AHnAKf}AGj}{{BAnAKf}AGj}{{BB`AKf}AGj}{{BBbAKf}AGj}{{BBdAKf}AGj}{{BBfAKf}AGj}{{AHlAKf}AGj}{{BBhAKf}AGj}{{BBjAKf}AGj}{{BBlAKf}AGj}{{BBnAKf}AGj}{{BC`AKf}AGj}{{BCbAKf}AGj}{{BCdAKf}AGj}{{BCfAKf}AGj}{{BChAKf}AGj}{{BCjAKf}AGj}{{BClAKf}AGj}{{BCnAKf}AGj}{{BD`AKf}AGj}{{BDbAKf}AGj}{{BDdAKf}AGj}{{BDfAKf}AGj}{{BDhAKf}AGj}{{BDjAKf}AGj}{{AI`AKf}AGj}{{AIdAKf}AGj}{{BDlAKf}AGj}{{BDnAKf}AGj}{{AIbAKf}AGj}{{BE`AKf}AGj}{{BEbAKf}AGj}{{BEdAKf}AGj}{{BEfAKf}AGj}{{BEhAKf}AGj}{{BEjAKf}AGj}{{BElAKf}AGj}{{BEnAKf}AGj}{{BF`AKf}AGj}{{BFbAKf}AGj}{{BFdAKf}AGj}{{BFfAKf}AGj}{{BFhAKf}AGj}{{BFjAKf}AGj}{{BFlAKf}AGj}{{BFnAKf}AGj}{{BG`AKf}AGj}{{BGbAKf}AGj}{{BGdAKf}AGj}{{BGfAKf}AGj}{{BGhAKf}AGj}{{BGjAKf}AGj}{{BGlAKf}AGj}{{BGnAKf}AGj}{{BH`AKf}AGj}{{BHbAKf}AGj}{{BHdAKf}AGj}{{BHfAKf}AGj}{{BHhAKf}AGj}{{BHjAKf}AGj}{{BHlAKf}AGj}{{BHnAKf}AGj}{{BI`AKf}AGj}{{BIbAKf}AGj}{{BIdAKf}AGj}{{BIfAKf}AGj}{{BIhAKf}AGj}{{BIjAKf}AGj}{{BIlAKf}AGj}{{BInAKf}AGj}{{BJ`AKf}AGj}{{BJbAKf}AGj}{{BJdAKf}AGj}{{BJfAKf}AGj}{{BJhAKf}AGj}{{BJjAKf}AGj}{{BJlAKf}AGj}{{BJnAKf}AGj}{{BK`AKf}AGj}{{BKbAKf}AGj}{{BKdAKf}AGj}{{BKfAKf}AGj}{{BKhAKf}AGj}{{BKjAKf}AGj}{{BKlAKf}AGj}{{BKnAKf}AGj}{{BL`AKf}AGj}{{BLbAKf}AGj}{c{{AHh{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{cALh{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","c":[],"p":[[5,"TypeGenerics",0],[5,"Turbofish",0],[5,"LitInt",0],[1,"str"],[5,"LitFloat",0],[8,"Result",3711],[10,"FromStr",5665],[5,"Ident",0],[5,"ImplGenerics",0],[5,"Lifetime",0],[5,"Attribute",0],[6,"AttrStyle",0],[6,"Meta",0],[5,"MetaList",0],[5,"MetaNameValue",0],[5,"Variant",0],[6,"Fields",0],[5,"FieldsNamed",0],[5,"FieldsUnnamed",0],[5,"Field",0],[5,"DeriveInput",0],[6,"Data",0],[5,"DataStruct",0],[5,"DataEnum",0],[5,"DataUnion",0],[6,"Expr",0],[5,"ExprArray",0],[5,"ExprAssign",0],[5,"ExprAsync",0],[5,"ExprAwait",0],[5,"ExprBinary",0],[5,"ExprBlock",0],[5,"ExprBreak",0],[5,"ExprCall",0],[5,"ExprCast",0],[5,"ExprClosure",0],[5,"ExprConst",0],[5,"ExprContinue",0],[5,"ExprField",0],[5,"ExprForLoop",0],[5,"ExprGroup",0],[5,"ExprIf",0],[5,"ExprIndex",0],[5,"ExprInfer",0],[5,"ExprLet",0],[5,"ExprLit",0],[5,"ExprLoop",0],[5,"ExprMacro",0],[5,"ExprMatch",0],[5,"ExprMethodCall",0],[5,"ExprParen",0],[5,"ExprPath",0],[5,"ExprRange",0],[5,"ExprReference",0],[5,"ExprRepeat",0],[5,"ExprReturn",0],[5,"ExprStruct",0],[5,"ExprTry",0],[5,"ExprTryBlock",0],[5,"ExprTuple",0],[5,"ExprUnary",0],[5,"ExprUnsafe",0],[5,"ExprWhile",0],[5,"ExprYield",0],[6,"Member",0],[5,"Index",0],[5,"FieldValue",0],[5,"Label",0],[5,"Arm",0],[6,"RangeLimits",0],[5,"File",0],[5,"Generics",0],[6,"GenericParam",0],[5,"LifetimeParam",0],[5,"TypeParam",0],[5,"ConstParam",0],[5,"BoundLifetimes",0],[6,"TypeParamBound",0],[5,"TraitBound",0],[6,"TraitBoundModifier",0],[5,"WhereClause",0],[6,"WherePredicate",0],[5,"PredicateLifetime",0],[5,"PredicateType",0],[6,"Item",0],[5,"ItemConst",0],[5,"ItemEnum",0],[5,"ItemExternCrate",0],[5,"ItemFn",0],[5,"ItemForeignMod",0],[5,"ItemImpl",0],[5,"ItemMacro",0],[5,"ItemMod",0],[5,"ItemStatic",0],[5,"ItemStruct",0],[5,"ItemTrait",0],[5,"ItemTraitAlias",0],[5,"ItemType",0],[5,"ItemUnion",0],[5,"ItemUse",0],[6,"UseTree",0],[5,"UsePath",0],[5,"UseName",0],[5,"UseRename",0],[5,"UseGlob",0],[5,"UseGroup",0],[6,"ForeignItem",0],[5,"ForeignItemFn",0],[5,"ForeignItemStatic",0],[5,"ForeignItemType",0],[5,"ForeignItemMacro",0],[6,"TraitItem",0],[5,"TraitItemConst",0],[5,"TraitItemFn",0],[5,"TraitItemType",0],[5,"TraitItemMacro",0],[6,"ImplItem",0],[5,"ImplItemConst",0],[5,"ImplItemFn",0],[5,"ImplItemType",0],[5,"ImplItemMacro",0],[5,"Signature",0],[6,"FnArg",0],[5,"Receiver",0],[5,"Variadic",0],[6,"StaticMutability",0],[6,"ImplRestriction",0],[6,"Lit",0],[5,"LitStr",0],[5,"LitByteStr",0],[5,"LitCStr",0],[5,"LitByte",0],[5,"LitChar",0],[5,"LitBool",0],[5,"Macro",0],[6,"MacroDelimiter",0],[6,"BinOp",0],[6,"UnOp",0],[6,"Pat",0],[5,"PatIdent",0],[5,"PatOr",0],[5,"PatParen",0],[5,"PatReference",0],[5,"PatRest",0],[5,"PatSlice",0],[5,"PatStruct",0],[5,"PatTuple",0],[5,"PatTupleStruct",0],[5,"PatType",0],[5,"PatWild",0],[5,"FieldPat",0],[5,"Path",0],[5,"PathSegment",0],[6,"PathArguments",0],[6,"GenericArgument",0],[5,"AngleBracketedGenericArguments",0],[5,"AssocType",0],[5,"AssocConst",0],[5,"Constraint",0],[5,"ParenthesizedGenericArguments",0],[5,"QSelf",0],[6,"Visibility",0],[5,"VisRestricted",0],[6,"FieldMutability",0],[5,"Block",0],[6,"Stmt",0],[5,"Local",0],[5,"LocalInit",0],[5,"StmtMacro",0],[6,"Type",0],[5,"TypeArray",0],[5,"TypeBareFn",0],[5,"TypeGroup",0],[5,"TypeImplTrait",0],[5,"TypeInfer",0],[5,"TypeMacro",0],[5,"TypeNever",0],[5,"TypeParen",0],[5,"TypePath",0],[5,"TypePtr",0],[5,"TypeReference",0],[5,"TypeSlice",0],[5,"TypeTraitObject",0],[5,"TypeTuple",0],[5,"Abi",0],[5,"BareFnArg",0],[5,"BareVariadic",0],[6,"ReturnType",0],[1,"unit"],[6,"Ordering",5666],[1,"bool"],[10,"AsRef",5667],[10,"Sized",5668],[5,"Formatter",5669],[5,"Error",5669],[6,"Result",5670],[8,"Result",5669],[5,"Extern",3980],[5,"Crate",3980],[5,"SelfType",3980],[5,"Super",3980],[5,"SelfValue",3980],[5,"Underscore",3980],[1,"usize"],[5,"Literal",5671],[10,"Into",5667],[6,"Option",5672],[10,"Hasher",5673],[5,"Iter",3816],[5,"IterMut",3816],[5,"Span",5671],[1,"u8"],[1,"slice"],[5,"CStr",5674],[1,"char"],[5,"TokenStream",5675],[10,"Parse",3711],[8,"ParseStream",3711],[5,"TokenStream",5671],[10,"Parser",3711],[5,"Vec",5676],[5,"ParseNestedMeta",3697],[17,"Output"],[10,"FnMut",5677],[5,"DelimSpan",5678],[1,"tuple"],[5,"String",5679],[5,"TypeId",5680],[5,"CString",5681],[5,"TokenBuffer",3659],[5,"Cursor",3659],[6,"Delimiter",5671],[5,"Punct",5671],[6,"TokenTree",5671],[10,"IdentExt",3693],[5,"Error",3711],[10,"Display",5669],[5,"ParseBuffer",3711],[5,"StepCursor",3711],[5,"Nothing",3711],[5,"Lookahead1",3711],[17,"Item"],[10,"IntoIterator",5682],[5,"LexError",5671],[10,"ToTokens",5683],[5,"Punctuated",3816],[10,"Peek",3711],[10,"FnOnce",5677],[10,"Speculative",3812],[10,"AnyDelimiter",3812],[10,"Clone",5684],[5,"Pairs",3816],[5,"IntoPairs",3816],[5,"IntoIter",3816],[6,"Pair",3816],[10,"Default",5685],[5,"PairsMut",3816],[10,"Token",3980],[10,"Spanned",3978],[5,"Group",3980],[5,"Abstract",3980],[5,"As",3980],[5,"Async",3980],[5,"Auto",3980],[5,"Await",3980],[5,"Become",3980],[5,"Box",3980],[5,"Break",3980],[5,"Const",3980],[5,"Continue",3980],[5,"Default",3980],[5,"Do",3980],[5,"Dyn",3980],[5,"Else",3980],[5,"Enum",3980],[5,"Final",3980],[5,"Fn",3980],[5,"For",3980],[5,"If",3980],[5,"Impl",3980],[5,"In",3980],[5,"Let",3980],[5,"Loop",3980],[5,"Macro",3980],[5,"Match",3980],[5,"Mod",3980],[5,"Move",3980],[5,"Mut",3980],[5,"Override",3980],[5,"Priv",3980],[5,"Pub",3980],[5,"Ref",3980],[5,"Return",3980],[5,"Static",3980],[5,"Struct",3980],[5,"Trait",3980],[5,"Try",3980],[5,"Type",3980],[5,"Typeof",3980],[5,"Union",3980],[5,"Unsafe",3980],[5,"Unsized",3980],[5,"Use",3980],[5,"Virtual",3980],[5,"Where",3980],[5,"While",3980],[5,"Yield",3980],[5,"And",3980],[5,"AndAnd",3980],[5,"AndEq",3980],[5,"At",3980],[5,"Caret",3980],[5,"CaretEq",3980],[5,"Colon",3980],[5,"Comma",3980],[5,"Dollar",3980],[5,"Dot",3980],[5,"DotDot",3980],[5,"DotDotDot",3980],[5,"DotDotEq",3980],[5,"Eq",3980],[5,"EqEq",3980],[5,"FatArrow",3980],[5,"Ge",3980],[5,"Gt",3980],[5,"LArrow",3980],[5,"Le",3980],[5,"Lt",3980],[5,"Minus",3980],[5,"MinusEq",3980],[5,"Ne",3980],[5,"Not",3980],[5,"Or",3980],[5,"OrEq",3980],[5,"OrOr",3980],[5,"PathSep",3980],[5,"Percent",3980],[5,"PercentEq",3980],[5,"Plus",3980],[5,"PlusEq",3980],[5,"Pound",3980],[5,"Question",3980],[5,"RArrow",3980],[5,"Semi",3980],[5,"Shl",3980],[5,"ShlEq",3980],[5,"Shr",3980],[5,"ShrEq",3980],[5,"Slash",3980],[5,"SlashEq",3980],[5,"Star",3980],[5,"StarEq",3980],[5,"Tilde",3980],[5,"Brace",3980],[5,"Bracket",3980],[5,"Paren",3980]],"b":[[1395,"impl-PartialEq-for-Ident"],[1396,"impl-PartialEq%3CT%3E-for-Ident"],[1444,"impl-IdentFragment-for-Ident"],[1445,"impl-Debug-for-Ident"],[1446,"impl-Display-for-Ident"],[1456,"impl-From%3CExtern%3E-for-Ident"],[1457,"impl-From%3CCrate%3E-for-Ident"],[1459,"impl-From%3CSelfType%3E-for-Ident"],[1460,"impl-From%3CSuper%3E-for-Ident"],[1461,"impl-From%3CSelfValue%3E-for-Ident"],[1462,"impl-From%3CUnderscore%3E-for-Ident"],[1469,"impl-From%3CMetaList%3E-for-Meta"],[1470,"impl-From%3CMetaNameValue%3E-for-Meta"],[1472,"impl-From%3CPath%3E-for-Meta"],[1476,"impl-From%3CFieldsNamed%3E-for-Fields"],[1477,"impl-From%3CFieldsUnnamed%3E-for-Fields"],[1483,"impl-From%3CItemEnum%3E-for-DeriveInput"],[1484,"impl-From%3CItemUnion%3E-for-DeriveInput"],[1485,"impl-From%3CItemStruct%3E-for-DeriveInput"],[1490,"impl-From%3CExprBreak%3E-for-Expr"],[1491,"impl-From%3CExprAssign%3E-for-Expr"],[1492,"impl-From%3CExprTry%3E-for-Expr"],[1493,"impl-From%3CExprClosure%3E-for-Expr"],[1494,"impl-From%3CExprLet%3E-for-Expr"],[1495,"impl-From%3CExprContinue%3E-for-Expr"],[1496,"impl-From%3CExprConst%3E-for-Expr"],[1497,"impl-From%3CExprInfer%3E-for-Expr"],[1498,"impl-From%3CExprUnary%3E-for-Expr"],[1499,"impl-From%3CExprArray%3E-for-Expr"],[1500,"impl-From%3CExprIf%3E-for-Expr"],[1501,"impl-From%3CExprYield%3E-for-Expr"],[1502,"impl-From%3CExprCall%3E-for-Expr"],[1503,"impl-From%3CExprWhile%3E-for-Expr"],[1504,"impl-From%3CExprTryBlock%3E-for-Expr"],[1505,"impl-From%3CExprCast%3E-for-Expr"],[1506,"impl-From%3CExprBinary%3E-for-Expr"],[1507,"impl-From%3CExprField%3E-for-Expr"],[1508,"impl-From%3CExprAsync%3E-for-Expr"],[1509,"impl-From%3CExprGroup%3E-for-Expr"],[1510,"impl-From%3CExprStruct%3E-for-Expr"],[1511,"impl-From%3CExprParen%3E-for-Expr"],[1513,"impl-From%3CExprMacro%3E-for-Expr"],[1514,"impl-From%3CExprLoop%3E-for-Expr"],[1515,"impl-From%3CExprTuple%3E-for-Expr"],[1516,"impl-From%3CExprReturn%3E-for-Expr"],[1517,"impl-From%3CExprLit%3E-for-Expr"],[1518,"impl-From%3CExprIndex%3E-for-Expr"],[1519,"impl-From%3CExprUnsafe%3E-for-Expr"],[1520,"impl-From%3CExprRepeat%3E-for-Expr"],[1521,"impl-From%3CExprMethodCall%3E-for-Expr"],[1522,"impl-From%3CExprForLoop%3E-for-Expr"],[1523,"impl-From%3CExprRange%3E-for-Expr"],[1524,"impl-From%3CExprReference%3E-for-Expr"],[1525,"impl-From%3CExprMatch%3E-for-Expr"],[1526,"impl-From%3CExprAwait%3E-for-Expr"],[1527,"impl-From%3CExprBlock%3E-for-Expr"],[1528,"impl-From%3CExprPath%3E-for-Expr"],[1567,"impl-From%3CIdent%3E-for-Member"],[1568,"impl-From%3CIndex%3E-for-Member"],[1570,"impl-From%3Cusize%3E-for-Member"],[1579,"impl-From%3CTypeParam%3E-for-GenericParam"],[1580,"impl-From%3CConstParam%3E-for-GenericParam"],[1581,"impl-From%3CLifetimeParam%3E-for-GenericParam"],[1589,"impl-From%3CLifetime%3E-for-TypeParamBound"],[1590,"impl-From%3CTraitBound%3E-for-TypeParamBound"],[1594,"impl-From%3CPredicateType%3E-for-WherePredicate"],[1595,"impl-From%3CPredicateLifetime%3E-for-WherePredicate"],[1599,"impl-From%3CDeriveInput%3E-for-Item"],[1600,"impl-From%3CItemFn%3E-for-Item"],[1601,"impl-From%3CItemUnion%3E-for-Item"],[1602,"impl-From%3CItemMod%3E-for-Item"],[1603,"impl-From%3CItemStruct%3E-for-Item"],[1604,"impl-From%3CItemMacro%3E-for-Item"],[1605,"impl-From%3CItemConst%3E-for-Item"],[1607,"impl-From%3CItemExternCrate%3E-for-Item"],[1608,"impl-From%3CItemImpl%3E-for-Item"],[1609,"impl-From%3CItemStatic%3E-for-Item"],[1610,"impl-From%3CItemTrait%3E-for-Item"],[1611,"impl-From%3CItemEnum%3E-for-Item"],[1612,"impl-From%3CItemForeignMod%3E-for-Item"],[1613,"impl-From%3CItemType%3E-for-Item"],[1614,"impl-From%3CItemUse%3E-for-Item"],[1615,"impl-From%3CItemTraitAlias%3E-for-Item"],[1631,"impl-From%3CUseGroup%3E-for-UseTree"],[1632,"impl-From%3CUsePath%3E-for-UseTree"],[1633,"impl-From%3CUseRename%3E-for-UseTree"],[1634,"impl-From%3CUseGlob%3E-for-UseTree"],[1636,"impl-From%3CUseName%3E-for-UseTree"],[1642,"impl-From%3CForeignItemType%3E-for-ForeignItem"],[1643,"impl-From%3CForeignItemStatic%3E-for-ForeignItem"],[1644,"impl-From%3CForeignItemMacro%3E-for-ForeignItem"],[1645,"impl-From%3CForeignItemFn%3E-for-ForeignItem"],[1652,"impl-From%3CTraitItemType%3E-for-TraitItem"],[1653,"impl-From%3CTraitItemConst%3E-for-TraitItem"],[1654,"impl-From%3CTraitItemMacro%3E-for-TraitItem"],[1655,"impl-From%3CTraitItemFn%3E-for-TraitItem"],[1660,"impl-From%3CImplItemMacro%3E-for-ImplItem"],[1661,"impl-From%3CImplItemType%3E-for-ImplItem"],[1663,"impl-From%3CImplItemConst%3E-for-ImplItem"],[1664,"impl-From%3CImplItemFn%3E-for-ImplItem"],[1670,"impl-From%3CPatType%3E-for-FnArg"],[1671,"impl-From%3CReceiver%3E-for-FnArg"],[1677,"impl-From%3CLitByteStr%3E-for-Lit"],[1678,"impl-From%3CLitFloat%3E-for-Lit"],[1679,"impl-From%3CLitCStr%3E-for-Lit"],[1680,"impl-From%3CLitInt%3E-for-Lit"],[1681,"impl-From%3CLitChar%3E-for-Lit"],[1682,"impl-From%3CLitBool%3E-for-Lit"],[1683,"impl-From%3CLitStr%3E-for-Lit"],[1685,"impl-From%3CLitByte%3E-for-Lit"],[1700,"impl-From%3CPatType%3E-for-Pat"],[1701,"impl-From%3CPatParen%3E-for-Pat"],[1702,"impl-From%3CPatWild%3E-for-Pat"],[1703,"impl-From%3CPatTuple%3E-for-Pat"],[1704,"impl-From%3CPatRest%3E-for-Pat"],[1705,"impl-From%3CPatIdent%3E-for-Pat"],[1706,"impl-From%3CPatTupleStruct%3E-for-Pat"],[1707,"impl-From%3CExprRange%3E-for-Pat"],[1708,"impl-From%3CExprMacro%3E-for-Pat"],[1709,"impl-From%3CExprLit%3E-for-Pat"],[1710,"impl-From%3CPatReference%3E-for-Pat"],[1711,"impl-From%3CExprPath%3E-for-Pat"],[1712,"impl-From%3CPatStruct%3E-for-Pat"],[1713,"impl-From%3CExprConst%3E-for-Pat"],[1715,"impl-From%3CPatSlice%3E-for-Pat"],[1716,"impl-From%3CPatOr%3E-for-Pat"],[1749,"impl-From%3CTypePtr%3E-for-Type"],[1750,"impl-From%3CTypeImplTrait%3E-for-Type"],[1751,"impl-From%3CTypeArray%3E-for-Type"],[1752,"impl-From%3CTypeTuple%3E-for-Type"],[1754,"impl-From%3CTypeBareFn%3E-for-Type"],[1755,"impl-From%3CTypeTraitObject%3E-for-Type"],[1756,"impl-From%3CTypeSlice%3E-for-Type"],[1757,"impl-From%3CTypeNever%3E-for-Type"],[1758,"impl-From%3CTypeReference%3E-for-Type"],[1759,"impl-From%3CTypePath%3E-for-Type"],[1760,"impl-From%3CTypeGroup%3E-for-Type"],[1761,"impl-From%3CTypeInfer%3E-for-Type"],[1762,"impl-From%3CTypeMacro%3E-for-Type"],[1763,"impl-From%3CTypeParen%3E-for-Type"],[2042,"impl-IntoIterator-for-Fields"],[2043,"impl-IntoIterator-for-%26Fields"],[2044,"impl-IntoIterator-for-%26mut+Fields"],[2267,"impl-LitStr"],[2268,"impl-Parse-for-LitStr"],[2429,"impl-Ident"],[2431,"impl-IdentFragment-for-Ident"],[3751,"impl-Display-for-Error"],[3752,"impl-Debug-for-Error"],[3753,"impl-Display-for-ParseBuffer%3C\'a%3E"],[3754,"impl-Debug-for-ParseBuffer%3C\'a%3E"],[3768,"impl-IntoIterator-for-%26Error"],[3769,"impl-IntoIterator-for-Error"],[3859,"impl-Extend%3CT%3E-for-Punctuated%3CT,+P%3E"],[3860,"impl-Extend%3CPair%3CT,+P%3E%3E-for-Punctuated%3CT,+P%3E"],[3871,"impl-FromIterator%3CPair%3CT,+P%3E%3E-for-Punctuated%3CT,+P%3E"],[3872,"impl-FromIterator%3CT%3E-for-Punctuated%3CT,+P%3E"],[3884,"impl-IntoIterator-for-%26Punctuated%3CT,+P%3E"],[3885,"impl-IntoIterator-for-Punctuated%3CT,+P%3E"],[3886,"impl-IntoIterator-for-%26mut+Punctuated%3CT,+P%3E"]]}],\
["test",{"doc":"","t":"HH","n":["main","read_lines"],"q":[[0,"test"],[2,"std::io::error"],[3,"std::fs"],[4,"std::io::buffered::bufreader"],[5,"std::io"],[6,"std::path"],[7,"core::convert"]],"d":["Point d’entrée principal de l’application. Cette …","Lit les lignes d’un fichier et retourne un itérateur …"],"i":[0,0],"f":"{{}{{d{b}}}}{c{{d{{j{{h{f}}}}}}}{{n{l}}}}","c":[],"p":[[1,"unit"],[8,"Result",2],[5,"File",3],[5,"BufReader",4],[5,"Lines",5],[5,"Path",6],[10,"AsRef",7]],"b":[]}],\
["tokio",{"doc":"A runtime for writing reliable network applications …","t":"CCQXCQCCQCECCCQXCQFFFFFNNNNNNNNNNNNNNNHNNHNNNHHNNNNNNNNNNNNNNNNNNNNHNNNNNNNHNNNNNNNNNNNNNNNNHNHHHNHHHHNNNHNNNHHHNNNNNHNNNNNNNNNNNNNNNNHNTKKKKKKKKFFFFTTTFEEFFFTTTFFFFEEFFFFFFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNHHHNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNMNNNMNNNNNMNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNHHNNMNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCPPFPFFGFGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONONNNNNNNNNNNNNNNNNNNNNFPFFPFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCFFFFFNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPFFPPTFFFPFFFFFFFFFFFFFFGGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNFFNNNNNHNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPGFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNPPPPPFGPGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNHNNNNCNNNNNNNNNNNNNNNNNNPPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNHNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHFNNNNNNNNNNNNPPEFFGPFFNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNHHNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["fs","io","join","main","net","pin","process","runtime","select","signal","spawn","stream","sync","task","task_local","test","time","try_join","DirBuilder","DirEntry","File","OpenOptions","ReadDir","access_mode","append","as_handle","as_raw_handle","attributes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","custom_flags","default","default","file_name","file_type","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_handle","from_std","hard_link","into","into","into","into","into","into_std","is_write_vectored","metadata","metadata","metadata","new","new","next_entry","open","open","options","path","poll_complete","poll_flush","poll_next_entry","poll_read","poll_shutdown","poll_write","poll_write_vectored","read","read","read_dir","read_link","read_to_string","recursive","remove_dir","remove_dir_all","remove_file","rename","security_qos_flags","set_len","set_max_buf_size","set_permissions","set_permissions","share_mode","start_seek","symlink_dir","symlink_file","symlink_metadata","sync_all","sync_data","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_std","type_id","type_id","type_id","type_id","type_id","write","write","ALL","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BufReader","BufStream","BufWriter","DuplexStream","EMPTY","ERROR","ERROR","Empty","Error","ErrorKind","Interest","Join","Lines","READABLE","READABLE","READ_CLOSED","ReadBuf","ReadHalf","Ready","Repeat","Result","SeekFrom","Sink","Split","Stderr","Stdin","Stdout","Take","WRITABLE","WRITABLE","WRITE_CLOSED","WriteHalf","add","advance","advance_mut","as_handle","as_handle","as_handle","as_raw_handle","as_raw_handle","as_raw_handle","assume_init","bitand","bitor","bitor","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","capacity","chain","chain","chunk_mut","clear","clone","clone","clone_into","clone_into","cmp","consume","consume","consume","consume","consume","consume","consume","consume","copy","copy_bidirectional","copy_buf","drop","duplex","empty","eq","eq","fill_buf","fill_buf","filled","filled_mut","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","initialize_unfilled","initialize_unfilled_to","initialized","initialized_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_empty","is_error","is_error","is_pair_of","is_pair_of","is_read_closed","is_readable","is_readable","is_writable","is_writable","is_write_closed","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","join","limit","lines","lines","new","new","new","new","next_line","next_segment","partial_cmp","poll_complete","poll_complete","poll_complete","poll_complete","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next_line","poll_next_segment","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","put_slice","read","read","read_buf","read_buf","read_exact","read_exact","read_f32","read_f32","read_f32_le","read_f32_le","read_f64","read_f64","read_f64_le","read_f64_le","read_i128","read_i128","read_i128_le","read_i128_le","read_i16","read_i16","read_i16_le","read_i16_le","read_i32","read_i32","read_i32_le","read_i32_le","read_i64","read_i64","read_i64_le","read_i64_le","read_i8","read_i8","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_u128","read_u128","read_u128_le","read_u128_le","read_u16","read_u16","read_u16_le","read_u16_le","read_u32","read_u32","read_u32_le","read_u32_le","read_u64","read_u64","read_u64_le","read_u64_le","read_u8","read_u8","read_until","read_until","reader","reader_mut","reader_pin_mut","remaining","remaining_mut","remove","repeat","rewind","rewind","seek","seek","set_filled","set_limit","shutdown","shutdown","sink","split","split","split","start_seek","start_seek","start_seek","start_seek","stderr","stdin","stdout","stream_position","stream_position","sub","take","take","take","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfilled_mut","uninit","unsplit","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_all_buf","write_all_buf","write_buf","write_buf","write_f32","write_f32","write_f32_le","write_f32_le","write_f64","write_f64","write_f64_le","write_f64_le","write_i128","write_i128","write_i128_le","write_i128_le","write_i16","write_i16","write_i16_le","write_i16_le","write_i32","write_i32","write_i32_le","write_i32_le","write_i64","write_i64","write_i64_le","write_i64_le","write_i8","write_i8","write_u128","write_u128","write_u128_le","write_u128_le","write_u16","write_u16","write_u16_le","write_u16_le","write_u32","write_u32","write_u32_le","write_u32_le","write_u64","write_u64","write_u64_le","write_u64_le","write_u8","write_u8","write_vectored","write_vectored","writer","writer_mut","writer_pin_mut","TcpListener","TcpSocket","TcpStream","ToSocketAddrs","UdpSocket","accept","as_raw_socket","as_raw_socket","as_raw_socket","as_raw_socket","as_socket","as_socket","as_socket","as_socket","async_io","async_io","bind","bind","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","connect","connect","connect","fmt","fmt","fmt","fmt","from","from","from","from","from_raw_socket","from_std","from_std","from_std","from_std_stream","into","into","into","into","into_raw_socket","into_split","into_std","into_std","into_std","is_write_vectored","join_multicast_v4","join_multicast_v6","keepalive","leave_multicast_v4","leave_multicast_v6","linger","linger","listen","local_addr","local_addr","local_addr","local_addr","lookup_host","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","new_v4","new_v6","nodelay","nodelay","peek","peek_from","peek_sender","peer_addr","peer_addr","poll_accept","poll_flush","poll_peek","poll_peek_from","poll_peek_sender","poll_read","poll_read_ready","poll_recv","poll_recv_from","poll_recv_ready","poll_send","poll_send_ready","poll_send_to","poll_shutdown","poll_write","poll_write_ready","poll_write_vectored","readable","readable","ready","ready","recv","recv_buf","recv_buf_from","recv_buffer_size","recv_from","reuseaddr","send","send_buffer_size","send_to","set_broadcast","set_keepalive","set_linger","set_linger","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_nodelay","set_nodelay","set_recv_buffer_size","set_reuseaddr","set_send_buffer_size","set_tos","set_tos","set_ttl","set_ttl","set_ttl","split","take_error","take_error","take_error","tcp","tos","tos","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_io","try_io","try_peek_from","try_peek_sender","try_read","try_read_buf","try_read_vectored","try_recv","try_recv_buf","try_recv_buf_from","try_recv_from","try_send","try_send_to","try_write","try_write_vectored","ttl","ttl","ttl","type_id","type_id","type_id","type_id","windows","writable","writable","OwnedReadHalf","OwnedWriteHalf","ReadHalf","ReuniteError","WriteHalf","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","into","into","into","into","into","is_write_vectored","is_write_vectored","local_addr","local_addr","local_addr","local_addr","peek","peek","peer_addr","peer_addr","peer_addr","peer_addr","poll_flush","poll_flush","poll_peek","poll_peek","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_vectored","poll_write_vectored","readable","readable","ready","ready","ready","ready","reunite","reunite","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_read","try_read","try_read_buf","try_read_buf","try_read_vectored","try_read_vectored","try_write","try_write","try_write_vectored","try_write_vectored","type_id","type_id","type_id","type_id","type_id","writable","writable","named_pipe","Byte","Client","ClientOptions","Message","NamedPipeClient","NamedPipeServer","PipeEnd","PipeInfo","PipeMode","Server","ServerOptions","access_inbound","access_outbound","access_system_security","as_handle","as_handle","as_raw_handle","as_raw_handle","async_io","async_io","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","create","create_with_security_attributes_raw","disconnect","end","eq","eq","first_pipe_instance","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_handle","from_raw_handle","hash","hash","in_buffer_size","in_buffer_size","info","info","into","into","into","into","into","into","into","max_instances","max_instances","mode","new","new","open","open_with_security_attributes_raw","out_buffer_size","out_buffer_size","pipe_mode","pipe_mode","poll_flush","poll_flush","poll_read","poll_read","poll_read_ready","poll_read_ready","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_ready","poll_write_ready","poll_write_vectored","poll_write_vectored","read","readable","readable","ready","ready","reject_remote_clients","security_qos_flags","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_io","try_io","try_read","try_read","try_read_buf","try_read_buf","try_read_vectored","try_read_vectored","try_write","try_write","try_write_vectored","try_write_vectored","type_id","type_id","type_id","type_id","type_id","type_id","type_id","writable","writable","write","write_dac","write_owner","Child","ChildStderr","ChildStdin","ChildStdout","Command","arg","args","as_handle","as_handle","as_handle","as_raw_handle","as_raw_handle","as_raw_handle","as_std","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","creation_flags","current_dir","env","env_clear","env_remove","envs","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_std","from_std","from_std","id","into","into","into","into","into","into_owned_handle","into_owned_handle","into_owned_handle","is_write_vectored","kill","kill_on_drop","new","output","poll_flush","poll_read","poll_read","poll_shutdown","poll_write","poll_write_vectored","raw_arg","raw_handle","spawn","start_kill","status","stderr","stderr","stdin","stdin","stdout","stdout","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_wait","type_id","type_id","type_id","type_id","type_id","wait","wait_with_output","Builder","CurrentThread","EnterGuard","Handle","MultiThread","Runtime","RuntimeFlavor","TryCurrentError","block_on","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","current","drop","enable_all","enable_io","enable_time","enter","enter","eq","event_interval","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","global_queue_interval","handle","into","into","into","into","into","into","is_missing_context","is_thread_local_destroyed","max_blocking_threads","max_io_events_per_tick","new","new_current_thread","new_multi_thread","on_thread_park","on_thread_start","on_thread_stop","on_thread_unpark","runtime_flavor","shutdown_background","shutdown_timeout","spawn","spawn","spawn_blocking","spawn_blocking","thread_keep_alive","thread_name","thread_name_fn","thread_stack_size","to_owned","to_string","try_current","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","worker_threads","ctrl_c","windows","CtrlBreak","CtrlC","CtrlClose","CtrlLogoff","CtrlShutdown","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ctrl_break","ctrl_c","ctrl_close","ctrl_logoff","ctrl_shutdown","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","poll_recv","poll_recv","poll_recv","poll_recv","poll_recv","recv","recv","recv","recv","recv","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AcquireError","AlreadyInitializedError","Barrier","BarrierWaitResult","Closed","InitializingError","MAX_PERMITS","MappedMutexGuard","Mutex","MutexGuard","NoPermits","Notify","OnceCell","OwnedMappedMutexGuard","OwnedMutexGuard","OwnedRwLockMappedWriteGuard","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","OwnedSemaphorePermit","RwLock","RwLockMappedWriteGuard","RwLockReadGuard","RwLockWriteGuard","Semaphore","SemaphorePermit","SetError","TryAcquireError","TryLockError","acquire","acquire_many","acquire_many_owned","acquire_owned","add_permits","available_permits","blocking_lock","blocking_lock_owned","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone_into","clone_into","close","const_new","const_new","const_new","const_new","const_new","const_new_with","const_with_max_readers","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade_map","downgrade_map","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","forget","forget_permits","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","futures","get","get_mut","get_mut","get_mut","get_or_init","get_or_try_init","initialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_mapped","into_mapped","is_already_init_err","is_closed","is_initializing_err","is_leader","lock","lock_owned","map","map","map","map","map","map","map","map","map","map","merge","merge","mpsc","mutex","mutex","new","new","new","new","new","new","new_with","notified","notify_one","notify_waiters","oneshot","read","read_owned","rwlock","rwlock","rwlock","semaphore","set","take","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_acquire","try_acquire_many","try_acquire_many_owned","try_acquire_owned","try_downgrade_map","try_downgrade_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","watch","with_max_readers","write","write_owned","Receiver","Sender","blocking_recv","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone_into","drop","drop","error","fmt","fmt","from","from","into","into","is_empty","is_empty","len","len","new","receiver_count","recv","resubscribe","same_channel","same_channel","send","subscribe","to_owned","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","Closed","Closed","Empty","Lagged","Lagged","RecvError","SendError","TryRecvError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Notified","borrow","borrow_mut","drop","enable","fmt","from","into","into_future","poll","try_from","try_into","type_id","OwnedPermit","Permit","PermitIterator","Receiver","Sender","UnboundedReceiver","UnboundedSender","WeakSender","WeakUnboundedSender","blocking_recv","blocking_recv","blocking_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","closed","closed","downgrade","downgrade","drop","drop","drop","drop","drop","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","is_closed","is_closed","is_closed","is_closed","is_empty","is_empty","len","len","max_capacity","next","poll_recv","poll_recv","poll_recv_many","poll_recv_many","recv","recv","recv_many","recv_many","release","reserve","reserve_many","reserve_owned","same_channel","same_channel","send","send","send","send","send_timeout","size_hint","strong_count","strong_count","strong_count","strong_count","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_recv","try_reserve","try_reserve_many","try_reserve_owned","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded_channel","upgrade","upgrade","weak_count","weak_count","weak_count","weak_count","Closed","Closed","Disconnected","Empty","Full","SendError","SendTimeoutError","Timeout","TryRecvError","TrySendError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Receiver","Sender","blocking_recv","borrow","borrow","borrow_mut","borrow_mut","channel","close","closed","drop","drop","error","fmt","fmt","from","from","into","into","into_future","is_closed","poll","poll_closed","send","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","Closed","Empty","RecvError","TryRecvError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Receiver","Ref","Sender","borrow","borrow","borrow","borrow","borrow","borrow_and_update","borrow_mut","borrow_mut","borrow_mut","changed","channel","clone","clone","clone_into","clone_into","closed","deref","drop","drop","error","fmt","fmt","fmt","from","from","from","has_changed","has_changed","into","into","into","is_closed","mark_changed","mark_unchanged","new","receiver_count","same_channel","send","send_if_modified","send_modify","send_replace","subscribe","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_for","RecvError","SendError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AbortHandle","JoinError","JoinHandle","JoinSet","LocalEnterGuard","LocalKey","LocalSet","Unconstrained","abort","abort","abort_all","abort_handle","block_in_place","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","detach_all","drop","drop","drop","drop","drop","enter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_iter","futures","get","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_panic","is_cancelled","is_empty","is_finished","is_finished","is_panic","join_next","len","new","new","poll","poll","poll","poll_join_next","run_until","scope","shutdown","spawn","spawn","spawn_blocking","spawn_blocking","spawn_blocking_on","spawn_local","spawn_local","spawn_local","spawn_local_on","spawn_on","sync_scope","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_panic","try_join_next","try_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconstrained","with","yield_now","TaskLocalFuture","borrow","borrow_mut","drop","fmt","from","into","into_future","poll","take_value","try_from","try_into","type_id","Burst","Delay","Duration","Instant","Interval","MissedTickBehavior","Skip","Sleep","Timeout","add","add_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_duration_since","checked_sub","clone","clone","clone_into","clone_into","cmp","deadline","default","duration_since","elapsed","eq","eq","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_std","get_mut","get_ref","hash","interval","interval_at","into","into","into","into","into","into_future","into_future","into_inner","into_std","is_elapsed","missed_tick_behavior","now","partial_cmp","period","poll","poll","poll_tick","reset","reset","reset_after","reset_at","reset_immediately","saturating_duration_since","set_missed_tick_behavior","sleep","sleep_until","sub","sub","sub_assign","tick","timeout","timeout_at","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Elapsed","Error","at_capacity","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","fmt","from","from","into","into","invalid","is_at_capacity","is_invalid","is_shutdown","shutdown","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"tokio"],[18,"tokio::fs"],[136,"tokio::io"],[657,"tokio::net"],[826,"tokio::net::tcp"],[923,"tokio::net::windows"],[924,"tokio::net::windows::named_pipe"],[1077,"tokio::process"],[1173,"tokio::runtime"],[1272,"tokio::signal"],[1274,"tokio::signal::windows"],[1334,"tokio::sync"],[1730,"tokio::sync::broadcast"],[1769,"tokio::sync::broadcast::error"],[1815,"tokio::sync::futures"],[1828,"tokio::sync::mpsc"],[1986,"tokio::sync::mpsc::error"],[2053,"tokio::sync::oneshot"],[2084,"tokio::sync::oneshot::error"],[2116,"tokio::sync::watch"],[2173,"tokio::sync::watch::error"],[2202,"tokio::task"],[2330,"tokio::task::futures"],[2343,"tokio::time"],[2445,"tokio::time::error"],[2477,"std::os::windows::io::handle"],[2478,"std::os::windows::io::raw"],[2479,"std::path"],[2480,"std::io::error"],[2481,"std::path"],[2482,"std::io::error"],[2483,"std::ffi::os_str"],[2484,"std::fs"],[2485,"core::fmt"],[2486,"core::fmt"],[2487,"core::pin"],[2488,"core::task::wake"],[2489,"core::task::poll"],[2490,"std::io"],[2491,"alloc::vec"],[2492,"alloc::string"],[2493,"std::fs"],[2494,"bytes::buf::uninit_slice"],[2495,"core::cmp"],[2496,"core::marker"],[2497,"core::marker"],[2498,"bytes::buf::buf_mut"],[2499,"bytes::buf::buf_impl"],[2500,"core::net::socket_addr"],[2501,"std::os::windows::io::raw"],[2502,"core::ops::function"],[2503,"std::net::tcp"],[2504,"std::net::tcp"],[2505,"core::net::ip_addr"],[2506,"core::net::ip_addr"],[2507,"core::iter::traits::iterator"],[2508,"core::ops::function"],[2509,"core::hash"],[2510,"core::iter::traits::collect"],[2511,"std::process"],[2512,"std::process"],[2513,"std::process"],[2514,"core::clone"],[2515,"core::default"],[2516,"core::cmp"],[2517,"std::time"]],"d":["Asynchronous file and standard stream adaptation.","Traits, helpers, and type definitions for asynchronous I/O …","Waits on multiple concurrent branches, returning when <strong>all</strong> …","Marks async function to be executed by the selected …","TCP/UDP/Unix bindings for <code>tokio</code>.","Pins a value on the stack.","An implementation of asynchronous process management for …","The Tokio runtime.","Waits on multiple concurrent branches, returning when the …","Asynchronous signal handling for Tokio.","","Due to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …","Synchronization primitives for use in asynchronous …","Asynchronous green-threads.","Declares a new task-local key of type <code>tokio::task::LocalKey</code>…","Marks async function to be executed by runtime, suitable …","Utilities for tracking time.","Waits on multiple concurrent branches, returning when <strong>all</strong> …","A builder for creating directories in various manners.","Entries returned by the <code>ReadDir</code> stream.","A reference to an open file on the filesystem.","Options and flags which can be used to configure how a …","Reads the entries in a directory.","Overrides the <code>dwDesiredAccess</code> argument to the call to …","Sets the option for the append mode.","","","Sets the <code>dwFileAttributes</code> argument to the call to …","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Creates the specified directory with the configured …","Sets the option for creating a new file.","Creates a new, empty directory at the provided path.","Recursively creates a directory and all of its parent …","Sets the option to always create a new file.","Sets extra flags for the <code>dwFileFlags</code> argument to the call …","","","Returns the bare file name of this directory entry without …","Returns the file type for the file that this entry points …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Converts a <code>std::fs::File</code> to a <code>tokio::fs::File</code>.","Creates a new hard link on the filesystem.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destructures <code>File</code> into a <code>std::fs::File</code>. This function is …","","Given a path, queries the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","Creates a new set of options with default mode/security …","Creates a blank new set of options ready for configuration.","Returns the next entry in the directory stream.","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new <code>OpenOptions</code> object.","Returns the full path to the file that this entry …","","","Polls for the next directory entry in the stream.","","","","","Reads the entire contents of a file into a bytes vector.","Sets the option for read access.","Returns a stream over the entries within a directory.","Reads a symbolic link, returning the file that the link …","Creates a future which will open a file for reading and …","Indicates whether to create directories recursively …","Removes an existing, empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Renames a file or directory to a new name, replacing the …","Sets the <code>dwSecurityQosFlags</code> argument to the call to …","Truncates or extends the underlying file, updating the …","Set the maximum buffer size for the underlying <code>AsyncRead</code> / …","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","Overrides the <code>dwShareMode</code> argument to the call to …","","Creates a new directory symlink on the filesystem.","Creates a new file symbolic link on the filesystem.","Queries the file system metadata for a path.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it may …","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","Tries to immediately destructure <code>File</code> into a <code>std::fs::File</code>.","","","","","","Creates a future that will open a file for writing and …","Sets the option for write access.","Returns a <code>Ready</code> representing readiness for all operations.","Reads bytes asynchronously.","An extension trait which adds utility methods to …","Reads bytes from a source.","Reads bytes from a source.","Seek bytes asynchronously.","An extension trait that adds utility methods to <code>AsyncSeek</code> …","Writes bytes asynchronously.","Writes bytes to a sink.","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers …","Wraps a writer and buffers its output.","A bidirectional pipe to read and write bytes in memory.","Returns the empty <code>Ready</code> set.","Interest in error events.","Returns a <code>Ready</code> representing error readiness.","<code>Empty</code> ignores any data written via <code>AsyncWrite</code>, and will …","","","Readiness event interest.","Joins two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> …","Reads lines from an <code>AsyncBufRead</code>.","Interest in all readable events.","Returns a <code>Ready</code> representing readable readiness.","Returns a <code>Ready</code> representing read closed readiness.","A wrapper around a byte buffer that is incrementally …","The readable half of a value returned from <code>split</code>.","Describes the readiness state of an I/O resources.","An async reader which yields one byte over and over and …","","","An async writer which will move data into the void.","Splitter for the <code>split</code> method.","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","Stream for the <code>take</code> method.","Interest in all writable events.","Returns a <code>Ready</code> representing writable readiness.","Returns a <code>Ready</code> representing write closed readiness.","The writable half of a value returned from <code>split</code>.","Add together two <code>Interest</code> values.","Advances the size of the filled region of the buffer.","","","","","","","","Asserts that the first <code>n</code> unfilled bytes of the buffer are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns the total capacity of the buffer.","Creates a new <code>AsyncRead</code> instance that chains this stream …","Creates a new <code>AsyncRead</code> instance that chains this stream …","","Clears the buffer, resetting the filled region to empty.","","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","Tells this buffer that <code>amt</code> bytes have been consumed from …","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","Asynchronously copies the entire contents of a reader into …","Copies data in both directions between <code>a</code> and <code>b</code>.","Asynchronously copies the entire contents of a reader into …","","Create a new pair of <code>DuplexStream</code>s that act like a pair of …","Creates a value that is always at EOF for reads, and …","","","Returns the contents of the internal buffer, filling it …","Returns the contents of the internal buffer, filling it …","Returns a shared reference to the filled portion of the …","Returns a mutable reference to the filled portion of the …","Flushes this output stream, ensuring that all …","Flushes this output stream, ensuring that all …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the underlying reader.","Obtains a mutable reference to the underlying reader.","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying I/O object.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying writer.","Gets a pinned mutable reference to the underlying I/O …","Gets a pinned mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Obtains a reference to the underlying reader.","Gets a reference to the underlying writer.","Gets a reference to the underlying I/O object.","Gets a reference to the underlying reader.","Returns a mutable reference to the unfilled part of the …","Returns a mutable reference to the first <code>n</code> bytes of the …","Returns a shared reference to the initialized portion of …","Returns a mutable reference to the initialized portion of …","Returns a mutable reference to the entire buffer, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Splits this <code>Join</code> back into its <code>AsyncRead</code> and <code>AsyncWrite</code> …","Consumes the <code>Take</code>, returning the wrapped reader.","Unwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.","Consumes this <code>BufWriter</code>, returning the underlying writer.","Consumes this <code>BufStream</code>, returning the underlying I/O …","Consumes this <code>BufReader</code>, returning the underlying reader.","Returns true if <code>Ready</code> is the empty set.","Returns true if the value includes error interest.","Returns <code>true</code> if the value includes error <code>readiness</code>.","Checks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …","Checks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …","Returns <code>true</code> if the value includes read-closed <code>readiness</code>.","Returns true if the value includes readable interest.","Returns <code>true</code> if the value includes <code>readable</code>.","Returns true if the value includes writable interest.","Returns <code>true</code> if the value includes writable <code>readiness</code>.","Returns <code>true</code> if the value includes write-closed <code>readiness</code>.","Determines if this writer has an efficient …","Determines if this writer has an efficient …","","","","","","","","Join two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> into …","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","Returns a stream over the lines of this reader. This …","Creates a new <code>ReadBuf</code> from a fully initialized buffer.","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Wraps a type in both <code>BufWriter</code> and <code>BufReader</code>.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Returns the next line in the stream.","Returns the next segment in the stream.","","Waits for a seek operation to complete.","","","","Attempts to return the contents of the internal buffer, …","","","","","","Attempts to flush the object, ensuring that any buffered …","","","","","","","","","","","Polls for the next line in the stream.","Polls for the next segment in the stream.","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","","Initiates or attempts to shut down this writer, returning …","","","","","","","","","","","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","","","Like <code>poll_write</code>, except that it writes from a slice of …","Like <code>poll_write</code>, except that it writes from a slice of …","","","","","","","","Appends data to the buffer, advancing the written position …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads an 32-bit floating point type in big-endian order …","Reads an 32-bit floating point type in big-endian order …","Reads an 32-bit floating point type in little-endian order …","Reads an 32-bit floating point type in little-endian order …","Reads an 64-bit floating point type in big-endian order …","Reads an 64-bit floating point type in big-endian order …","Reads an 64-bit floating point type in little-endian order …","Reads an 64-bit floating point type in little-endian order …","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in little-endian order …","Reads an signed 128-bit integer in little-endian order …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in little-endian order from …","Reads a signed 32-bit integer in little-endian order from …","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in little-endian order from …","Reads an signed 64-bit integer in little-endian order from …","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, appending them …","Reads all bytes until EOF in this source, appending them …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Returns a reference to the inner reader.","Returns a mutable reference to the inner reader.","Returns a pinned mutable reference to the inner reader.","Returns the number of bytes at the end of the slice that …","","Remove <code>Interest</code> from <code>self</code>.","Creates an instance of an async reader that infinitely …","Creates a future which will rewind to the beginning of the …","Creates a future which will rewind to the beginning of the …","Creates a future which will seek an IO object, and then …","Creates a future which will seek an IO object, and then …","Sets the size of the filled region of the buffer.","Sets the number of bytes that can be read before this …","Shuts down the output stream, ensuring that the value can …","Shuts down the output stream, ensuring that the value can …","Creates an instance of an async writer which will …","Splits a single value implementing <code>AsyncRead + AsyncWrite</code> …","Returns a stream of the contents of this reader split on …","Returns a stream of the contents of this reader split on …","Attempts to seek to an offset, in bytes, in a stream.","","","","Constructs a new handle to the standard error of the …","Constructs a new handle to the standard input of the …","Constructs a new handle to the standard output of the …","Creates a future which will return the current seek …","Creates a future which will return the current seek …","","Returns a new <code>ReadBuf</code> comprised of the unfilled section up …","Creates an adaptor which reads at most <code>limit</code> bytes from it.","Creates an adaptor which reads at most <code>limit</code> bytes from it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the unfilled part of the …","Creates a new <code>ReadBuf</code> from a fully uninitialized buffer.","Reunites with a previously split <code>WriteHalf</code>.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a <code>BufStream</code> with the specified <code>BufReader</code> capacity …","Creates a new <code>BufReader</code> with the specified buffer capacity.","Writes a buffer into this writer, returning how many bytes …","Writes a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Writes a buffer into this writer, advancing the buffer’s …","Writes a buffer into this writer, advancing the buffer’s …","Writes an 32-bit floating point type in big-endian order …","Writes an 32-bit floating point type in big-endian order …","Writes an 32-bit floating point type in little-endian …","Writes an 32-bit floating point type in little-endian …","Writes an 64-bit floating point type in big-endian order …","Writes an 64-bit floating point type in big-endian order …","Writes an 64-bit floating point type in little-endian …","Writes an 64-bit floating point type in little-endian …","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in little-endian order to …","Writes an signed 128-bit integer in little-endian order to …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in little-endian order to …","Writes a signed 32-bit integer in little-endian order to …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in little-endian order to …","Writes an signed 64-bit integer in little-endian order to …","Writes a signed 8-bit integer to the underlying writer.","Writes a signed 8-bit integer to the underlying writer.","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 8-bit integer to the underlying writer.","Writes an unsigned 8-bit integer to the underlying writer.","Like <code>write</code>, except that it writes from a slice of buffers.","Like <code>write</code>, except that it writes from a slice of buffers.","Returns a reference to the inner writer.","Returns a mutable reference to the inner writer.","Returns a pinned mutable reference to the inner writer.","A TCP socket server, listening for connections.","A TCP socket that has not yet been converted to a <code>TcpStream</code>…","A TCP stream between a local and a remote socket.","Converts or resolves without blocking to one or more …","A UDP socket.","Accepts a new incoming connection from this listener.","","","","","","","","","Reads or writes from the socket using a user-provided IO …","Reads or writes from the socket using a user-provided IO …","Creates a new <code>TcpListener</code>, which will be bound to the …","Binds the socket to the given address.","This function will create a new UDP socket and attempt to …","","","","","","","","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.","Establishes a TCP connection with a peer at the specified …","Opens a TCP connection to a remote host.","Connects the UDP socket setting the default destination …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>RawSocket</code> to a <code>TcpStream</code>.","Creates new <code>TcpListener</code> from a <code>std::net::TcpListener</code>.","Creates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.","Creates new <code>UdpSocket</code> from a previously bound …","Converts a <code>std::net::TcpStream</code> into a <code>TcpSocket</code>. The …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Splits a <code>TcpStream</code> into a read half and a write half, …","Turns a <code>tokio::net::TcpListener</code> into a …","Turns a <code>tokio::net::TcpStream</code> into a <code>std::net::TcpStream</code>.","Turns a <code>tokio::net::UdpSocket</code> into a <code>std::net::UdpSocket</code>.","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.","Gets the value of the <code>SO_KEEPALIVE</code> option on this socket.","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.","Reads the linger duration for this socket by getting the …","Reads the linger duration for this socket by getting the …","Converts the socket into a <code>TcpListener</code>.","Returns the local address that this listener is bound to.","Gets the local address of this socket.","Returns the local address that this stream is bound to.","Returns the local address that this socket is bound to.","Performs a DNS resolution.","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Creates a new socket configured for IPv4.","Creates a new socket configured for IPv6.","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Receives data on the socket from the remote address to …","Receives data from the socket, without removing it from …","Retrieve the sender of the data at the head of the input …","Returns the remote address that this stream is connected …","Returns the socket address of the remote peer this socket …","Polls to accept a new incoming connection to this listener.","","Attempts to receive data on the socket, without removing …","Receives data from the socket, without removing it from …","Retrieve the sender of the data at the head of the input …","","Polls for read readiness.","Attempts to receive a single datagram message on the …","Attempts to receive a single datagram on the socket.","Polls for read/receive readiness.","Attempts to send data on the socket to the remote address …","Polls for write/send readiness.","Attempts to send data on the socket to a given address.","","","Polls for write readiness.","","Waits for the socket to become readable.","Waits for the socket to become readable.","Waits for any of the requested ready states.","Waits for any of the requested ready states.","Receives a single datagram message on the socket from the …","Receives a single datagram message on the socket from the …","Receives a single datagram message on the socket, …","Returns the size of the TCP receive buffer for this socket.","Receives a single datagram message on the socket. On …","Retrieves the value set for <code>SO_REUSEADDR</code> on this socket.","Sends data on the socket to the remote address that the …","Returns the size of the TCP send buffer for this socket.","Sends data on the socket to the given address. On success, …","Sets the value of the <code>SO_BROADCAST</code> option for this socket.","Sets value for the <code>SO_KEEPALIVE</code> option on this socket.","Sets the linger duration of this socket by setting the …","Sets the linger duration of this socket by setting the …","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the size of the TCP receive buffer on this socket.","Allows the socket to bind to an in-use address.","Sets the size of the TCP send buffer on this socket.","Sets the value for the <code>IP_TOS</code> option on this socket.","Sets the value for the <code>IP_TOS</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Splits a <code>TcpStream</code> into a read half and a write half, …","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","TCP utility types.","Gets the value of the <code>IP_TOS</code> option for this socket.","Gets the value of the <code>IP_TOS</code> option for this socket.","Consumes stream, returning the tokio I/O object.","","","Consumes stream, returning the tokio I/O object.","","","Consumes stream, returning the tokio I/O object.","","","","","Tries to read or write from the socket using a …","Tries to read or write from the socket using a …","Tries to receive data on the socket without removing it …","Try to retrieve the sender of the data at the head of the …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to receive a single datagram message on the socket …","Tries to receive data from the stream into the provided …","Tries to receive a single datagram message on the socket. …","Tries to receive a single datagram message on the socket. …","Tries to send data on the socket to the remote address to …","Tries to send data on the socket to the given address, but …","Try to write a buffer to the stream, returning how many …","Tries to write several buffers to the stream, returning …","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","Windows specific network types.","Waits for the socket to become writable.","Waits for the socket to become writable.","Owned read half of a <code>TcpStream</code>, created by <code>into_split</code>.","Owned write half of a <code>TcpStream</code>, created by <code>into_split</code>.","Borrowed read half of a <code>TcpStream</code>, created by <code>split</code>.","Error indicating that two halves were not from the same …","Borrowed write half of a <code>TcpStream</code>, created by <code>split</code>.","","","","","","","","","","","","","","","","","","","","","","Destroys the write half, but don’t close the write half …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the local address that this stream is bound to.","Returns the local address that this stream is bound to.","Returns the local address that this stream is bound to.","Returns the local address that this stream is bound to.","Receives data on the socket from the remote address to …","Receives data on the socket from the remote address to …","Returns the remote address that this stream is connected …","Returns the remote address that this stream is connected …","Returns the remote address that this stream is connected …","Returns the remote address that this stream is connected …","","","Attempts to receive data on the socket, without removing …","Attempt to receive data on the socket, without removing …","","","","","","","","","Waits for the socket to become readable.","Waits for the socket to become readable.","Waits for any of the requested ready states.","Waits for any of the requested ready states.","Waits for any of the requested ready states.","Waits for any of the requested ready states.","Attempts to put the two halves of a <code>TcpStream</code> back …","Attempts to put the two halves of a <code>TcpStream</code> back …","","","","","","","","","","","","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to write a buffer to the stream, returning how many …","Tries to write a buffer to the stream, returning how many …","Tries to write several buffers to the stream, returning …","Tries to write several buffers to the stream, returning …","","","","","","Waits for the socket to become writable.","Waits for the socket to become writable.","Tokio support for Windows named pipes.","Data is written to the pipe as a stream of bytes. The pipe …","The named pipe refers to the client end of a named pipe …","A builder suitable for building and interacting with named …","Data is written to the pipe as a stream of messages. The …","A Windows named pipe client.","A Windows named pipe server.","Indicates the end of a named pipe.","Information about a named pipe.","The pipe mode of a named pipe.","The named pipe refers to the server end of a named pipe …","A builder structure for construct a named pipe with named …","The flow of data in the pipe goes from client to server …","The flow of data in the pipe goes from server to client …","Requests permission to modify the pipe’s system access …","","","","","Reads or writes from the pipe using a user-provided IO …","Reads or writes from the pipe using a user-provided IO …","","","","","","","","","","","","","","","","","","","","","","","Enables a named pipe server process to wait for a client …","Creates the named pipe identified by <code>addr</code> for use as a …","Creates the named pipe identified by <code>addr</code> for use as a …","Disconnects the server end of a named pipe instance from a …","Indicates the end of a named pipe.","","","If you attempt to create multiple instances of a pipe with …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new named pipe server from the specified raw …","Constructs a new named pipe client from the specified raw …","","","The number of bytes to reserve for the input buffer.","The number of bytes to reserve for the input buffer.","Retrieves information about the named pipe the server is …","Retrieves information about the named pipe the client is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum number of instances that can be created for …","The maximum number of instances that can be created for …","Indicates the mode of a named pipe.","Creates a new named pipe builder with the default settings.","Creates a new named pipe builder with the default settings.","Opens the named pipe identified by <code>addr</code>.","Opens the named pipe identified by <code>addr</code>.","The number of bytes to reserve for the output buffer.","The number of bytes to reserve for the output buffer.","The pipe mode.","The pipe mode.","","","","","Polls for read readiness.","Polls for read readiness.","","","","","Polls for write readiness.","Polls for write readiness.","","","If the client supports reading data. This is enabled by …","Waits for the pipe to become readable.","Waits for the pipe to become readable.","Waits for any of the requested ready states.","Waits for any of the requested ready states.","Indicates whether this server can accept remote clients or …","Sets qos flags which are combined with other flags and …","","","","","","","","","","","","","","","","","","","Tries to read or write from the pipe using a user-provided …","Tries to read or write from the pipe using a user-provided …","Tries to read data from the pipe into the provided buffer, …","Tries to read data from the pipe into the provided buffer, …","Tries to read data from the stream into the provided …","Tries to read data from the stream into the provided …","Tries to read data from the pipe into the provided …","Tries to read data from the pipe into the provided …","Tries to write a buffer to the pipe, returning how many …","Tries to write a buffer to the pipe, returning how many …","Tries to write several buffers to the pipe, returning how …","Tries to write several buffers to the pipe, returning how …","","","","","","","","Waits for the pipe to become writable.","Waits for the pipe to become writable.","If the created pipe supports writing data. This is enabled …","Requests permission to modify the pipe’s discretionary …","Requests permission to modify the pipe’s owner.","Representation of a child process spawned onto an event …","The standard error stream for spawned children.","The standard input stream for spawned children.","The standard output stream for spawned children.","This structure mimics the API of <code>std::process::Command</code> …","Adds an argument to pass to the program.","Adds multiple arguments to pass to the program.","","","","","","","Cheaply convert to a <code>&amp;std::process::Command</code> for places …","","","","","","","","","","","Sets the process creation flags to be passed to …","Sets the working directory for the child process.","Inserts or updates an environment variable mapping.","Clears the entire environment map for the child process.","Removes an environment variable mapping.","Adds or updates multiple environment variable mappings.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an asynchronous <code>ChildStdin</code> from a synchronous one.","Creates an asynchronous <code>ChildStdout</code> from a synchronous one.","Creates an asynchronous <code>ChildStderr</code> from a synchronous one.","Returns the OS-assigned process identifier associated with …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into <code>OwnedHandle</code>.","Convert into <code>OwnedHandle</code>.","Convert into <code>OwnedHandle</code>.","","Forces the child to exit.","Controls whether a <code>kill</code> operation should be invoked on a …","Constructs a new <code>Command</code> for launching the program at path …","Executes the command as a child process, waiting for it to …","","","","","","","Append literal text to the command line without any …","Extracts the raw handle of the process associated with …","Executes the command as a child process, returning a …","Attempts to force the child to exit, but does not wait for …","Executes the command as a child process, waiting for it to …","Sets configuration for the child process’s standard …","The handle for reading from the child’s standard error …","Sets configuration for the child process’s standard …","The handle for writing to the child’s standard input …","Sets configuration for the child process’s standard …","The handle for reading from the child’s standard output …","","","","","","","","","","","","","","Attempts to collect the exit status of the child if it has …","","","","","","Waits for the child to exit completely, returning the …","Returns a future that will resolve to an <code>Output</code>, …","Builds Tokio Runtime with custom configuration values.","The flavor that executes all tasks on the current thread.","Runtime context guard.","Handle to the runtime.","The flavor that executes tasks across multiple threads.","The Tokio runtime.","The flavor of a <code>Runtime</code>.","Error returned by <code>try_current</code> when no Runtime has been …","Runs a future to completion on this <code>Handle</code>’s associated …","Runs a future to completion on the Tokio runtime. This is …","","","","","","","","","","","","","Creates the configured <code>Runtime</code>.","","","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>.","","Enables both I/O and time drivers.","Enables the I/O driver.","Enables the time driver.","Enters the runtime context. This allows you to construct …","Enters the runtime context.","","Sets the number of scheduler ticks after which the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sets the number of scheduler ticks after which the …","Returns a handle to the runtime’s spawner.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the call failed because there is currently …","Returns true if the call failed because the Tokio context …","Specifies the limit for additional threads spawned by the …","Enables the I/O driver and configures the max number of …","Creates a new runtime instance with default configuration …","Returns a new builder with the current thread scheduler …","Returns a new builder with the multi thread scheduler …","Executes function <code>f</code> just before a thread is parked (goes …","Executes function <code>f</code> after each thread is started but …","Executes function <code>f</code> before each thread stops.","Executes function <code>f</code> just after a thread unparks (starts …","Returns the flavor of the current <code>Runtime</code>.","Shuts down the runtime, without waiting for any spawned …","Shuts down the runtime, waiting for at most <code>duration</code> for …","Spawns a future onto the Tokio runtime.","Spawns a future onto the Tokio runtime.","Runs the provided function on an executor dedicated to …","Runs the provided function on an executor dedicated to …","Sets a custom timeout for a thread in the blocking pool.","Sets name of threads spawned by the <code>Runtime</code>’s thread …","Sets a function used to generate the name of threads …","Sets the stack size (in bytes) for worker threads.","","","Returns a Handle view over the currently running Runtime","","","","","","","","","","","","","","","","","","","Sets the number of worker threads the <code>Runtime</code> will use.","Completes when a “ctrl-c” notification is sent to the …","Windows-specific types for signal handling.","Represents a listener which receives “ctrl-break” …","Represents a listener which receives “ctrl-c” …","Represents a listener which receives “ctrl-close” …","Represents a listener which receives “ctrl-logoff” …","Represents a listener which receives “ctrl-shutdown” …","","","","","","","","","","","Creates a new listener which receives “ctrl-break” …","Creates a new listener which receives “ctrl-c” …","Creates a new listener which receives “ctrl-close” …","Creates a new listener which receives “ctrl-logoff” …","Creates a new listener which receives “ctrl-shutdown” …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Polls to receive the next signal notification event, …","Polls to receive the next signal notification event, …","Polls to receive the next signal notification event, …","Polls to receive the next signal notification event, …","Polls to receive the next signal notification event, …","Receives the next signal notification event.","Receives the next signal notification event.","Receives the next signal notification event.","Receives the next signal notification event.","Receives the next signal notification event.","","","","","","","","","","","","","","","","Error returned from the <code>Semaphore::acquire</code> function.","The cell was already initialized when <code>OnceCell::set</code> was …","A barrier enables multiple tasks to synchronize the …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all tasks in …","The semaphore has been closed and cannot issue new permits.","The cell is currently being initialized.","The maximum number of permits which a semaphore can hold. …","A handle to a held <code>Mutex</code> that has had a function applied …","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","The semaphore has no available permits.","Notifies a single task to wake up.","A thread-safe cell that can be written to only once.","A owned handle to a held <code>Mutex</code> that has had a function …","An owned handle to a held <code>Mutex</code>.","Owned RAII structure used to release the exclusive write …","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An owned permit from the semaphore.","An asynchronous reader-writer lock.","RAII structure used to release the exclusive write access …","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Counting semaphore performing asynchronous permit …","A permit from the semaphore.","Errors that can be returned from <code>OnceCell::set</code>.","Error returned from the <code>Semaphore::try_acquire</code> function.","Error returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …","Acquires a permit from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires a permit from the semaphore.","Adds <code>n</code> new permits to the semaphore.","Returns the current number of available permits.","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A multi-producer, multi-consumer broadcast queue. Each …","","","","","Closes the semaphore.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new empty <code>OnceCell</code> instance.","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new <code>OnceCell</code> that contains the provided value.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","Atomically downgrades a write lock into a read lock …","Makes a new <code>OwnedRwLockReadGuard</code> for a component of the …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forgets the permit <strong>without</strong> releasing it back to the …","Forgets the permit <strong>without</strong> releasing it back to the …","Decrease a semaphore’s permits by a maximum of <code>n</code>.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Named future types.","Returns a reference to the value currently stored in the …","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the value currently stored …","Gets the value currently in the <code>OnceCell</code>, or initialize it …","Gets the value currently in the <code>OnceCell</code>, or initialize it …","Returns <code>true</code> if the <code>OnceCell</code> currently contains a value, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Consumes the lock, returning the underlying data.","Takes the value from the cell, destroying the cell in the …","Converts this <code>OwnedRwLockWriteGuard</code> into an …","Converts this <code>RwLockWriteGuard</code> into an …","Whether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.","Returns true if the semaphore is closed","Whether <code>SetError</code> is <code>SetError::InitializingError</code>","Returns <code>true</code> if this task from wait is the “leader task…","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>OwnedMappedMutexGuard</code> for a component of the …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>OwnedMappedMutexGuard</code> for a component of the …","Makes a new <code>OwnedRwLockReadGuard</code> for a component of the …","Makes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Makes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Merge two <code>SemaphorePermit</code> instances together, consuming …","Merge two <code>OwnedSemaphorePermit</code> instances together, …","A multi-producer, single-consumer queue for sending values …","Returns a reference to the original <code>Mutex</code>.","Returns a reference to the original <code>Arc&lt;Mutex&gt;</code>.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new empty <code>OnceCell</code> instance.","Creates a new barrier that can block a given number of …","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new <code>OnceCell</code> that contains the provided value, …","Wait for a notification.","Notifies a waiting task.","Notifies all waiting tasks.","A one-shot channel is used for sending a single message …","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","Returns a reference to the original <code>Arc&lt;RwLock&gt;</code>.","Returns a reference to the original <code>Arc&lt;RwLock&gt;</code>.","Returns a reference to the original <code>Arc&lt;RwLock&gt;</code>.","Returns the <code>Semaphore</code> from which this permit was acquired.","Sets the value of the <code>OnceCell</code> to the given value if the …","Takes ownership of the current value, leaving the cell …","","","","","","","","","","","","","","","","","Tries to acquire a permit from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire a permit from the semaphore.","Attempts to make a new <code>OwnedRwLockReadGuard</code> for a …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>OwnedMappedMutexGuard</code> for a …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>OwnedMappedMutexGuard</code> for a …","Attempts to make a new <code>OwnedRwLockReadGuard</code> for a …","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","","","","","","","","Does not resolve until all tasks have rendezvoused here.","A multi-producer, multi-consumer channel that only retains …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Receiving-half of the <code>broadcast</code> channel.","Sending-half of the <code>broadcast</code> channel.","Blocking receive to call outside of asynchronous contexts.","","","","","Create a bounded, multi-producer, multi-consumer channel …","","","","","Broadcast error types","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if there are no queued values.","Returns true if there aren’t any messages in the channel …","Returns the number of queued values.","Returns the number of messages that were sent into the …","Creates the sending-half of the <code>broadcast</code> channel.","Returns the number of active receivers.","Receives the next value for this receiver.","Re-subscribes to the channel starting from the current …","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if receivers belong to the same channel.","Attempts to send a value to all active <code>Receiver</code> handles, …","Creates a new <code>Receiver</code> handle that will receive values …","","","","","","Attempts to return a pending value on this receiver …","","","There are no more active senders implying no further …","There are no more active senders implying no further …","The channel is currently empty. There are still active …","The receiver lagged too far behind. Attempting to receive …","The receiver lagged too far behind and has been forcibly …","An error returned from the <code>recv</code> function on a <code>Receiver</code>.","Error returned by the <code>send</code> function on a <code>Sender</code>.","An error returned from the <code>try_recv</code> function on a <code>Receiver</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Future returned from <code>Notify::notified()</code>.","","","","Adds this future to the list of futures that are ready to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Owned permit to send one value into the channel.","Permits to send one value into the channel.","An <code>Iterator</code> of <code>Permit</code> that can be used to hold <code>n</code> slots in …","Receives values from the associated <code>Sender</code>.","Sends values to the associated <code>Receiver</code>.","Receive values from the associated <code>UnboundedSender</code>.","Send values to the associated <code>UnboundedReceiver</code>.","A sender that does not prevent the channel from being …","An unbounded sender that does not prevent the channel from …","Blocking receive to call outside of asynchronous contexts.","Blocking receive to call outside of asynchronous contexts.","Blocking send to call outside of asynchronous contexts.","","","","","","","","","","","","","","","","","","","Returns the current capacity of the channel.","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel without dropping it.","Closes the receiving half of a channel, without dropping …","Completes when the receiver has dropped.","Completes when the receiver has dropped.","Converts the <code>Sender</code> to a <code>WeakSender</code> that does not count …","Converts the <code>UnboundedSender</code> to a <code>WeakUnboundedSender</code> that …","","","","","","Channel error types.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the channel has been closed. This happens when …","Checks if a channel is closed.","Checks if the channel has been closed. This happens when …","Checks if a channel is closed.","Checks if a channel is empty.","Checks if a channel is empty.","Returns the number of messages in the channel.","Returns the number of messages in the channel.","Returns the maximum buffer capacity of the channel.","","Polls to receive the next message on this channel.","Polls to receive the next message on this channel.","Polls to receive multiple messages on this channel, …","Polls to receive multiple messages on this channel, …","Receives the next value for this receiver.","Receives the next value for this receiver.","Receives the next values for this receiver and extends …","Receives the next values for this receiver and extends …","Releases the reserved capacity <em>without</em> sending a message, …","Waits for channel capacity. Once capacity to send one …","Waits for channel capacity. Once capacity to send <code>n</code> …","Waits for channel capacity, moving the <code>Sender</code> and …","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if senders belong to the same channel.","Sends a value, waiting until there is capacity.","Sends a value using the reserved capacity.","Sends a value using the reserved capacity.","Attempts to send a message on this <code>UnboundedSender</code> without …","Sends a value, waiting until there is capacity, but only …","","Returns the number of <code>Sender</code> handles.","Returns the number of <code>Sender</code> handles.","Returns the number of <code>UnboundedSender</code> handles.","Returns the number of <code>UnboundedSender</code> handles.","","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next value for this receiver.","Tries to receive the next value for this receiver.","Tries to acquire a slot in the channel without waiting for …","Tries to acquire <code>n</code> slots in the channel without waiting …","Tries to acquire a slot in the channel without waiting for …","Attempts to immediately send a message on this <code>Sender</code>","","","","","","","","","","Creates an unbounded mpsc channel for communicating …","Tries to convert a <code>WeakSender</code> into a <code>Sender</code>. This will …","Tries to convert a <code>WeakUnboundedSender</code> into an …","Returns the number of <code>WeakSender</code> handles.","Returns the number of <code>WeakSender</code> handles.","Returns the number of <code>WeakUnboundedSender</code> handles.","Returns the number of <code>WeakUnboundedSender</code> handles.","The receive half of the channel was explicitly closed or …","The receive half of the channel was explicitly closed or …","The <strong>channel</strong>’s sending half has become disconnected, and …","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …","The data could not be sent on the channel because the …","Error returned by the <code>Sender</code>.","Error returned by <code>Sender::send_timeout</code>].","The data could not be sent on the channel because the …","Error returned by <code>try_recv</code>.","This enumeration is the list of the possible error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Receives a value from the associated <code>Sender</code>.","Sends a value to the associated <code>Receiver</code>.","Blocking receive to call outside of asynchronous contexts.","","","","","Creates a new one-shot channel for sending single values …","Prevents the associated <code>Sender</code> handle from sending a value.","Waits for the associated <code>Receiver</code> handle to close.","","","<code>Oneshot</code> error types.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the associated <code>Receiver</code> handle has been …","","Checks whether the <code>oneshot</code> channel has been closed, and if …","Attempts to send a value on this channel, returning it …","","","","","Attempts to receive a value.","","","The send half of the channel was dropped without sending a …","The send half of the channel has not yet sent a value.","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Receives values from the associated <code>Sender</code>.","Returns a reference to the inner value.","Sends values to the associated <code>Receiver</code>.","Returns a reference to the most recently sent value.","","","Returns a reference to the most recently sent value","","Returns a reference to the most recently sent value and …","","","","Waits for a change notification, then marks the newest …","Creates a new watch channel, returning the “send” and …","","","","","Completes when all receivers have dropped.","","","","Watch error types.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Checks if this channel contains a message that this …","Indicates if the borrowed value is considered as <em>changed</em> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the channel has been closed. This happens when …","Marks the state as changed.","Marks the state as unchanged.","Creates the sending-half of the <code>watch</code> channel.","Returns the number of receivers that currently exist.","Returns <code>true</code> if receivers belong to the same channel.","Sends a new value via the channel, notifying all receivers.","Modifies the watched value <strong>conditionally</strong> in-place, …","Modifies the watched value <strong>unconditionally</strong> in-place, …","Sends a new value via the channel, notifying all receivers …","Creates a new <code>Receiver</code> connected to this <code>Sender</code>.","","","","","","","","","","","","Waits for a value that satisfies the provided condition.","Error produced when receiving a change notification.","Error produced when sending a value fails.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An owned permission to abort a spawned task, without …","Task failed to execute to completion.","An owned permission to join on a task (await its …","A collection of tasks spawned on a Tokio runtime.","Context guard for <code>LocalSet</code>","A key for task-local data.","A set of tasks which are executed on the same thread.","Future for the <code>unconstrained</code> method.","Abort the task associated with the handle.","Abort the task associated with the handle.","Aborts all tasks on this <code>JoinSet</code>.","Returns a new <code>AbortHandle</code> that can be used to remotely …","Runs the provided blocking function on the current thread …","Runs a future to completion on the provided runtime, …","","","","","","","","","","","","","","","","","","","Removes all tasks from this <code>JoinSet</code> without aborting them.","","","","","","Enters the context of this <code>LocalSet</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Task-related futures.","Returns a copy of the task-local value if the task-local …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Consumes the join error, returning the object with which …","Returns true if the error was caused by the task being …","Returns whether the <code>JoinSet</code> is empty.","Checks if the task associated with this <code>AbortHandle</code> has …","Checks if the task associated with this <code>JoinHandle</code> has …","Returns true if the error was caused by the task panicking.","Waits until one of the tasks in the set completes and …","Returns the number of tasks currently in the <code>JoinSet</code>.","Create a new <code>JoinSet</code>.","Returns a new local task set.","","","","Polls for one of the tasks in the set to complete.","Runs a future to completion on the local set, returning …","Sets a value <code>T</code> as the task-local value for the future <code>F</code>.","Aborts all tasks and waits for them to finish shutting …","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","Spawn the provided task on the <code>JoinSet</code>, returning an …","Runs the provided closure on a thread where blocking is …","Spawn the blocking code on the blocking threadpool and …","Spawn the blocking code on the blocking threadpool of the …","Spawns a <code>!Send</code> future on the current <code>LocalSet</code>.","Spawn the provided task on the current <code>LocalSet</code> and store …","Spawns a <code>!Send</code> task onto the local task set.","Spawn the provided task on the provided <code>LocalSet</code> and store …","Spawn the provided task on the provided runtime and store …","Sets a value <code>T</code> as the task-local value for the closure <code>F</code>.","","","","","","","","","","","","","","","","","","Consumes the join error, returning the object with which …","Tries to join one of the tasks in the set that has …","Accesses the current task-local and runs the provided …","","","","","","","","","Turn off cooperative scheduling for a future. The future …","Accesses the current task-local and runs the provided …","Yields execution back to the Tokio runtime.","A future that sets a value <code>T</code> of a task local for the …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Returns the value stored in the task local by this …","","","","Ticks as fast as possible until caught up.","Tick at multiples of <code>period</code> from when <code>tick</code> was called, …","","A measurement of a monotonically nondecreasing clock. …","Interval returned by <code>interval</code> and <code>interval_at</code>.","Defines the behavior of an <code>Interval</code> when it misses a tick.","Skips missed ticks and tick on the next multiple of <code>period</code> …","Future returned by <code>sleep</code> and <code>sleep_until</code>.","Future returned by <code>timeout</code> and <code>timeout_at</code>.","","","","","","","","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Returns the amount of time elapsed from another instant to …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","","","","","","Returns the instant at which the future will complete.","Returns <code>MissedTickBehavior::Burst</code>.","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed since this instant was …","","","Time error types.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.","Gets a mutable reference to the underlying value in this …","Gets a reference to the underlying value in this timeout.","","Creates new <code>Interval</code> that yields with interval of <code>period</code>. …","Creates new <code>Interval</code> that yields with interval of <code>period</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes this timeout, returning the underlying value.","Convert the value into a <code>std::time::Instant</code>.","Returns <code>true</code> if <code>Sleep</code> has elapsed.","Returns the <code>MissedTickBehavior</code> strategy currently being …","Returns an instant corresponding to “now”.","","Returns the period of the interval.","","","Polls for the next instant in the interval to be reached.","Resets the interval to complete one period after the …","Resets the <code>Sleep</code> instance to a new deadline.","Resets the interval after the specified <code>std::time::Duration</code>…","Resets the interval to a <code>crate::time::Instant</code> deadline.","Resets the interval immediately.","Returns the amount of time elapsed from another instant to …","Sets the <code>MissedTickBehavior</code> strategy that should be used.","Waits until <code>duration</code> has elapsed.","Waits until <code>deadline</code> is reached.","","","","Completes when the next instant in the interval has been …","Requires a <code>Future</code> to complete before the specified …","Requires a <code>Future</code> to complete before the specified instant …","","","","","","","","","","","","","","","","","","Errors returned by <code>Timeout</code>.","Errors encountered by the timer implementation.","Creates an error representing a timer at capacity.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error representing a misconfigured timer.","Returns <code>true</code> if the error was caused by the timer being at …","Returns <code>true</code> if the error was caused by the timer being …","Returns <code>true</code> if the error was caused by the timer being …","Creates an error representing a shutdown timer.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,4,4,1,4,15,1,21,16,4,15,1,21,16,0,1,1,0,4,15,1,0,0,1,1,15,1,16,16,4,15,1,21,16,4,4,15,1,1,21,16,4,4,0,4,15,1,21,16,4,4,0,4,16,15,1,21,4,1,4,16,4,4,21,4,4,4,4,0,1,0,0,0,15,0,0,0,0,1,4,4,0,4,1,4,0,0,0,4,4,1,1,4,0,4,15,1,21,16,4,15,1,21,16,4,4,15,1,21,16,0,1,43,0,0,0,0,0,0,0,0,0,0,0,0,43,39,43,0,0,0,0,0,0,39,43,43,0,0,0,0,0,0,0,0,0,0,0,0,39,43,43,0,39,29,29,40,41,42,40,41,42,29,43,39,43,39,43,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,44,46,29,48,48,29,29,39,43,39,43,43,51,52,52,53,54,44,55,46,0,0,0,59,0,0,39,43,52,52,29,29,60,60,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,55,55,46,54,68,44,55,46,54,44,55,46,54,68,44,55,46,29,29,29,29,29,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,64,54,68,44,55,46,43,39,43,61,63,43,39,43,39,43,43,45,45,63,64,53,59,44,55,46,0,54,52,52,29,44,55,46,68,67,43,70,44,55,46,51,53,54,44,55,46,45,40,42,63,64,53,59,66,44,55,46,68,67,47,41,61,64,53,59,65,54,44,55,46,45,40,42,63,64,53,59,66,44,55,46,45,40,42,63,64,53,59,66,44,55,46,45,45,63,64,53,59,44,55,46,29,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,52,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,52,52,64,64,64,29,29,39,0,72,72,72,72,29,54,60,60,0,0,52,52,70,44,55,46,0,0,0,72,72,43,29,48,48,39,43,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,29,39,43,40,41,42,61,63,64,53,59,65,66,54,67,68,44,55,46,29,29,61,44,55,46,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,64,64,64,0,0,0,0,0,83,83,87,84,88,83,87,84,88,84,88,83,87,88,83,87,84,88,83,87,84,88,88,87,84,88,83,87,84,88,83,87,84,88,87,83,84,88,87,83,87,84,88,87,84,83,84,88,84,88,88,87,88,88,87,84,87,83,87,84,88,0,88,88,88,87,87,87,84,84,88,88,84,88,83,84,84,88,88,84,84,88,88,88,88,88,88,84,84,84,84,84,88,84,88,88,88,88,87,88,87,88,87,88,88,87,87,84,88,88,88,87,84,87,87,87,87,88,83,84,88,84,87,84,88,0,87,88,83,83,87,84,84,88,88,83,87,84,88,84,88,88,88,84,84,84,88,88,88,88,88,88,84,84,83,84,88,83,87,84,88,0,84,88,0,0,0,0,0,103,104,96,97,103,104,96,97,107,103,104,96,97,107,97,103,104,96,97,107,107,97,103,104,96,97,107,103,104,96,97,107,104,97,103,104,96,97,103,96,103,104,96,97,104,97,103,96,103,96,104,97,104,97,104,97,103,96,103,104,96,97,96,97,107,103,104,96,97,107,103,104,96,97,107,103,96,103,96,103,96,104,97,104,97,103,104,96,97,107,104,97,0,112,113,0,112,0,0,0,0,0,113,0,108,108,108,109,110,109,110,109,110,109,110,108,111,112,113,116,109,110,108,111,112,113,116,108,111,112,113,108,111,112,113,109,108,108,109,116,112,113,108,109,110,108,111,112,113,116,109,110,108,111,112,113,116,109,110,112,113,108,116,109,110,109,110,108,111,112,113,116,108,116,116,108,111,111,111,108,116,108,111,109,110,109,110,109,110,109,110,109,110,109,110,109,110,111,109,110,109,110,108,111,108,111,112,113,109,110,108,111,112,113,116,109,110,108,111,112,113,116,109,110,109,110,109,110,109,110,109,110,109,110,109,110,108,111,112,113,116,109,110,111,108,108,0,0,0,0,0,118,118,120,121,122,120,121,122,118,118,124,120,121,122,118,124,120,121,122,118,118,118,118,118,118,118,124,120,121,122,118,118,124,120,121,122,120,121,122,124,118,124,120,121,122,120,121,122,120,124,118,118,118,120,121,122,120,120,120,118,124,118,124,118,118,124,118,124,118,124,118,124,120,121,122,118,124,120,120,121,121,122,122,124,118,124,120,121,122,124,124,0,138,0,0,138,0,0,0,134,135,136,134,137,139,135,138,136,134,137,139,135,138,136,134,134,134,135,136,136,136,134,135,138,136,136,134,137,139,139,135,138,136,134,137,139,135,138,136,135,136,134,137,139,135,138,139,139,136,136,135,136,136,136,136,136,136,134,135,135,134,135,134,135,136,136,136,136,134,139,134,136,134,137,139,135,138,136,134,137,139,135,138,136,134,137,139,135,138,136,0,0,0,0,0,0,0,145,144,146,148,147,145,144,146,148,147,0,0,0,0,0,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,145,144,146,148,147,0,173,0,0,172,173,149,0,0,0,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,149,149,149,149,149,154,154,157,157,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,0,160,162,160,162,149,154,157,160,163,149,160,157,154,157,160,163,155,156,165,166,167,168,169,158,159,170,155,156,165,166,168,169,159,170,168,159,168,159,160,155,156,165,166,150,153,167,168,169,158,159,170,160,172,173,154,157,160,174,162,155,155,156,156,165,165,166,166,176,176,163,172,172,151,151,149,150,153,167,167,168,168,169,169,158,158,159,159,170,170,173,173,150,153,149,154,154,154,157,157,157,160,160,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,0,160,154,157,160,160,160,160,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,154,157,160,168,159,173,149,173,162,154,154,155,156,165,166,167,168,169,158,159,170,150,153,0,155,156,154,157,160,174,163,149,160,163,163,163,0,157,157,167,168,169,153,160,160,160,162,155,156,165,166,176,172,151,167,168,169,158,159,170,173,149,149,149,149,168,159,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,154,154,155,156,165,166,167,168,169,158,159,170,157,157,157,157,154,157,160,174,162,155,156,165,166,176,163,172,151,149,150,153,167,168,169,158,159,170,173,174,0,157,157,157,0,0,179,181,179,181,179,0,181,181,181,179,0,181,179,181,179,181,179,181,179,181,179,181,181,179,179,181,179,181,181,181,181,179,181,179,179,181,179,180,183,183,180,183,0,0,0,182,180,183,182,180,183,180,183,180,183,180,183,182,182,180,180,183,183,182,180,183,182,180,183,180,183,182,180,183,182,180,183,182,180,183,182,180,183,0,178,178,178,178,178,178,178,178,178,178,178,178,0,0,0,0,0,0,0,0,0,184,185,186,186,188,191,192,193,184,189,190,185,186,188,191,192,193,184,189,190,185,186,0,186,188,189,190,186,188,189,190,184,185,186,189,186,189,188,191,192,193,190,0,186,188,191,192,193,184,189,190,185,186,188,191,192,193,184,189,190,185,186,188,191,192,193,184,189,190,185,192,186,184,189,185,184,185,184,185,186,192,184,185,184,185,184,185,184,185,193,186,186,186,186,189,186,191,193,189,186,192,186,188,189,190,186,188,189,190,186,188,191,192,193,184,189,190,185,186,188,191,192,193,184,189,190,185,184,185,186,186,186,186,186,188,191,192,193,184,189,190,185,0,188,190,186,188,189,190,196,194,195,195,196,0,0,194,0,0,187,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,187,187,196,196,195,195,194,194,187,196,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,187,196,195,194,0,0,197,199,197,199,197,0,197,199,199,197,0,199,197,199,197,199,197,197,199,197,199,199,199,197,199,197,197,199,197,200,200,0,0,198,200,198,200,198,200,198,200,198,200,198,198,200,200,198,200,198,200,198,200,198,200,198,200,198,200,198,200,0,0,0,201,201,203,203,202,201,201,203,202,201,0,201,203,201,203,203,202,201,203,0,201,203,202,201,203,202,201,202,201,203,202,203,201,201,203,203,201,203,203,203,203,203,201,203,201,203,202,201,203,202,201,203,202,201,0,0,205,204,205,204,205,204,205,204,205,205,205,204,204,205,204,205,204,205,204,205,204,205,204,205,204,205,204,0,0,0,0,0,0,0,0,206,143,207,143,0,208,206,210,143,209,211,207,208,215,206,210,143,209,211,207,208,215,207,208,207,206,143,209,207,208,208,206,210,210,143,209,211,207,208,206,210,143,209,211,207,208,215,207,0,211,206,210,143,209,211,207,208,215,143,208,215,210,210,207,206,143,210,207,207,207,208,143,208,215,207,208,211,207,0,207,0,207,207,0,207,208,207,207,211,210,206,210,143,209,211,207,208,215,206,210,143,209,211,207,208,215,210,207,211,206,210,143,209,211,207,208,215,0,211,0,0,216,216,216,216,216,216,216,216,216,216,216,216,218,218,0,0,0,0,218,0,0,217,217,217,218,220,221,219,217,218,220,221,219,217,217,217,217,218,217,218,217,219,218,217,217,217,218,0,217,218,220,221,219,217,217,218,220,221,219,217,221,221,217,0,0,217,218,220,221,219,221,219,221,217,219,220,217,217,220,221,219,220,220,219,220,220,220,217,220,0,0,217,217,217,220,0,0,217,218,217,218,220,221,219,217,218,220,221,219,217,218,220,221,219,0,0,223,223,224,223,224,223,223,224,223,223,224,224,223,224,223,224,223,223,223,223,223,223,223,224,223,224,223,224,223,224],"f":"```````````````````````{{bd}b}{{bf}b}{hj}{hl}3{ce{}{}}000000000{c{{A`{n}}}{{Ad{Ab}}}}{bb}{{ce}Af{}{}}{{ce}{{Al{AhAj}}}{{Ad{Ab}}}{{Ad{Ab}}}}{c{{A`{h}}}{{Ad{Ab}}}}{{Anc}{{A`{Af}}}{{Ad{Ab}}}}9{c{{A`{Af}}}{{Ad{Ab}}}}0:;{{}An}{{}b}{B`Bb}{B`{{A`{Bd}}}}{{hBf}Bh}{{AnBf}Bh}{{bBf}Bh}{{BjBf}Bh}{{B`Bf}Bh}{Blh}{cc{}}00{Bnb}11{lh}3{{ce}{{A`{Af}}}{{Ad{Ab}}}{{Ad{Ab}}}}{ce{}{}}0000{hBl}{hf}{c{{A`{C`}}}{{Ad{Ab}}}}{h{{A`{C`}}}}{B`{{A`{C`}}}}{{}An}{{}b}{Bj{{A`{{Cb{B`}}}}}}{c{{A`{h}}}{{Ad{Ab}}}}{{bc}{{A`{h}}}{{Ad{Ab}}}}3{B`n}{{{Cd{h}}Cf}{{Ch{{A`{Ah}}}}}}{{{Cd{h}}Cf}{{Ch{{Al{AfAj}}}}}}{{BjCf}{{Ch{{A`{{Cb{B`}}}}}}}}{{{Cd{h}}CfCj}{{Ch{{A`{Af}}}}}}2{{{Cd{h}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{h}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}}{c{{A`{{Dd{Cl}}}}}{{Ad{Ab}}}}{{bf}b}{c{{A`{Bj}}}{{Ad{Ab}}}}{c{{A`{n}}}{{Ad{Ab}}}}{c{{A`{Df}}}{{Ad{Ab}}}}{{Anf}An}{c{{A`{Af}}}{{Ad{Ab}}}}00{{ce}{{A`{Af}}}{{Ad{Ab}}}{{Ad{Ab}}}}{{bd}b}{{hAh}{{A`{Af}}}}{{hD`}Af}{{cDh}{{A`{Af}}}{{Ad{Ab}}}}{{hDh}{{A`{Af}}}}4{{{Cd{h}}Dj}{{A`{Af}}}}66{c{{A`{C`}}}{{Ad{Ab}}}}{h{{A`{Af}}}}0{ce{}{}}?{h{{A`{h}}}}{c{{A`{f}}}{{Ad{Ab}}}}{c{{Al{e}}}{}{}}000000000{h{{Al{Blh}}}}{cDl{}}0000{{ce}{{A`{Af}}}{{Ad{Ab}}}{{Ad{{Cn{Cl}}}}}}{{bf}b}`````````````````````````````````````````{{DnDn}Dn}{{CjD`}Af}0{E`j}{Ebj}{Edj}{E`l}{Ebl}{Edl}6{{EfEf}Ef}80{{DnDn}Af}{{EfEf}Af}{ce{}{}}0000000000000000000000000000000000000{{{Eh{c}}}{{Cn{Cl}}}Ej}{{{El{c}}}{{Cn{Cl}}}En}{CjD`}{{F`c}{{`{F`c}}}En}0{CjFb}{CjAf}{DnDn}{EfEf}{{ce}Af{}{}}0{{EfEf}Fd}{{{Cd{Ff}}D`}Af}{{FhD`}Af}0{{{Cd{Fj}}D`}Af}{{{Cd{{Fl{c}}}}D`}AfFf}{{{Cd{{Eh{c}}}}D`}Af{EjFf}}{{{Cd{{Fn{c}}}}D`}Af{EnEj}}{{{Cd{{El{c}}}}D`}AfEn}{{ce}{{A`{Ah}}}{EnG`Gb}{EjG`Gb}}{{ce}{{Al{{Gd{AhAh}}Aj}}}{EnEjG`Gb}{EnEjG`Gb}}{{ce}{{A`{Ah}}}{FfG`Gb}{EjG`Gb}}{GfAf}{D`{{Gd{GfGf}}}}{{}Fj}{{DnDn}f}{{EfEf}f}{Fh{{`{Fh}}}}0{Cj{{Cn{Cl}}}}0{Gh{{`{Gh}}}}0{{CjBf}Bh}{{DnBf}Bh}{{EfBf}Bh}{{E`Bf}Bh}{{EbBf}Bh}{{EdBf}Bh}{{{Gj{c}}Bf}BhGl}{{{Gn{c}}Bf}BhGl}{{{H`{ce}}Bf}BhGlGl}{{FjBf}Bh}{{GfBf}Bh}{{HbBf}Bh}{{HdBf}Bh}{{{Fl{c}}Bf}BhGl}{{{Hf{c}}Bf}BhGl}{{{Hh{c}}Bf}BhGl}{{{Eh{c}}Bf}BhGl}{{{Fn{c}}Bf}BhGl}{{{El{c}}Bf}BhGl}{cc{}}0000000000000000{{{Eh{{El{c}}}}}{{Fn{c}}}{}}{{{El{{Eh{c}}}}}{{Fn{c}}}{}}22{{{Fl{c}}}cEn}{{{Hh{c}}}c{FfG`}}{{{Eh{c}}}cEj}{{{Fn{c}}}c{EnEj}}{{{El{c}}}cEn}{{{Cd{{Fl{c}}}}}{{Cd{c}}}En}{{{Cd{{Eh{c}}}}}{{Cd{c}}}Ej}{{{Cd{{Fn{c}}}}}{{Cd{c}}}{EnEj}}{{{Cd{{El{c}}}}}{{Cd{c}}}En}87654{Cj{{Cn{Cl}}}}{{CjD`}{{Cn{Cl}}}}11{Cj{{Cn{{Hj{Cl}}}}}}{ce{}{}}000000000000000000{{{H`{ce}}}{{Gd{ce}}}EnEj}=<;:9{Eff}{Dnf}1{{{Gj{c}}{Gn{c}}}f{}}{{{Gn{c}}{Gj{c}}}f{}}323233{Ejf}0{{{Gn{c}}}fEj}{{{H`{ce}}}f{}Ej}{Fjf}{Gff}{{{Eh{c}}}fEj}{{{Fn{c}}}f{EnEj}}{{{El{c}}}f{EnEj}}{{ce}{{H`{ce}}}EnEj}{{{Fl{c}}}AhEn}{Fh{{Hh{Fh}}}}0{{{Cn{Cl}}}Cj}{c{{Eh{c}}}Ej}{c{{Fn{c}}}{EnEj}}{c{{El{c}}}En}{{{Hh{c}}}{{A`{{Cb{Df}}}}}{FfG`}}{{{Hf{c}}}{{A`{{Cb{{Dd{Cl}}}}}}}{FfG`}}{{EfEf}{{Cb{Fd}}}}{{{Cd{Hl}}Cf}{{Ch{{A`{Ah}}}}}}{{{Cd{{Eh{c}}}}Cf}{{Ch{{A`{Ah}}}}}{EjHl}}{{{Cd{{Fn{c}}}}Cf}{{Ch{{A`{Ah}}}}}{EnEjHl}}{{{Cd{{El{c}}}}Cf}{{Ch{{A`{Ah}}}}}{EnHl}}{{{Cd{Ff}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}}{{{Cd{Fj}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}}{{{Cd{{Fl{c}}}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}Ff}{{{Cd{{Eh{c}}}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}{EjFf}}{{{Cd{{Fn{c}}}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}{EnEj}}{{{Cd{{El{c}}}}Cf}{{Ch{{A`{{Cn{Cl}}}}}}}En}{{{Cd{Ej}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{E`}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{Ed}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{{Gn{c}}}}Cf}{{Ch{{Al{AfAj}}}}}Ej}{{{Cd{{H`{ce}}}}Cf}{{Ch{{Al{AfAj}}}}}{}Ej}{{{Cd{Fj}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{Gf}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Hd}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{{Eh{c}}}}Cf}{{Ch{{A`{Af}}}}}Ej}{{{Cd{{Fn{c}}}}Cf}{{Ch{{A`{Af}}}}}{EnEj}}{{{Cd{{El{c}}}}Cf}{{Ch{{A`{Af}}}}}{EnEj}}{{{Cd{{Hh{c}}}}Cf}{{Ch{{A`{{Cb{Df}}}}}}}Ff}{{{Cd{{Hf{c}}}}Cf}{{Ch{{A`{{Cb{{Dd{Cl}}}}}}}}}Ff}{{{Cd{En}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{Eb}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{{Gj{c}}}}CfCj}{{Ch{{A`{Af}}}}}En}{{{Cd{{H`{ce}}}}CfCj}{{Ch{{Al{AfAj}}}}}En{}}{{{Cd{Fj}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{Gf}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{Hb}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{{Fl{c}}}}CfCj}{{Ch{{Al{AfAj}}}}}En}{{{Cd{{Eh{c}}}}CfCj}{{Ch{{A`{Af}}}}}{EjEn}}{{{Cd{{Fn{c}}}}CfCj}{{Ch{{A`{Af}}}}}{EnEj}}{{{Cd{{El{c}}}}CfCj}{{Ch{{A`{Af}}}}}En}{{{Cd{Ej}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{E`}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{Ed}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{{Gn{c}}}}Cf}{{Ch{{Al{AfAj}}}}}Ej}{{{Cd{{H`{ce}}}}Cf}{{Ch{{Al{AfAj}}}}}{}Ej}{{{Cd{Fj}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{Gf}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Hd}}Cf}{{Ch{{Al{AfAj}}}}}}{{{Cd{{Eh{c}}}}Cf}{{Ch{{A`{Af}}}}}Ej}{{{Cd{{Fn{c}}}}Cf}{{Ch{{A`{Af}}}}}{EnEj}}{{{Cd{{El{c}}}}Cf}{{Ch{{A`{Af}}}}}{EnEj}}{{{Cd{Ej}}Cf{Cn{Cl}}}{{Ch{{Al{D`Aj}}}}}}{{{Cd{E`}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{Ed}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{{Gn{c}}}}Cf{Cn{Cl}}}{{Ch{{Al{D`Aj}}}}}Ej}{{{Cd{{H`{ce}}}}Cf{Cn{Cl}}}{{Ch{{Al{D`Aj}}}}}{}Ej}{{{Cd{Fj}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{Gf}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{Hd}}Cf{Cn{Cl}}}{{Ch{{Al{D`Aj}}}}}}{{{Cd{{Eh{c}}}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}Ej}{{{Cd{{Fn{c}}}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}{EnEj}}{{{Cd{{El{c}}}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}{EnEj}}{{{Cd{Ej}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}}0{{{Cd{{Gn{c}}}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}Ej}{{{Cd{{H`{ce}}}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}{}Ej}{{{Cd{Fj}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}}{{{Cd{Gf}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}}{{{Cd{{Eh{c}}}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}Ej}{{{Cd{{Fn{c}}}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}{EnEj}}{{{Cd{{El{c}}}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}{EnEj}}{{Cj{Cn{Cl}}}Af}{{F`{Cn{Cl}}}{{`{F`}}}}0{{F`c}{{`{F`c}}}{HnGb}}011{F`{{`{F`}}}}0000000000000000000000000{{FhDf}{{`{Fh}}}}0{{F`{Dd{Cl}}}{{`{F`}}}}0{{F`Df}{{`{F`}}}}0333333333333333333{{FhCl{Dd{Cl}}}{{`{Fh}}}}0{{{H`{ce}}}cEnEj}0{{{Cd{{H`{ce}}}}}{{Cd{c}}}EnEj}{CjD`}0{{DnDn}{{Cb{Dn}}}}{ClHb}{I`{{`{I`}}}}0{{I`Dj}{{`{I`}}}}0{{CjD`}Af}{{{Fl{c}}Ah}AfEn}{Gh{{`{Gh}}}}0{{}Hd}{c{{Gd{{Gj{c}}{Gn{c}}}}}{EnEj}}{{FhCl}{{Hf{Fh}}}}0{{{Cd{Hl}}Dj}{{A`{Af}}}}{{{Cd{{Eh{c}}}}Dj}{{A`{Af}}}{EjHl}}{{{Cd{{Fn{c}}}}Dj}{{A`{Af}}}{EnEjHl}}{{{Cd{{El{c}}}}Dj}{{A`{Af}}}{EnHl}}{{}E`}{{}Eb}{{}Ed}>>{{EfEf}Ef}{{CjD`}Cj}{{F`Ah}{{Fl{F`}}}}0{ce{}{}}0{c{{Al{e}}}{}{}}0000000000000000000000000000000000000{cDl{}}000000000000000000{Cj{{Cn{{Hj{Cl}}}}}}{{{Cn{{Hj{Cl}}}}}Cj}{{{Gj{c}}{Gn{c}}}cG`}{{D`c}{{Eh{c}}}Ej}{{D`D`c}{{Fn{c}}}{EnEj}}{{D`c}{{El{c}}}En}{{Gh{Cn{Cl}}}{{`{Gh}}}}000{{Ghc}{{`{Ghc}}}Ib}000{{GhId}{{`{Gh}}}}000{{GhIf}{{`{Gh}}}}000{{GhIh}{{`{Gh}}}}000{{GhIj}{{`{Gh}}}}000{{GhIl}{{`{Gh}}}}000{{GhIn}{{`{Gh}}}}000{{GhJ`}{{`{Gh}}}}0{{GhJb}{{`{Gh}}}}000{{GhJd}{{`{Gh}}}}000{{Ghd}{{`{Gh}}}}000{{GhAh}{{`{Gh}}}}000{{GhCl}{{`{Gh}}}}0{{Gh{Cn{Db}}}{{`{Gh}}}}0{{{H`{ce}}}eEnEj}0{{{Cd{{H`{ce}}}}}{{Cd{e}}}EnEj}`````{Jf{{A`{{Gd{JhJj}}}}}}{JfJl}{JnJl}{JhJl}{K`Jl}{JfKb}{JnKb}{JhKb}{K`Kb}{{JhDne}{{A`{c}}}{}{{Kf{}{{Kd{{A`{c}}}}}}}}{{K`Dne}{{A`{c}}}{}{{Kf{}{{Kd{{A`{c}}}}}}}}{c{{A`{Jf}}}Kh}{{JnJj}{{A`{Af}}}}{c{{A`{K`}}}Kh}{ce{}{}}0000000{K`{{A`{f}}}}{{JnJj}{{A`{Jh}}}}{c{{A`{Jh}}}Kh}{{K`c}{{A`{Af}}}Kh}{{JfBf}Bh}{{JnBf}Bh}{{JhBf}Bh}{{K`Bf}Bh}{cc{}}000{JlJn}{Kj{{A`{Jf}}}}{Kl{{A`{Jh}}}}{Kn{{A`{K`}}}}{KlJn}>>>>{JnJl}{Jh{{Gd{L`Lb}}}}{Jf{{A`{Kj}}}}{Jh{{A`{Kl}}}}{K`{{A`{Kn}}}}{Jhf}{{K`LdLd}{{A`{Af}}}}{{K`Lfd}{{A`{Af}}}}{Jn{{A`{f}}}}21{Jn{{A`{{Cb{Lh}}}}}}{Jh{{A`{{Cb{Lh}}}}}}{{Jnd}{{A`{Jf}}}}{Jf{{A`{Jj}}}}{Jn{{A`{Jj}}}}{Jh{{A`{Jj}}}}{K`{{A`{Jj}}}}{c{{A`{{`{{Ll{}{{Lj{Jj}}}}}}}}}Kh}{K`{{A`{f}}}}0{K`{{A`{d}}}}{{}{{A`{Jn}}}}0;{Jh{{A`{f}}}}{{Jh{Cn{Cl}}}{{A`{D`}}}}{{K`{Cn{Cl}}}{{A`{{Gd{D`Jj}}}}}}787{{JfCf}{{Ch{{A`{{Gd{JhJj}}}}}}}}{{{Cd{Jh}}Cf}{{Ch{{A`{Af}}}}}}{{JhCfCj}{{Ch{{A`{D`}}}}}}{{K`CfCj}{{Ch{{A`{Jj}}}}}}{{K`Cf}{{Ch{{A`{Jj}}}}}}{{{Cd{Jh}}CfCj}{{Ch{{A`{Af}}}}}}{{JhCf}{{Ch{{A`{Af}}}}}}{{K`CfCj}{{Ch{{A`{Af}}}}}}4{{K`Cf}{{Ch{{A`{Af}}}}}}{{K`Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}1{{K`Cf{Cn{Cl}}Jj}{{Ch{{A`{D`}}}}}}9{{{Cd{Jh}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}5{{{Cd{Jh}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}}{Jh{{A`{Af}}}}{K`{{A`{Af}}}}{{JhDn}{{A`{Ef}}}}{{K`Dn}{{A`{Ef}}}}{{K`{Cn{Cl}}}{{A`{D`}}}}{{K`c}{{A`{D`}}}Hn}{{K`c}{{A`{{Gd{D`Jj}}}}}Hn}{Jn{{A`{d}}}}{{K`{Cn{Cl}}}{{A`{{Gd{D`Jj}}}}}}{Jn{{A`{f}}}}52{{K`{Cn{Cl}}c}{{A`{D`}}}Kh}{{K`f}{{A`{Af}}}}{{Jnf}{{A`{Af}}}}{{Jn{Cb{Lh}}}{{A`{Af}}}}{{Jh{Cb{Lh}}}{{A`{Af}}}}33{{K`d}{{A`{Af}}}}3{{Jhf}{{A`{Af}}}}{{Jnd}{{A`{Af}}}}5002{{Jfd}{{A`{Af}}}}{{Jhd}{{A`{Af}}}}4{Jh{{Gd{LnM`}}}}{Jn{{A`{{Cb{Aj}}}}}}{Jh{{A`{{Cb{Aj}}}}}}{K`{{A`{{Cb{Aj}}}}}}`{Jn{{A`{d}}}}{K`{{A`{d}}}}{Kj{{Al{Jfc}}}{}}{c{{Al{e}}}{}{}}0{Kl{{Al{Jhc}}}{}}11{Kn{{Al{K`c}}}{}}2222{{JhDne}{{A`{c}}}{}{{Mb{}{{Kd{{A`{c}}}}}}}}{{K`Dne}{{A`{c}}}{}{{Mb{}{{Kd{{A`{c}}}}}}}}{{K`{Cn{Cl}}}{{A`{{Gd{D`Jj}}}}}}{K`{{A`{Jj}}}}{{Jh{Cn{Cl}}}{{A`{D`}}}}{{Jhc}{{A`{D`}}}Hn}{{Jh{Cn{Md}}}{{A`{D`}}}}{{K`{Cn{Cl}}}{{A`{D`}}}}{{K`c}{{A`{D`}}}Hn}{{K`c}{{A`{{Gd{D`Jj}}}}}Hn}72{{K`{Cn{Cl}}Jj}{{A`{D`}}}}6{{Jh{Cn{Db}}}{{A`{D`}}}}{Jf{{A`{d}}}}{Jh{{A`{d}}}}{K`{{A`{d}}}}{cDl{}}000`{Jh{{A`{Af}}}}{K`{{A`{Af}}}}`````{LnJh}{M`Jh}{L`Jh}{LbJh}{ce{}{}}000000000{LbAf}{{LnBf}Bh}{{M`Bf}Bh}{{L`Bf}Bh}{{LbBf}Bh}{{MfBf}Bh}05{cc{}}000077777{M`f}{Lbf}{Ln{{A`{Jj}}}}{M`{{A`{Jj}}}}{L`{{A`{Jj}}}}{Lb{{A`{Jj}}}}{{Ln{Cn{Cl}}}{{A`{D`}}}}{{L`{Cn{Cl}}}{{A`{D`}}}}5432{{{Cd{M`}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Lb}}Cf}{{Ch{{A`{Af}}}}}}{{LnCfCj}{{Ch{{A`{D`}}}}}}{{L`CfCj}{{Ch{{A`{D`}}}}}}{{{Cd{Ln}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{L`}}CfCj}{{Ch{{A`{Af}}}}}}54{{{Cd{M`}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{Lb}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{M`}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}}{{{Cd{Lb}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}}{Ln{{A`{Af}}}}{L`{{A`{Af}}}}{{LnDn}{{A`{Ef}}}}{{M`Dn}{{A`{Ef}}}}{{L`Dn}{{A`{Ef}}}}{{LbDn}{{A`{Ef}}}}{{L`Lb}{{Al{JhMf}}}}{{LbL`}{{Al{JhMf}}}}{cDf{}}{c{{Al{e}}}{}{}}000000000{{Ln{Cn{Cl}}}{{A`{D`}}}}{{L`{Cn{Cl}}}{{A`{D`}}}}{{Lnc}{{A`{D`}}}Hn}{{L`c}{{A`{D`}}}Hn}{{Ln{Cn{Md}}}{{A`{D`}}}}{{L`{Cn{Md}}}{{A`{D`}}}}{{M`{Cn{Cl}}}{{A`{D`}}}}{{Lb{Cn{Cl}}}{{A`{D`}}}}{{M`{Cn{Db}}}{{A`{D`}}}}{{Lb{Cn{Db}}}{{A`{D`}}}}{cDl{}}0000{M`{{A`{Af}}}}{Lb{{A`{Af}}}}````````````{{Mhf}Mh}00{Mjj}{Mlj}{Mjl}{Mll}{{MjDne}{{A`{c}}}{}{{Kf{}{{Kd{{A`{c}}}}}}}}{{MlDne}{{A`{c}}}{}{{Kf{}{{Kd{{A`{c}}}}}}}}{ce{}{}}0000000000000{MhMh}{MnMn}{N`N`}{NbNb}{{ce}Af{}{}}000{Mj{{A`{Af}}}}{{Mhc}{{A`{Mj}}}{{Ad{Nd}}}}{{MhcNf}{{A`{Mj}}}{{Ad{Nd}}}}2`{{N`N`}f}{{NbNb}f}{{Mhf}Mh}{{MjBf}Bh}{{MlBf}Bh}{{MhBf}Bh}{{MnBf}Bh}{{N`Bf}Bh}{{NbBf}Bh}{{NhBf}Bh}{cc{}}000000{l{{A`{Mj}}}}{l{{A`{Ml}}}}{{N`c}AfNj}{{Nbc}AfNj}{{Mhd}Mh}`{Mj{{A`{Nh}}}}{Ml{{A`{Nh}}}}{ce{}{}}000000{{MhD`}Mh}``{{}Mh}{{}Mn}{{Mnc}{{A`{Ml}}}{{Ad{Nd}}}}{{MncNf}{{A`{Ml}}}{{Ad{Nd}}}}8`{{MhN`}Mh}{{MnN`}Mn}{{{Cd{Mj}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Ml}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Mj}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{Ml}}CfCj}{{Ch{{A`{Af}}}}}}{{MjCf}{{Ch{{A`{Af}}}}}}{{MlCf}{{Ch{{A`{Af}}}}}}54{{{Cd{Mj}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{Ml}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}32{{{Cd{Mj}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}}{{{Cd{Ml}}Cf{Cn{Db}}}{{Ch{{A`{D`}}}}}}{{Mnf}Mn}{Mj{{A`{Af}}}}{Ml{{A`{Af}}}}{{MjDn}{{A`{Ef}}}}{{MlDn}{{A`{Ef}}}}{{Mhf}Mh}{{Mnd}Mn}{ce{}{}}000{c{{Al{e}}}{}{}}0000000000000{{MjDne}{{A`{c}}}{}{{Mb{}{{Kd{{A`{c}}}}}}}}{{MlDne}{{A`{c}}}{}{{Mb{}{{Kd{{A`{c}}}}}}}}{{Mj{Cn{Cl}}}{{A`{D`}}}}{{Ml{Cn{Cl}}}{{A`{D`}}}}{{Mjc}{{A`{D`}}}Hn}{{Mlc}{{A`{D`}}}Hn}{{Mj{Cn{Md}}}{{A`{D`}}}}{{Ml{Cn{Md}}}{{A`{D`}}}}54{{Mj{Cn{Db}}}{{A`{D`}}}}{{Ml{Cn{Db}}}{{A`{D`}}}}{cDl{}}000000{Mj{{A`{Af}}}}{Ml{{A`{Af}}}}{{Mnf}Mn}{{Mhf}Mh}0`````{{Nlc}Nl{{Ad{Nd}}}}{{Nle}Nl{{Ad{Nd}}}{{Nn{}{{Lj{c}}}}}}{O`j}{Obj}{Odj}{O`l}{Obl}{Odl}{NlOf}{ce{}{}}000000000{{Nld}Nl}{{Nlc}Nl{{Ad{Ab}}}}{{Nlce}Nl{{Ad{Nd}}}{{Ad{Nd}}}}{NlNl}={{Nlg}Nl{{Ad{Nd}}}{{Ad{Nd}}}{{Nn{}{{Lj{{Gd{ce}}}}}}}}{{NlBf}Bh}{{OhBf}Bh}{{O`Bf}Bh}{{ObBf}Bh}{{OdBf}Bh}{OfNl}{cc{}}0000{Oj{{A`{O`}}}}{Ol{{A`{Ob}}}}{On{{A`{Od}}}}{Oh{{Cb{d}}}}{ce{}{}}0000{O`{{A`{A`}}}}{Ob{{A`{A`}}}}{Od{{A`{A`}}}}{O`f}{Oh{{A`{Af}}}}{{Nlf}Nl}{cNl{{Ad{Nd}}}}{Nl{{`{{Ad{}{{Kd{{A`{Ab}}}}}}}}}}{{{Cd{O`}}Cf}{{Ch{{A`{Af}}}}}}{{{Cd{Ob}}CfCj}{{Ch{{A`{Af}}}}}}{{{Cd{Od}}CfCj}{{Ch{{A`{Af}}}}}}2{{{Cd{O`}}Cf{Cn{Cl}}}{{Ch{{A`{D`}}}}}}{{{Cd{O`}}Cf{Cn{Db}}}{{Ch{{Al{D`Aj}}}}}}{{Nlc}Nl{{Ad{Nd}}}}{Oh{{Cb{l}}}}{Nl{{A`{Oh}}}};{Nl{{`{{Ad{}{{Kd{{A`{Af}}}}}}}}}}{{Nlc}Nl{{Aj{Ah}}}}`0`0`{c{{Al{e}}}{}{}}0000000{O`{{Al{Ahc}}}{}}1{Ob{{Al{Ahc}}}{}}2{Od{{Al{Ahc}}}{}}{Oh{{A`{{Cb{Af}}}}}}{cDl{}}0000{Oh{{A`{Af}}}}{Oh{{A`{Ab}}}}````````{{Alc}{}Ad}{{Anc}{}Ad}{ce{}{}}00000000000{AA`{{A`{An}}}}{AlAl}{{ce}Af{}{}}{{}Al}{AnAf}{AA`AA`}00{AlAAb}{AnAAb}{{AAdAAd}f}{{AA`d}AA`}{{AA`Bf}Bh}{{AlBf}Bh}{{AAbBf}Bh}{{AAfBf}Bh}0{{AnBf}Bh}{{AAdBf}Bh}{cc{}}000007{AnAl}{ce{}{}}00000{AAff}0{{AA`D`}AA`}0{{}{{A`{An}}}}{{}AA`}0{{AA`c}AA`{AAhAAjAAl}}000{AlAAd}{AnAf}{{AnLh}Af}{{Alc}AAn{AdAAj}}{{Anc}AAn{AdAAj}}{{Ale}{{AAn{c}}}AAj{{Mb{}{{Kd{c}}}}AAj}}{{Ane}{{AAn{c}}}AAj{{Mb{}{{Kd{c}}}}AAj}}{{AA`Lh}AA`}{{AA`c}AA`{{Aj{Df}}}}{{AA`c}AA`{{AAh{}{{Kd{Df}}}}AAjAAl}}=?{cDf{}}{{}{{Al{AlAAf}}}}{c{{Al{e}}}{}{}}00000000000{cDl{}}00000{{AA`D`}AA`}{{}{{A`{Af}}}}``````{ce{}{}}000000000{{}{{A`{AB`}}}}{{}{{A`{ABb}}}}{{}{{A`{ABd}}}}{{}{{A`{ABf}}}}{{}{{A`{ABh}}}}{{ABbBf}Bh}{{AB`Bf}Bh}{{ABdBf}Bh}{{ABhBf}Bh}{{ABfBf}Bh}{cc{}}0000;;;;;{{ABbCf}{{Ch{{Cb{Af}}}}}}{{AB`Cf}{{Ch{{Cb{Af}}}}}}{{ABdCf}{{Ch{{Cb{Af}}}}}}{{ABhCf}{{Ch{{Cb{Af}}}}}}{{ABfCf}{{Ch{{Cb{Af}}}}}}{ABb{{Cb{Af}}}}{AB`{{Cb{Af}}}}{ABd{{Cb{Af}}}}{ABh{{Cb{Af}}}}{ABf{{Cb{Af}}}}{c{{Al{e}}}{}{}}000000000{cDl{}}0000````````````````````````````{ABj{{Al{ABlABn}}}}{{ABjd}{{Al{ABlABn}}}}{{{AC`{ABj}}d}{{Al{ACbABn}}}}{{{AC`{ABj}}}{{Al{ACbABn}}}}{{ABjD`}Af}{ABjD`}{{{ACd{c}}}{{ACf{c}}}Gb}{{{AC`{{ACd{c}}}}}{{ACh{c}}}Gb}{{{ACj{c}}}{{ACl{c}}}Gb}{{{ACj{c}}}{{ACn{c}}}Gb}{ce{}{}}000000000000000000000000000000000000000000000`{{{AD`{c}}}{{AD`{c}}}ADb}{ADdADd}{{ce}Af{}{}}0{ABjAf}{c{{ACd{c}}}{GbGb}}{c{{ACj{c}}}{GbGb}}{{}{{AD`{c}}}{}}{{}ADf}{D`ABj}{c{{AD`{c}}}{}}{{cd}{{ACj{c}}}{GbGb}}{{}{{ACd{c}}}ADh}{{}{{ACj{c}}}{ADhGb}}65{{{ACf{c}}}eGb{}}{{{ACh{c}}}eGb{}}{{{ADj{c}}}eGb{}}{{{ADl{ce}}}gGbGb{}}{{{ADn{ce}}}eGbGb}{{{AE`{c}}}cGb}{{{AEb{ce}}}eGbGb}{{{ACl{c}}}cGb}{{{ACn{c}}}cGb}{{{AEd{c}}}cGb}98764310{{{AE`{c}}}{{ADn{c}}}Gb}{{{ACn{c}}}{{ACl{c}}}Gb}{{{AE`{c}}g}{{ADn{ce}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{ACn{c}}g}{{ACl{e}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{AD`{c}}}Af{}}{{{ACf{c}}}AfGb}{{{ACh{c}}}AfGb}{{{ADj{c}}}AfGb}{{{ADl{ce}}}AfGbGb}{ABlAf}{ACbAf}{{{ADn{ce}}}AfGbGb}{{{AE`{c}}}AfGb}{{{AEb{ce}}}AfGbGb}{{{ACl{c}}}AfGb}{{{ACn{c}}}AfGb}{{{AEd{c}}}AfGb}{{{AD`{c}}{AD`{c}}}fAEf}{{AEhAEh}f}{{{AEj{c}}{AEj{c}}}fAEf}{{{ACd{c}}Bf}Bh{GlGb}}{{{ACj{c}}Bf}Bh{GlGb}}{{{AD`{c}}Bf}BhGl}{{AElBf}Bh}{{ADdBf}Bh}{{{ACf{c}}Bf}Bh{GbGl}}{{{ACf{c}}Bf}Bh{GbAEn}}{{{ACh{c}}Bf}Bh{GbAEn}}{{{ACh{c}}Bf}Bh{GbGl}}{{{ADj{c}}Bf}Bh{GbGl}}{{{ADj{c}}Bf}Bh{GbAEn}}{{{ADl{ce}}Bf}BhGb{GbAEn}}{{{ADl{ce}}Bf}BhGb{GbGl}}{{AF`Bf}Bh}0{{ADfBf}Bh}{{AEhBf}Bh}0{{ABnBf}Bh}0{{ABjBf}Bh}{{ABlBf}Bh}{{ACbBf}Bh}{{{ADn{ce}}Bf}BhGb{GlGb}}{{{ADn{ce}}Bf}BhGb{AEnGb}}{{{AE`{c}}Bf}Bh{AEnGb}}{{{AE`{c}}Bf}Bh{GlGb}}{{{AEb{ce}}Bf}BhGb{GlGb}}{{{AEb{ce}}Bf}BhGb{AEnGb}}{{{ACl{c}}Bf}Bh{AEnGb}}{{{ACl{c}}Bf}Bh{GlGb}}{{{ACn{c}}Bf}Bh{AEnGb}}{{{ACn{c}}Bf}Bh{GlGb}}{{{AEd{c}}Bf}Bh{AEnGb}}{{{AEd{c}}Bf}Bh{GlGb}}{{{AEj{c}}Bf}Bh{}}{{{AEj{c}}Bf}BhGl}{ABlAf}{ACbAf}{{ABjD`}D`}{AFbc{}}{cc{}}{c{{ACd{c}}}{}}{c{{ACj{c}}}{}}323{c{{AD`{c}}}{}}333333333333333333333`{{{AD`{c}}}{{Cb{c}}}{}}{{{ACd{c}}}cGb}{{{ACj{c}}}cGb}2{{{AD`{c}}g}c{}{{Ad{}{{Kd{c}}}}}{{Mb{}{{Kd{e}}}}}}{{{AD`{c}}i}{{Al{ce}}}{}{}{{Ad{}{{Kd{{Al{ce}}}}}}}{{Mb{}{{Kd{g}}}}}}{{{AD`{c}}}f{}}{ce{}{}}0000000000000000000000{{{ACd{c}}}c{GbGb}}{{{ACj{c}}}c{GbGb}}8{{{AE`{c}}}{{AEb{c}}}Gb}{{{ACn{c}}}{{AEd{c}}}Gb}{{{AEj{c}}}f{}}{ABjf}1{ADdf}{{{ACd{c}}}{{ACf{c}}}Gb}{{{AC`{{ACd{c}}}}}{{ACh{c}}}Gb}{{{ACf{c}}g}{{ADj{e}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{ACh{c}}g}{{ADl{ce}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{ADj{c}}g}{{ADj{e}}}Gb{}{{Mb{c}{{Kd{e}}}}}}{{{ADl{ce}}i}{{ADl{cg}}}GbGb{}{{Mb{e}{{Kd{g}}}}}}{{{ADn{ce}}i}{{ADn{cg}}}GbGbGb{{Mb{e}{{Kd{g}}}}}}{{{AE`{c}}g}{{AEb{ce}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{AEb{ce}}i}{{AEb{cg}}}GbGbGb{{Mb{e}{{Kd{g}}}}}}{{{ACl{c}}g}{{ACl{e}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{ACn{c}}g}{{AEd{e}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{{AEd{c}}g}{{AEd{e}}}GbGb{{Mb{c}{{Kd{e}}}}}}{{ABlABl}Af}{{ACbACb}Af}`{{{ACf{c}}}{{ACd{c}}}Gb}{{{ACh{c}}}{{AC`{{ACd{c}}}}}Gb}{c{{ACd{c}}}{GbGb}}{c{{ACj{c}}}{GbGb}}{{}{{AD`{c}}}{}}{D`AEl}{{}ADf}{D`ABj}{{{Cb{c}}}{{AD`{c}}}{}}{ADfAFd}{ADfAf}0`{{{ACj{c}}}{{ACl{c}}}Gb}{{{AC`{{ACj{c}}}}}{{ADn{c}}}Gb}{{{ADn{ce}}}{{AC`{{ACj{c}}}}}GbGb}{{{AE`{c}}}{{AC`{{ACj{c}}}}}Gb}{{{AEb{ce}}}{{AC`{{ACj{c}}}}}GbGb}{ACb{{AC`{ABj}}}}{{{AD`{c}}c}{{Al{Af{AEj{c}}}}}{}}{{{AD`{c}}}{{Cb{c}}}{}}{ce{}{}}0{cDf{}}0000000000000{ABj{{Al{ABlAEh}}}}{{ABjd}{{Al{ABlAEh}}}}{{{AC`{ABj}}d}{{Al{ACbAEh}}}}{{{AC`{ABj}}}{{Al{ACbAEh}}}}{{{AE`{c}}g}{{Al{{ADn{ce}}{AE`{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ACn{c}}g}{{Al{{ACl{e}}{ACn{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{c{{Al{e}}}{}{}}000000000000000000000000000000000000000000000{{{ACd{c}}}{{Al{{ACf{c}}AF`}}}Gb}{{{AC`{{ACd{c}}}}}{{Al{{ACh{c}}AF`}}}Gb}{{{ACf{c}}g}{{Al{{ADj{e}}{ACf{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ACh{c}}g}{{Al{{ADl{ce}}{ACh{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ADj{c}}g}{{Al{{ADj{e}}{ADj{c}}}}}Gb{}{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ADl{ce}}i}{{Al{{ADl{cg}}{ADl{ce}}}}}GbGb{}{{Mb{e}{{Kd{{Cb{g}}}}}}}}{{{ADn{ce}}i}{{Al{{ADn{cg}}{ADn{ce}}}}}GbGbGb{{Mb{e}{{Kd{{Cb{g}}}}}}}}{{{AE`{c}}g}{{Al{{AEb{ce}}{AE`{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{AEb{ce}}i}{{Al{{AEb{cg}}{AEb{ce}}}}}GbGbGb{{Mb{e}{{Kd{{Cb{g}}}}}}}}{{{ACl{c}}g}{{Al{{ACl{e}}{ACl{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ACn{c}}g}{{Al{{AEd{e}}{ACn{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{AEd{c}}g}{{Al{{AEd{e}}{AEd{c}}}}}GbGb{{Mb{c}{{Kd{{Cb{e}}}}}}}}{{{ACj{c}}}{{Al{{ACl{c}}AF`}}}Gb}{{{AC`{{ACj{c}}}}}{{Al{{ADn{c}}AF`}}}Gb}{{{ACj{c}}}{{Al{{ACn{c}}AF`}}}Gb}{{{AC`{{ACj{c}}}}}{{Al{{AE`{c}}AF`}}}Gb}{cDl{}}0000000000000000000000{AElADd}`{{cd}{{ACj{c}}}{GbGb}}{{{ACj{c}}}{{ACn{c}}}Gb}{{{AC`{{ACj{c}}}}}{{AE`{c}}}Gb}``{{{AFf{c}}}{{Al{cAFh}}}ADb}{ce{}{}}000{D`{{Gd{{AFj{c}}{AFf{c}}}}}ADb}{{{AFj{c}}}{{AFj{c}}}{}}{{ce}Af{}{}}{{{AFj{c}}}Af{}}{{{AFf{c}}}Af{}}`{{{AFj{c}}Bf}Bh{}}{{{AFf{c}}Bf}Bh{}}{cc{}}088{{{AFj{c}}}f{}}{{{AFf{c}}}f{}}{{{AFj{c}}}D`{}}{{{AFf{c}}}D`{}}{D`{{AFj{c}}}{}}2>{{{AFf{c}}}{{AFf{c}}}ADb}{{{AFj{c}}{AFj{c}}}f{}}{{{AFf{c}}{AFf{c}}}f{}}{{{AFj{c}}c}{{Al{D`{AFl{c}}}}}{}}{{{AFj{c}}}{{AFf{c}}}{}}{ce{}{}}{c{{Al{e}}}{}{}}000{{{AFf{c}}}{{Al{cAFn}}}ADb}{cDl{}}0````````333333{AFhAFh}{AFnAFn}{{ce}Af{}{}}0{{AFhAFh}f}{{AFnAFn}f}{{{AFl{c}}Bf}BhGl}{{{AFl{c}}Bf}Bh{}}{{AFhBf}Bh}0{{AFnBf}Bh}0{cc{}}00====={cDf{}}00======;;;`>>{AFdAf}{{{Cd{AFd}}}f}{{AFdBf}Bh}4{ce{}{}}{c{}{}}{{{Cd{AFd}}Cf}{{Ch{Af}}}}{c{{Al{e}}}{}{}}0{cDl{}}`````````{{{AG`{c}}}{{Cb{c}}}{}}{{{AGb{c}}}{{Cb{c}}}{}}{{{AGd{c}}c}{{Al{Af{AGf{c}}}}}{}}777777777777777777{{{AGd{c}}}D`{}}{D`{{Gd{{AGd{c}}{AG`{c}}}}}{}}{{{AGd{c}}}{{AGd{c}}}{}}{{{AGh{c}}}{{AGh{c}}}{}}{{{AGj{c}}}{{AGj{c}}}{}}{{{AGl{c}}}{{AGl{c}}}{}}{{ce}Af{}{}}000{{{AG`{c}}}Af{}}{{{AGb{c}}}Af{}}{{{AGd{c}}}Af{}}{{{AGj{c}}}Af{}}{{{AGd{c}}}{{AGh{c}}}{}}{{{AGj{c}}}{{AGl{c}}}{}}{{{AGh{c}}}Af{}}{{{AGn{c}}}Af{}}{{{AH`{c}}}Af{}}{{{AHb{c}}}Af{}}{{{AGl{c}}}Af{}}`{{{AGd{c}}Bf}Bh{}}{{{AGh{c}}Bf}Bh{}}{{{AGn{c}}Bf}Bh{}}{{{AH`{c}}Bf}Bh{}}{{{AHb{c}}Bf}Bh{}}{{{AG`{c}}Bf}Bh{}}{{{AGj{c}}Bf}Bh{}}{{{AGl{c}}Bf}Bh{}}{{{AGb{c}}Bf}Bh{}}{cc{}}00000000{ce{}{}}000000000{{{AGd{c}}}f{}}{{{AG`{c}}}f{}}{{{AGj{c}}}f{}}{{{AGb{c}}}f{}}20{{{AG`{c}}}D`{}}{{{AGb{c}}}D`{}}{{{AGd{c}}}D`{}}{{{AH`{c}}}{{Cb{e}}}{}{}}{{{AG`{c}}Cf}{{Ch{{Cb{c}}}}}{}}{{{AGb{c}}Cf}{{Ch{{Cb{c}}}}}{}}{{{AG`{c}}Cf{Dd{c}}D`}{{Ch{D`}}}{}}{{{AGb{c}}Cf{Dd{c}}D`}{{Ch{D`}}}{}}{{{AG`{c}}}{{Cb{c}}}{}}{{{AGb{c}}}{{Cb{c}}}{}}{{{AG`{c}}{Dd{c}}D`}D`{}}{{{AGb{c}}{Dd{c}}D`}D`{}}{{{AHb{c}}}{{AGd{c}}}{}}{{{AGd{c}}}{{Al{{AGn{c}}{AGf{Af}}}}}{}}{{{AGd{c}}D`}{{Al{{AH`{c}}{AGf{Af}}}}}{}}{{{AGd{c}}}{{Al{{AHb{c}}{AGf{Af}}}}}{}}{{{AGd{c}}{AGd{c}}}f{}}{{{AGj{c}}{AGj{c}}}f{}}{{{AGd{c}}c}{{Al{Af{AGf{c}}}}}{}}{{{AGn{c}}c}Af{}}{{{AHb{c}}c}{{AGd{c}}}{}}{{{AGj{c}}c}{{Al{Af{AGf{c}}}}}{}}{{{AGd{c}}cLh}{{Al{Af{AHd{c}}}}}{}}{{{AH`{c}}}{{Gd{D`{Cb{D`}}}}}{}}{{{AGd{c}}}D`{}}{{{AGh{c}}}D`{}}{{{AGj{c}}}D`{}}{{{AGl{c}}}D`{}}{ce{}{}}000{c{{Al{e}}}{}{}}00000000000000000{{{AG`{c}}}{{Al{cAHf}}}{}}{{{AGb{c}}}{{Al{cAHf}}}{}}{{{AGd{c}}}{{Al{{AGn{c}}{AHh{Af}}}}}{}}{{{AGd{c}}D`}{{Al{{AH`{c}}{AHh{Af}}}}}{}}{{{AGd{c}}}{{Al{{AHb{c}}{AHh{{AGd{c}}}}}}}{}}{{{AGd{c}}c}{{Al{Af{AHh{c}}}}}{}}{cDl{}}00000000{{}{{Gd{{AGj{c}}{AGb{c}}}}}{}}{{{AGh{c}}}{{Cb{{AGd{c}}}}}{}}{{{AGl{c}}}{{Cb{{AGj{c}}}}}{}}?>=<``````````;;;;;;;;{{{AGf{c}}}{{AGf{c}}}ADb}{{{AHh{c}}}{{AHh{c}}}ADb}{AHfAHf}{{{AHd{c}}}{{AHd{c}}}ADb}{{ce}Af{}{}}000{{{AGf{c}}{AGf{c}}}fAEf}{{{AHh{c}}{AHh{c}}}fAEf}{{AHfAHf}f}{{{AHd{c}}{AHd{c}}}fAEf}{{{AGf{c}}Bf}Bh{}}0{{{AHh{c}}Bf}Bh{}}0{{AHfBf}Bh}0{{{AHd{c}}Bf}Bh{}}0{cc{}}0{{{AGf{c}}}{{AHh{c}}}{}}11{ce{}{}}0000000{cDf{}}000{c{{Al{e}}}{}{}}0000000{cDl{}}000``{{{AHj{c}}}{{Al{cAHl}}}{}}4444{{}{{Gd{{AHn{c}}{AHj{c}}}}}{}}{{{AHj{c}}}Af{}}{{{AHn{c}}}Af{}}01`{{{AHn{c}}Bf}BhGl}{{{AHj{c}}Bf}BhGl};;99{c{}{}}{{{AHn{c}}}f{}}{{{Cd{{AHj{c}}}}Cf}{{Ch{e}}}{}{}}{{{AHn{c}}Cf}{{Ch{Af}}}{}}{{{AHn{c}}c}{{Al{Afc}}}{}}<<<<{{{AHj{c}}}{{Al{cAI`}}}{}}<<````????{AHlAHl}{AI`AI`}{{ce}Af{}{}}0{{AHlAHl}f}{{AI`AI`}f}{{AHlBf}Bh}0{{AI`Bf}Bh}0{cc{}}0{ce{}{}}000{cDf{}}0{c{{Al{e}}}{}{}}000{cDl{}}0```{{{AIb{c}}}{{AId{c}}}{}}44{{{AIf{c}}}{{AId{c}}}{}}51555{{{AIb{c}}}{{Al{AfAIh}}}{}}{c{{Gd{{AIf{c}}{AIb{c}}}}}{}}{{{AIb{c}}}{{AIb{c}}}{}}{{{AIf{c}}}{{AIf{c}}}{}}??{{{AIf{c}}}Af{}}{{{AId{c}}}c{}}{{{AIb{c}}}Af{}}2`{{{AIb{c}}Bf}BhGl}{{{AIf{c}}Bf}BhGl}{{{AId{c}}Bf}BhGl}{cc{}}00{{{AIb{c}}}{{Al{fAIh}}}{}}{{{AId{c}}}f{}}{ce{}{}}00{{{AIf{c}}}f{}}88{c{{AIf{c}}}{}}{{{AIf{c}}}D`{}}{{{AIb{c}}{AIb{c}}}f{}}{{{AIf{c}}c}{{Al{Af{AIj{c}}}}}{}}{{{AIf{c}}e}f{}{{Mb{c}{{Kd{f}}}}}}{{{AIf{c}}e}Af{}{{Mb{c}}}}{{{AIf{c}}c}c{}}{{{AIf{c}}}{{AIb{c}}}{}}99{c{{Al{e}}}{}{}}00000{cDl{}}00{{{AIb{c}}e}{{Al{{AId{c}}AIh}}}{}{{Kf{c}{{Kd{f}}}}}}``<<<<{{{AIj{c}}}{{AIj{c}}}ADb}{AIhAIh}{{ce}Af{}{}}0{{{AIj{c}}{AIj{c}}}fAEf}{{{AIj{c}}Bf}Bh{}}0{{AIhBf}Bh}0{cc{}}0{ce{}{}}000{cDf{}}0;;;;::````````{AIlAf}{{{AAn{c}}}Af{}}{{{AIn{c}}}Af{}}{{{AAn{c}}}AIl{}}{ec{}{{Mb{}{{Kd{c}}}}}}{{AJ`Anc}{}Ad}7777777777777777{{}{{AIn{c}}}{}}{{}AJ`}576{AJbAf}6{AJ`Af}{AJ`AJb}{{AIlBf}Bh}{{AJdBf}Bh}0{{{AAn{c}}Bf}BhGl}{{AJbBf}Bh}{{{AJf{c}}Bf}Bh{}}{{{AIn{c}}Bf}Bh{}}{{AJ`Bf}Bh}{cc{}}0000000{g{{AIn{c}}}AAj{{Ad{}{{Kd{c}}}}AAj}{{Nn{}{{Lj{e}}}}}}`{{{AJf{c}}}cAJh}{ce{}{}}0000000{c{}{}}00{AJd{{AJl{AJj}}}}{AJdf}{{{AIn{c}}}f{}}{AIlf}{{{AAn{c}}}f{}}3{{{AIn{c}}}{{Cb{{Al{cAJd}}}}}{}}{{{AIn{c}}}D`{}}{{}{{AIn{c}}}{}}{{}AJ`}{{{Cd{{AAn{c}}}}Cf}{{Ch{e}}}{}{}}{{{Cd{AJ`}}Cf}{{Ch{c}}}{}}{{{Cd{{AJn{c}}}}Cf}{{Ch{e}}}Ad{}}{{{AIn{c}}Cf}{{Ch{{Cb{{Al{cAJd}}}}}}}{}}{{AJ`c}{}Ad}{{{AJf{c}}ce}{{AK`{ce}}}{}Ad}{{{AIn{c}}}Af{}}{cAAn{AdAAj}}{{{AIn{c}}e}AIlAAj{{Ad{}{{Kd{c}}}}AAj}}{e{{AAn{c}}}AAj{{Mb{}{{Kd{c}}}}AAj}}{{{AIn{c}}e}AIlAAj{{Mb{}{{Kd{c}}}}AAj}}{{{AIn{c}}eAl}AIlAAj{{Mb{}{{Kd{c}}}}AAj}}{cAAnAd}{{{AIn{c}}e}AIl{}{{Ad{}{{Kd{c}}}}}}{{AJ`c}AAnAd}{{{AIn{c}}eAJ`}AIl{}{{Ad{}{{Kd{c}}}}}}{{{AIn{c}}eAl}AIlAAj{{Ad{}{{Kd{c}}}}AAj}}{{{AJf{c}}cg}e{}{}{{Mb{}{{Kd{e}}}}}}{cDf{}}{c{{Al{e}}}{}{}}000000000000000{AJd{{Al{{AJl{AJj}}AJd}}}}{{{AIn{c}}}{{Cb{{Al{cAJd}}}}}{}}{{{AJf{c}}g}{{Al{e`}}}{}{}{{Mb{c}{{Kd{e}}}}}}{cDl{}}0000000{c{{AJn{c}}}{}}{{{AJf{c}}g}e{}{}{{Mb{c}{{Kd{e}}}}}}{{}Af}`{ce{}{}}0{{{AK`{ce}}}Af{}{}}{{{AK`{ce}}Bf}BhGl{}}{cc{}}3{c{}{}}{{{Cd{{AK`{ce}}}}Cf}{{Ch{g}}}{}Ad{}}{{{Cd{{AK`{ce}}}}}{{Cb{c}}}{}{}}>>:`````````{{AKbLh}AKb}{{AKbLh}Af}8888888888{{AKbLh}{{Cb{AKb}}}}{{AKbAKb}{{Cb{Lh}}}}1{AKbAKb}{AKdAKd}{{ce}Af{}{}}0{{AKbAKb}Fd}{AKfAKb}{{}AKd}{{AKbAKb}Lh}{AKbLh}{{AKbAKb}f}{{AKdAKd}f}`{{AKbBf}Bh}{{AKdBf}Bh}{{AKhBf}Bh}{{{AKj{c}}Bf}BhGl}{{AKfBf}Bh}{AKlAKb}{cc{}}00001{{{AKj{c}}}c{}}0{{AKbc}AfNj}{LhAKh}{{AKbLh}AKh}{ce{}{}}0000{c{}{}}05{AKbAKl}{AKff}{AKhAKd}{{}AKb}{{AKbAKb}{{Cb{Fd}}}}{AKhLh}{{{Cd{{AKj{c}}}}Cf}{{Ch{e}}}Ad{}}{{{Cd{AKf}}Cf}{{Ch{c}}}{}}{{AKhCf}{{Ch{AKb}}}}{AKhAf}{{{Cd{AKf}}AKb}Af}{{AKhLh}Af}{{AKhAKb}Af}3{{AKbAKb}Lh}{{AKhAKd}Af}{LhAKf}{AKbAKf}{{AKbLh}AKb}4{{AKbLh}Af}{AKhAKb}{{Lhc}{{AKj{c}}}Ad}{{AKbc}{{AKj{c}}}Ad}{ce{}{}}0{c{{Al{e}}}{}{}}000000000{cDl{}}0000``{{}AKn}3333{AKnAKn}{{ce}Af{}{}}{{AL`AL`}f}{{AKnBf}Bh}0{{AL`Bf}Bh}0{cc{}}0996{AKnf}007:{cDf{}}0::::99","c":[],"p":[[5,"OpenOptions",18],[1,"u32"],[1,"bool"],[5,"File",18],[5,"BorrowedHandle",2477],[8,"RawHandle",2478],[5,"PathBuf",2479],[8,"Result",2480],[5,"Path",2479],[10,"AsRef",2481],[1,"unit"],[1,"u64"],[5,"Error",2480],[6,"Result",2482],[5,"DirBuilder",18],[5,"DirEntry",18],[5,"OsString",2483],[5,"FileType",2484],[5,"Formatter",2485],[8,"Result",2485],[5,"ReadDir",18],[5,"File",2484],[5,"OpenOptions",2484],[5,"Metadata",2484],[6,"Option",2486],[5,"Pin",2487],[5,"Context",2488],[6,"Poll",2489],[5,"ReadBuf",136],[1,"u8"],[1,"slice"],[1,"usize"],[5,"IoSlice",2490],[5,"Vec",2491],[5,"String",2492],[5,"Permissions",2484],[6,"SeekFrom",2490],[5,"TypeId",2493],[5,"Interest",136],[5,"Stderr",136],[5,"Stdin",136],[5,"Stdout",136],[5,"Ready",136],[5,"BufWriter",136],[10,"AsyncWrite",136],[5,"BufReader",136],[10,"AsyncRead",136],[10,"AsyncReadExt",136],[5,"UninitSlice",2494],[6,"Ordering",2495],[10,"AsyncBufRead",136],[10,"AsyncBufReadExt",136],[5,"Empty",136],[5,"Take",136],[5,"BufStream",136],[10,"Unpin",2496],[10,"Sized",2496],[1,"tuple"],[5,"DuplexStream",136],[10,"AsyncWriteExt",136],[5,"ReadHalf",136],[10,"Debug",2485],[5,"WriteHalf",136],[5,"Join",136],[5,"Repeat",136],[5,"Sink",136],[5,"Split",136],[5,"Lines",136],[20,"MaybeUninit",2497],[10,"AsyncSeek",136],[10,"BufMut",2498],[10,"AsyncSeekExt",136],[10,"Buf",2499],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"u128"],[1,"u16"],[5,"TcpListener",657],[5,"TcpStream",657],[6,"SocketAddr",2500],[8,"RawSocket",2478],[5,"TcpSocket",657],[5,"UdpSocket",657],[5,"BorrowedSocket",2501],[17,"Output"],[10,"FnMut",2502],[10,"ToSocketAddrs",657],[5,"TcpListener",2503],[5,"TcpStream",2503],[5,"UdpSocket",2504],[5,"OwnedReadHalf",826],[5,"OwnedWriteHalf",826],[5,"Ipv4Addr",2505],[5,"Ipv6Addr",2505],[5,"Duration",2506],[17,"Item"],[10,"Iterator",2507],[5,"ReadHalf",826],[5,"WriteHalf",826],[10,"FnOnce",2502],[5,"IoSliceMut",2490],[5,"ReuniteError",826],[5,"ServerOptions",924],[5,"NamedPipeServer",924],[5,"NamedPipeClient",924],[5,"ClientOptions",924],[6,"PipeMode",924],[6,"PipeEnd",924],[5,"OsStr",2483],[6,"c_void",2508],[5,"PipeInfo",924],[10,"Hasher",2509],[5,"Command",1077],[10,"IntoIterator",2510],[5,"ChildStdin",1077],[5,"ChildStdout",1077],[5,"ChildStderr",1077],[5,"Command",2511],[5,"Child",1077],[5,"ChildStdin",2511],[5,"ChildStdout",2511],[5,"ChildStderr",2511],[5,"OwnedHandle",2477],[5,"Output",2511],[10,"Future",2512],[5,"ExitStatus",2511],[5,"Stdio",2511],[10,"Into",2481],[5,"Handle",1173],[5,"Runtime",1173],[5,"Builder",1173],[5,"EnterGuard",1173],[6,"RuntimeFlavor",1173],[5,"TryCurrentError",1173],[10,"Fn",2502],[10,"Send",2496],[10,"Sync",2496],[5,"JoinHandle",2202],[5,"CtrlBreak",1274],[5,"CtrlC",1274],[5,"CtrlClose",1274],[5,"CtrlLogoff",1274],[5,"CtrlShutdown",1274],[5,"Semaphore",1334],[5,"SemaphorePermit",1334],[5,"AcquireError",1334],[5,"Arc",2513],[5,"OwnedSemaphorePermit",1334],[5,"Mutex",1334],[5,"MutexGuard",1334],[5,"OwnedMutexGuard",1334],[5,"RwLock",1334],[5,"RwLockReadGuard",1334],[5,"RwLockWriteGuard",1334],[5,"OnceCell",1334],[10,"Clone",2514],[5,"BarrierWaitResult",1334],[5,"Notify",1334],[10,"Default",2515],[5,"MappedMutexGuard",1334],[5,"OwnedMappedMutexGuard",1334],[5,"OwnedRwLockReadGuard",1334],[5,"OwnedRwLockWriteGuard",1334],[5,"OwnedRwLockMappedWriteGuard",1334],[5,"RwLockMappedWriteGuard",1334],[10,"PartialEq",2495],[6,"TryAcquireError",1334],[6,"SetError",1334],[5,"Barrier",1334],[10,"Display",2485],[5,"TryLockError",1334],[1,"never"],[5,"Notified",1815],[5,"Receiver",1730],[6,"RecvError",1769],[5,"Sender",1730],[5,"SendError",1769],[6,"TryRecvError",1769],[5,"Receiver",1828],[5,"UnboundedReceiver",1828],[5,"Sender",1828],[5,"SendError",1986],[5,"WeakSender",1828],[5,"UnboundedSender",1828],[5,"WeakUnboundedSender",1828],[5,"Permit",1828],[5,"PermitIterator",1828],[5,"OwnedPermit",1828],[6,"SendTimeoutError",1986],[6,"TryRecvError",1986],[6,"TrySendError",1986],[5,"Receiver",2053],[5,"RecvError",2084],[5,"Sender",2053],[6,"TryRecvError",2084],[5,"Receiver",2116],[5,"Ref",2116],[5,"Sender",2116],[5,"RecvError",2173],[5,"SendError",2173],[5,"AbortHandle",2202],[5,"JoinSet",2202],[5,"LocalSet",2202],[5,"LocalEnterGuard",2202],[5,"JoinError",2202],[5,"LocalKey",2202],[10,"Copy",2496],[10,"Any",2493],[5,"Box",2516],[5,"Unconstrained",2202],[5,"TaskLocalFuture",2330],[5,"Instant",2343],[6,"MissedTickBehavior",2343],[5,"Sleep",2343],[5,"Interval",2343],[5,"Timeout",2343],[5,"Instant",2517],[5,"Error",2445],[5,"Elapsed",2445]],"b":[[300,"impl-From%3CBufWriter%3CBufReader%3CRW%3E%3E%3E-for-BufStream%3CRW%3E"],[301,"impl-From%3CBufReader%3CBufWriter%3CRW%3E%3E%3E-for-BufStream%3CRW%3E"],[850,"impl-Debug-for-ReuniteError"],[851,"impl-Display-for-ReuniteError"],[1210,"impl-Debug-for-TryCurrentError"],[1211,"impl-Display-for-TryCurrentError"],[1478,"impl-Debug-for-MutexGuard%3C\'_,+T%3E"],[1479,"impl-Display-for-MutexGuard%3C\'_,+T%3E"],[1480,"impl-Display-for-OwnedMutexGuard%3CT%3E"],[1481,"impl-Debug-for-OwnedMutexGuard%3CT%3E"],[1482,"impl-Debug-for-MappedMutexGuard%3C\'a,+T%3E"],[1483,"impl-Display-for-MappedMutexGuard%3C\'a,+T%3E"],[1484,"impl-Display-for-OwnedMappedMutexGuard%3CT,+U%3E"],[1485,"impl-Debug-for-OwnedMappedMutexGuard%3CT,+U%3E"],[1486,"impl-Debug-for-TryLockError"],[1487,"impl-Display-for-TryLockError"],[1489,"impl-Display-for-TryAcquireError"],[1490,"impl-Debug-for-TryAcquireError"],[1491,"impl-Debug-for-AcquireError"],[1492,"impl-Display-for-AcquireError"],[1496,"impl-Debug-for-OwnedRwLockReadGuard%3CT,+U%3E"],[1497,"impl-Display-for-OwnedRwLockReadGuard%3CT,+U%3E"],[1498,"impl-Display-for-OwnedRwLockWriteGuard%3CT%3E"],[1499,"impl-Debug-for-OwnedRwLockWriteGuard%3CT%3E"],[1500,"impl-Debug-for-OwnedRwLockMappedWriteGuard%3CT,+U%3E"],[1501,"impl-Display-for-OwnedRwLockMappedWriteGuard%3CT,+U%3E"],[1502,"impl-Display-for-RwLockReadGuard%3C\'a,+T%3E"],[1503,"impl-Debug-for-RwLockReadGuard%3C\'a,+T%3E"],[1504,"impl-Display-for-RwLockWriteGuard%3C\'a,+T%3E"],[1505,"impl-Debug-for-RwLockWriteGuard%3C\'a,+T%3E"],[1506,"impl-Display-for-RwLockMappedWriteGuard%3C\'a,+T%3E"],[1507,"impl-Debug-for-RwLockMappedWriteGuard%3C\'a,+T%3E"],[1508,"impl-Display-for-SetError%3CT%3E"],[1509,"impl-Debug-for-SetError%3CT%3E"],[1789,"impl-Debug-for-SendError%3CT%3E"],[1790,"impl-Display-for-SendError%3CT%3E"],[1791,"impl-Debug-for-RecvError"],[1792,"impl-Display-for-RecvError"],[1793,"impl-Display-for-TryRecvError"],[1794,"impl-Debug-for-TryRecvError"],[2016,"impl-Debug-for-SendError%3CT%3E"],[2017,"impl-Display-for-SendError%3CT%3E"],[2018,"impl-Debug-for-TrySendError%3CT%3E"],[2019,"impl-Display-for-TrySendError%3CT%3E"],[2020,"impl-Display-for-TryRecvError"],[2021,"impl-Debug-for-TryRecvError"],[2022,"impl-Display-for-SendTimeoutError%3CT%3E"],[2023,"impl-Debug-for-SendTimeoutError%3CT%3E"],[2098,"impl-Debug-for-RecvError"],[2099,"impl-Display-for-RecvError"],[2100,"impl-Debug-for-TryRecvError"],[2101,"impl-Display-for-TryRecvError"],[2184,"impl-Display-for-SendError%3CT%3E"],[2185,"impl-Debug-for-SendError%3CT%3E"],[2186,"impl-Display-for-RecvError"],[2187,"impl-Debug-for-RecvError"],[2242,"impl-Display-for-JoinError"],[2243,"impl-Debug-for-JoinError"],[2422,"impl-Sub%3CDuration%3E-for-Instant"],[2423,"impl-Sub-for-Instant"],[2455,"impl-Display-for-Error"],[2456,"impl-Debug-for-Error"],[2457,"impl-Display-for-Elapsed"],[2458,"impl-Debug-for-Elapsed"]]}],\
["tokio_macros",{"doc":"Macros for use with Tokio","t":"XXXXXX","n":["main","main_fail","main_rt","test","test_fail","test_rt"],"q":[[0,"tokio_macros"]],"d":["Marks async function to be executed by the selected …","Always fails with the error message below.","Marks async function to be executed by selected runtime. …","Marks async function to be executed by runtime, suitable …","Always fails with the error message below.","Marks async function to be executed by runtime, suitable …"],"i":[0,0,0,0,0,0],"f":"``````","c":[],"p":[],"b":[]}],\
["unicode_ident",{"doc":"github crates-io docs-rs","t":"HH","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":"{bd}0","c":[],"p":[[1,"char"],[1,"bool"]],"b":[]}],\
["windows_sys",{"doc":"Learn more about Rust for Windows here: …","t":"QQ","n":["s","w"],"q":[[0,"windows_sys"]],"d":["A literal UTF-8 string with a trailing null terminator.","A literal UTF-16 wide string with a trailing null …"],"i":[0,0],"f":"``","c":[],"p":[],"b":[]}],\
["windows_targets",{"doc":"Learn more about Rust for Windows here: …","t":"Q","n":["link"],"q":[[0,"windows_targets"]],"d":["Defines an external function to import."],"i":[0],"f":"`","c":[],"p":[],"b":[]}],\
["windows_x86_64_msvc",{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":"","c":[],"p":[],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
